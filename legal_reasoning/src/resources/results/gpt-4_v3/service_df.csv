,number,content,section,Punktzahl,1.0-fach,2.3-fach,3.5-fach,reference,parsed_references,rule,llm_response,query,llm_inputs,llm_calls,prompt_tokens,completion_tokens,total_cost,parsed_code
0,10,"Eingehende Untersuchung zur
Feststellung von Zahn-, Mund- und
Kiefererkrankungen einschließlich
Erhebung des Parodontalbefun -
des sowie Aufzeichnung des Be -
fundes",A_Allgemeine_zahnärztliche_Leistungen,100.0,5.62,12.94,19.68,The text does not mention any references to other paragraphs.,,,,,,,,,,
1,30,"Aufstellung eines schriftlichen Heil-
und Kostenplans nach Befundauf -
nahme und gegebenenfalls Aus -
wertung von Modellen",A_Allgemeine_zahnärztliche_Leistungen,200.0,11.25,25.87,39.37,The text provided does not mention any references to other paragraphs.,,,,,,,,,,
2,40,"Aufstellung eines schriftlichen Heil-
und Kostenplans bei kieferortho -
pädischer Behandlung oder bei
funktionsanalytischen und funkti -
onstherapeutischen Maßnahmen
nach Befundaufnahme und Aus -
arbeitung einer Behandlungspla -
nung
Die Leistungen nach den Num -
mern 0030 und 0040 sind nicht ne -
beneinander berechnungsfähig.",A_Allgemeine_zahnärztliche_Leistungen,250.0,14.06,32.34,49.21,"References: Nummern 0030, 0040",,Die Leistungen nach den Nummern 0030 und 0040 sind nicht nebeneinander berechnungsfähig.,"---
Rule 1:
Thoughts: This rule states that the services with numbers 0030 and 0040 cannot be billed together. This can be translated into a rule that checks if both services are present in the same invoice. If they are, the invoice is invalid.

Translation:
```prolog
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    member(service(0030, _, _, _, _, _, _, _), Services),
    member(service(0040, _, _, _, _, _, _, _), Services),
    print('Services 0030 and 0040 cannot be billed together.'),
    true.
```
---
Rule 2:
Thoughts: This rule states that if services 0050 and 0060 are billed together, a justification must be provided in the invoice. This can be translated into a rule that checks if both services are present and if the justification field is empty.

Translation:
```prolog
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    member(service(0050, _, _, _, _, _, Justification, _), Services),
    member(service(0060, _, _, _, _, _, Justification, _), Services),
    Justification = '',
    print('Justification must be provided when services 0050 and 0060 are billed together.'),
    true.
```
---
Rule 3:
Thoughts: This rule states that if service 0065 is billed, no other conventional impressions for the same jaw side or front tooth area can be billed. This rule cannot be translated as it is not clear what constitutes a ""conventional impression"" in the context of the provided predicates.

Translation:
```prolog
```
---
Rule 4:
Thoughts: This rule states that if service 0090 is billed more than once per tooth, a justification must be provided. This can be translated into a rule that checks if service 0090 is billed more than once for the same tooth and if the justification field is empty.

Translation:
```prolog
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(T, member(service(0090, _, _, _, _, _, _, T), Services), Teeth),
    sort(Teeth, SortedTeeth),
    length(Teeth, L1),
    length(SortedTeeth, L2),
    L1 \= L2,
    member(service(0090, _, _, _, _, _, Justification, _), Services),
    Justification = '',
    print('Justification must be provided when service 0090 is billed more than once for the same tooth.'),
    true.
```
---
Rule 5:
Thoughts: This rule states that the costs of the anesthetics used for services 0090 and 0100 can be billed separately. This rule cannot be translated as there is no information on how to represent the costs of anesthetics in the provided predicates.

Translation:
```prolog
```
---
Rule 6:
Thoughts: This rule states that the surcharge for service 0110 can only be billed once per treatment day and only at the simple rate. This can be translated into a rule that checks if service 0110 is billed more than once per day or if the multiplier is not 1.

Translation:
```prolog
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(D, member(service(0110, D, Multiplier, _, _, _, _, _), Services), Dates),
    sort(Dates, SortedDates),
    length(Dates, L1),
    length(SortedDates, L2),
    (L1 \= L2 ; Multiplier \= 1),
    print('Service 0110 can only be billed once per treatment day and only at the simple rate.'),
    true.
```
---
Rule 7:
Thoughts: This rule states that a surcharge can be applied for the use of a laser for certain services. This rule cannot be translated as there is no information on how to represent the use of a laser or the surcharge in the provided predicates.

Translation:
```prolog
```
---
Rule 8:
Thoughts: This rule states that the surcharge for service 0120 is 100% of the simple rate of the corresponding service, but not more than 68 Euros. This rule cannot be translated as there is no information on how to represent the surcharge in the provided predicates.

Translation:
```prolog
```
---
Rule 9:
Thoughts: This rule states that the surcharge for service 0120 can only be billed once per treatment day. This can be translated into a rule that checks if service 0120 is billed more than once per day.

Translation:
```prolog
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(D, member(service(0120, D, _, _, _, _, _, _), Services), Dates),
    sort(Dates, SortedDates),
    length(Dates, L1),
    length(SortedDates, L2),
    L1 \= L2,
    print('Service 0120 can only be billed once per treatment day.'),
    true.
```
",,"Given this rules from the german GOZ:
---
Die Leistungen nach den Nummern 0030 und 0040 sind nicht nebeneinander berechnungsfähig.
---
Die Nebeneinanderberechnung der Leistungen nach den Nummern 0050 und 0060 ist in der Rechnung zu begründen.
---
Neben der Leistung nach der Nummer 0065 sind konventionelle Abformungen nach diesem Gebührenverzeichnis für dieselbe Kieferhälfte oder denselben Frontzahnbereich nicht berechnungsfähig.
---
Wird die Leistung nach der Nummer 0090 je Zahn mehr als einmal berechnet, ist dies in der Rechnung zu begründen.
---
Bei den Leistungen nach den Nummern 0090 und 0100 sind die Kosten der verwendeten Anästhetika gesondert berechnungsfähig.
---
Der Zuschlag nach der Nummer 0110 ist je Behandlungstag nur ein -
mal und nur mit dem einfachen
Gebührensatz berechnungsfähig.
---
Zuschlag für die Anwendung eines Lasers bei den Leistungen nach den Nummern 2410, 3070, 3080, 3210, 3240, 4080, 4090, 4100, 4130, 4133 und 9160
---
Der Zuschlag nach der Nummer 0120 beträgt 100 v.H. des einfachen Gebührensatzes der betreffenden Leistung, jedoch nicht mehr als 68 Euro.
---
Der Zuschlag nach der Nummer 0120 ist je Behandlungstag nur einmal berechnungsfähig.
---


And this predicates:
```prolog
invoice(
    % A Service is defined trough its Service Number (Service), the date / session when it was rendered, its multiplier, the teeth it is applied to, ...
    [service(Service, date(Year, Month, Day), Multiplier, PointScore, Charge, Description, Justification, [tooth(Area, Postion), ...]), ... ],
    % Billed Material Costs are defined trough the Section of the GOZ which allows its billing, the date / session when it was rendered, its multiplier, ...
    [material_cost(GOZ_Section, date(Year, Month, Day), Multiplier, Count, Charge, Description, Justification, [tooth(Area, Postion), ...]), ... ],
    invoice_date(date(Year, Month, Day)),
    invoice_amount(InvoiceAmount)
).
% Charge = (round(PointValue in Euros * Multiplier * PointScore * 100)) / 100
% A Tooth on which a Service is applied is uniquely defined by the combination of its area and position in this area: tooth(Area, Postion) nummerated after the FDI-Zahnschema
% Area = 1 -> Right upper jaw
% Area = 2 -> Left upper jaw
% Area = 3 -> Left lower jaw
% Area = 4 -> Right lower jaw
% Position is exact position of this tooth in its area (from 1 to 8)
% Example invoice
invoice(
    [
        service(11111, date(2023, 10, 01), 1, 100, 5.62, 'Teeth Cleaning', '', [tooth(1,7)]),
        service(11111, date(2023, 10, 01), 1, 100, 5.62, 'Teeth Cleaning', '', [tooth(1,6)]),
        service(987654, date(2023, 10, 01), 3.5, 200, 39.37, 'Tooth Filling', 'Very time consuming', [tooth(1,7), tooth(1,6)]),
        service(123456, date(2023, 10, 02), 2.3, 150, 19.40, 'Consultation', '', [])
    ],
    [
        material_cost('§ 4 (1)', date(2023, 10, 02), 1, 1, 40.00, 'Fill Material', 'Auslagen', [tooth(1,7), tooth(1,6)])
    ]
    invoice_date(date(2023, 10, 04),
    invoice_amount(110.01)
).
```
The 9 rules indicate conditions and restrictions stated in the GOZ that should be adhered to when creating an invoice.
We want to mark invoices as invalid if they do not adhere to those rules.
Which of those rules can you translate into prolog code given following restriction:
Only translate the rules as they are, do not include any examples.
Be as accurate as possible.
You must be able to exactly define every new predicate based on the given ones.
Do not make any assumptions which are not given.
Translate the rules where a translation given the restrictions is possible.
To determine if an invoice is correct, use the predicate 
```prolog
is_invoice_invalid(Invoice) : -
    Invoice = invoice(Services, Material_Costs, invoice_date(date(Year, Month, Day), invoice_amount(InvoiceAmount)),
    % The corresponding rule (only one rule for each predicate)
    % Please double check that the prolog code you write in here is semantically equivalent to the rule in the text.
    print(...), % When rule is not fulfilled and therefore the invoice is invalid, print the reason for the invalidity of the invoice
    true. % Then the invoice is invalid.
```
Use this predicate to check each rule individually. Before you translate a rule, think about it.
Expected format:
---
Rule 1:
Thoughts: ...
Translation:
```prolog
% code here (is_invoice_invalid/1 predicate with potential helper predicates for this rule)
```
---
Rule 2:
Thoughts: ...
Translation:
```prolog
% code here (is_invoice_invalid/1 predicate with potential helper predicates for this rule)
```
---
... 

When you can not translate leaf the code section empty like this:
---
Rule X:
Thoughts: ...
Translation:
```prolog
```
---

So you should have a block for each of the 9 given rules at the end.
For translated rules include print statements, so that the user can see the reason for the invalidity of the invoice.
When you calculate with currencies, always round the result to two digits with round(X*100)/100 and always calculate in Euros (even after summation).
I only want to have exactly defined rules.
First, think step by step how you would translate a rule, then translate it. Explain your thoughts step by step.",1.0,1513.0,1091.0,0.11084999999999998,"
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    member(service(0030, _, _, _, _, _, _, _), Services),
    member(service(0040, _, _, _, _, _, _, _), Services),
    print('Services 0030 and 0040 cannot be billed together.'),
    true.
"
3,50,"Abformung oder Teilabformung
eines Kiefers für ein Situationsmo -
dell einschließlich Auswertung zur
Diagnose oder Planung",A_Allgemeine_zahnärztliche_Leistungen,120.0,6.75,15.52,23.62,The text does not mention any references to other paragraphs.,,,,,,,,,,
4,60,"Abformung beider Kiefer für Situa -
tionsmodelle und einfache Bissfi -
xierung einschließlich Auswertung
zur Diagnose oder Planung
Die Nebeneinanderberechnung
der Leistungen nach den Num -
mern 0050 und 0060 ist in der
Rechnung zu begründen.",A_Allgemeine_zahnärztliche_Leistungen,260.0,14.62,33.63,51.18,"References: Nummern 0050, 0060",,Die Nebeneinanderberechnung der Leistungen nach den Nummern 0050 und 0060 ist in der Rechnung zu begründen.,,,,,,,,"
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    member(service(0050, _, _, _, _, _, Justification, _), Services),
    member(service(0060, _, _, _, _, _, Justification, _), Services),
    Justification = '',
    print('Justification must be provided when services 0050 and 0060 are billed together.'),
    true.
"
5,65,"Optisch-elektronische Abformung
einschließlich vorbereitender Maß -
nahmen, einfache digitale Bissre -
gistrierung und Archivierung, je
Kieferhälfte oder Frontzahnbereich
Neben der Leistung nach der
Nummer 0065 sind konventionelle
Abformungen nach diesem Ge -
bührenverzeichnis für dieselbe
Kieferhälfte oder denselben Front -
zahnbereich nicht berechnungs -
fähig.",A_Allgemeine_zahnärztliche_Leistungen,80.0,4.5,10.35,15.75,"The text references to ""Nummer 0065"". 

References: Nummer 0065",,Neben der Leistung nach der Nummer 0065 sind konventionelle Abformungen nach diesem Gebührenverzeichnis für dieselbe Kieferhälfte oder denselben Frontzahnbereich nicht berechnungsfähig.,,,,,,,,"
"
6,70,"Vitalitätsprüfung eines Zahnes
oder mehrerer Zähne einschließ -
lich Vergleichstest, je Sitzung",A_Allgemeine_zahnärztliche_Leistungen,50.0,2.81,6.47,9.84,The text does not mention any references to other paragraphs.,,,,,,,,,,
7,80,"Intraorale Oberflächenanästhesie,
je Kieferhälfte oder Frontzahnbe -
reich",A_Allgemeine_zahnärztliche_Leistungen,30.0,1.69,3.88,5.91,The text provided does not contain any references to other paragraphs.,,,,,,,,,,
8,90,Intraorale Infiltrationsanästhesie,A_Allgemeine_zahnärztliche_Leistungen,60.0,3.37,7.76,11.81,The text provided does not contain any references to other paragraphs.,,,,,,,,,,
9,100,"Intraorale Leitungsanästhesie
Wird die Leistung nach der Num -
mer 0090 je Zahn mehr als einmal
berechnet, ist dies in der Rech -
nung zu begründen.
Bei den Leistungen nach den
Nummern 0090 und 0100 sind die
Kosten der verwendeten Anästhe -
tika gesondert berechnungsfähig.",A_Allgemeine_zahnärztliche_Leistungen,70.0,3.94,9.05,13.78,"References: Nummer 0090, Nummer 0100",,"Wird die Leistung nach der Nummer 0090 je Zahn mehr als einmal berechnet, ist dies in der Rechnung zu begründen.",,,,,,,,"
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(T, member(service(0090, _, _, _, _, _, _, T), Services), Teeth),
    sort(Teeth, SortedTeeth),
    length(Teeth, L1),
    length(SortedTeeth, L2),
    L1 \= L2,
    member(service(0090, _, _, _, _, _, Justification, _), Services),
    Justification = '',
    print('Justification must be provided when service 0090 is billed more than once for the same tooth.'),
    true.
"
10,100,"Intraorale Leitungsanästhesie
Wird die Leistung nach der Num -
mer 0090 je Zahn mehr als einmal
berechnet, ist dies in der Rech -
nung zu begründen.
Bei den Leistungen nach den
Nummern 0090 und 0100 sind die
Kosten der verwendeten Anästhe -
tika gesondert berechnungsfähig.",A_Allgemeine_zahnärztliche_Leistungen,70.0,3.94,9.05,13.78,"References: Nummer 0090, Nummer 0100",,Bei den Leistungen nach den Nummern 0090 und 0100 sind die Kosten der verwendeten Anästhetika gesondert berechnungsfähig.,,,,,,,,"
"
11,110,"Zuschlag für die Anwendung eines
Operationsmikroskops bei den
Leistungen nach den Nummern
2195, 2330, 2340, 2360, 2410, 2440,
3020, 3030, 3040, 3045, 3060, 3110,
3120, 3190, 3200, 4090, 4100, 4130,
4133, 9100, 9110, 9120, 9130 und 9170
Der Zuschlag nach der Nummer 0110 ist je Behandlungstag nur ein -
mal und nur mit dem einfachen
Gebührensatz berechnungsfähig.",A_Allgemeine_zahnärztliche_Leistungen,400.0,22.5,51.74,78.74,"References: Nummern 2195, 2330, 2340, 2360, 2410, 2440, 3020, 3030, 3040, 3045, 3060, 3110, 3120, 3190, 3200, 4090, 4100, 4130, 4133, 9100, 9110, 9120, 9130, 9170, Nummer 0110.",,"Der Zuschlag nach der Nummer 0110 ist je Behandlungstag nur ein -
mal und nur mit dem einfachen
Gebührensatz berechnungsfähig.",,,,,,,,"
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(D, member(service(0110, D, Multiplier, _, _, _, _, _), Services), Dates),
    sort(Dates, SortedDates),
    length(Dates, L1),
    length(SortedDates, L2),
    (L1 \= L2 ; Multiplier \= 1),
    print('Service 0110 can only be billed once per treatment day and only at the simple rate.'),
    true.
"
12,120,"Zuschlag für die Anwendung eines
Lasers bei den Leistungen nach
den Nummern 2410, 3070, 3080,
3210, 3240, 4080, 4090, 4100, 4130, 4133 und 9160
Der Zuschlag nach der Nummer 0120 beträgt 100 v.H. des einfa -
chen Gebührensatzes der betref -
fenden Leistung, jedoch nicht
mehr als 68 Euro. Der Zuschlag
nach der Nummer 0120 ist je Be -
handlungstag nur einmal berech -
nungsfähig.",A_Allgemeine_zahnärztliche_Leistungen,,,,,"References: Nummern 2410, 3070, 3080, 3210, 3240, 4080, 4090, 4100, 4130, 4133, 9160, 0120",,"Zuschlag für die Anwendung eines Lasers bei den Leistungen nach den Nummern 2410, 3070, 3080, 3210, 3240, 4080, 4090, 4100, 4130, 4133 und 9160",,,,,,,,"
"
13,120,"Zuschlag für die Anwendung eines
Lasers bei den Leistungen nach
den Nummern 2410, 3070, 3080,
3210, 3240, 4080, 4090, 4100, 4130, 4133 und 9160
Der Zuschlag nach der Nummer 0120 beträgt 100 v.H. des einfa -
chen Gebührensatzes der betref -
fenden Leistung, jedoch nicht
mehr als 68 Euro. Der Zuschlag
nach der Nummer 0120 ist je Be -
handlungstag nur einmal berech -
nungsfähig.",A_Allgemeine_zahnärztliche_Leistungen,,,,,"References: Nummern 2410, 3070, 3080, 3210, 3240, 4080, 4090, 4100, 4130, 4133, 9160, 0120",,"Der Zuschlag nach der Nummer 0120 beträgt 100 v.H. des einfachen Gebührensatzes der betreffenden Leistung, jedoch nicht mehr als 68 Euro.",,,,,,,,"
"
14,120,"Zuschlag für die Anwendung eines
Lasers bei den Leistungen nach
den Nummern 2410, 3070, 3080,
3210, 3240, 4080, 4090, 4100, 4130, 4133 und 9160
Der Zuschlag nach der Nummer 0120 beträgt 100 v.H. des einfa -
chen Gebührensatzes der betref -
fenden Leistung, jedoch nicht
mehr als 68 Euro. Der Zuschlag
nach der Nummer 0120 ist je Be -
handlungstag nur einmal berech -
nungsfähig.",A_Allgemeine_zahnärztliche_Leistungen,,,,,"References: Nummern 2410, 3070, 3080, 3210, 3240, 4080, 4090, 4100, 4130, 4133, 9160, 0120",,Der Zuschlag nach der Nummer 0120 ist je Behandlungstag nur einmal berechnungsfähig.,,,,,,,,"
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(D, member(service(0120, D, _, _, _, _, _, _), Services), Dates),
    sort(Dates, SortedDates),
    length(Dates, L1),
    length(SortedDates, L2),
    L1 \= L2,
    print('Service 0120 can only be billed once per treatment day.'),
    true.
"
15,1000,"Erstellung eines Mundhygienesta -
tus und eingehende Unterweisung
zur Vorbeugung gegen Karies und
parodontale Erkrankungen, Dauer
mindestens 25 Minuten",B_Prophylaktische_Leistungen,200.0,11.25,25.87,39.37,The text does not mention any references to other paragraphs.,,Dauer mindestens 25 Minuten,"---
Rule 1:
Thoughts: This rule seems to be about the duration of a service, but there is no information about the duration of a service in the given predicates. Therefore, this rule cannot be translated into Prolog code.
Translation:
```prolog
```
---
Rule 2:
Thoughts: This rule states that the service with the number 1000 can be charged once a year and the service with the number 1010 can be charged three times a year. We can check this by counting the occurrences of these services in the given year.
Translation:
```prolog
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(Service, (member(service(Service, date(Year, _, _), _, _, _, _, _, _), Services), Service = 1000), Services1000),
    length(Services1000, Count1000),
    Count1000 > 1,
    print('Service 1000 is charged more than once in a year.'),
    true.

is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(Service, (member(service(Service, date(Year, _, _), _, _, _, _, _, _), Services), Service = 1010), Services1010),
    length(Services1010, Count1010),
    Count1010 > 3,
    print('Service 1010 is charged more than three times in a year.'),
    true.
```
---
Rule 3:
Thoughts: This rule states that services with numbers 0010, 4000 and 8000 can only be charged in connection with services 1000 and 1010 if they serve other purposes and this is justified in the invoice. We can check this by looking at the justification of these services.
Translation:
```prolog
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    member(service(Service, _, _, _, _, _, Justification, _), Services),
    member(Service, [0010, 4000, 8000]),
    not(member(service(1000, _, _, _, _, _, _, _), Services)),
    not(member(service(1010, _, _, _, _, _, _, _), Services)),
    Justification = '',
    print('Service ', Service, ' is charged without justification and without services 1000 or 1010.'),
    true.
```
---
Rule 4:
Thoughts: This rule states that the service with the number 1020 can be charged a maximum of four times a year. We can check this by counting the occurrences of this service in the given year.
Translation:
```prolog
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(Service, (member(service(Service, date(Year, _, _), _, _, _, _, _, _), Services), Service = 1020), Services1020),
    length(Services1020, Count1020),
    Count1020 > 4,
    print('Service 1020 is charged more than four times in a year.'),
    true.
```
---
Rule 5:
Thoughts: This rule seems to be about the use of a custom-made splint as a medication carrier for fluoridation agents and the service with the number 1030. However, there is no information about the use of a custom-made splint in the given predicates. Therefore, this rule cannot be translated into Prolog code.
Translation:
```prolog
```
---
Rule 6:
Thoughts: This rule states that the service with the number 1040 cannot be charged in addition to the services with the numbers 1020, 4050, 4055, 4060, 4070, 4075, 4090 and 4100. We can check this by looking at the services in the invoice.
Translation:
```prolog
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    member(service(1040, _, _, _, _, _, _, _), Services),
    member(service(Service, _, _, _, _, _, _, _), Services),
    member(Service, [1020, 4050, 4055, 4060, 4070, 4075, 4090, 4100]),
    print('Service 1040 is charged in addition to service ', Service, '.'),
    true.
```",,"Given this rules from the german GOZ:
---
Dauer mindestens 25 Minuten
---
Die Leistung nach der Nummer 1000 ist innerhalb eines Jahres ein -
mal, die Leistung nach der Nummer 1010 innerhalb eines Jahres dreimal
berechnungsfähig.
---
Im Zu -
sammenhang mit den Leistungen
nach den Nummern 1000 und 1010
sind Leistungen nach den Num -
mern 0010, 4000 und 8000 sowie Be -
ratungen und Untersuchungen
nach der Gebührenordnung für
Ärzte nur dann berechnungsfähig,
wenn diese Leistungen anderen
Zwecken dienen und dies in der
Rechnung begründet wird.
---
Die Leis -
tung nach der Nummer 1020 ist in -
nerhalb eines Jahres höchstens
viermal berechnungsfähig.
---
4. Bei Anwendung einer individuell
gefertigten Schiene als Medika -
mententräger für Fluoridierungsmit -
tel ist die mehr als viermalige
Berechnung der Leistung nach der
Nummer 1030 innerhalb eines Jah -
res in der Rechnung zu begründen.
---
Die Leistung nach der Nummer 1040 ist neben den Leistungen nach den Nummern 1020, 4050, 4055, 4060, 4070, 4075, 4090 und 4100 nicht berechnungsfähig.
---


And this predicates:
```prolog
invoice(
    % A Service is defined trough its Service Number (Service), the date / session when it was rendered, its multiplier, the teeth it is applied to, ...
    [service(Service, date(Year, Month, Day), Multiplier, PointScore, Charge, Description, Justification, [tooth(Area, Postion), ...]), ... ],
    % Billed Material Costs are defined trough the Section of the GOZ which allows its billing, the date / session when it was rendered, its multiplier, ...
    [material_cost(GOZ_Section, date(Year, Month, Day), Multiplier, Count, Charge, Description, Justification, [tooth(Area, Postion), ...]), ... ],
    invoice_date(date(Year, Month, Day)),
    invoice_amount(InvoiceAmount)
).
% Charge = (round(PointValue in Euros * Multiplier * PointScore * 100)) / 100
% A Tooth on which a Service is applied is uniquely defined by the combination of its area and position in this area: tooth(Area, Postion) nummerated after the FDI-Zahnschema
% Area = 1 -> Right upper jaw
% Area = 2 -> Left upper jaw
% Area = 3 -> Left lower jaw
% Area = 4 -> Right lower jaw
% Position is exact position of this tooth in its area (from 1 to 8)
% Example invoice
invoice(
    [
        service(11111, date(2023, 10, 01), 1, 100, 5.62, 'Teeth Cleaning', '', [tooth(1,7)]),
        service(11111, date(2023, 10, 01), 1, 100, 5.62, 'Teeth Cleaning', '', [tooth(1,6)]),
        service(987654, date(2023, 10, 01), 3.5, 200, 39.37, 'Tooth Filling', 'Very time consuming', [tooth(1,7), tooth(1,6)]),
        service(123456, date(2023, 10, 02), 2.3, 150, 19.40, 'Consultation', '', [])
    ],
    [
        material_cost('§ 4 (1)', date(2023, 10, 02), 1, 1, 40.00, 'Fill Material', 'Auslagen', [tooth(1,7), tooth(1,6)])
    ]
    invoice_date(date(2023, 10, 04),
    invoice_amount(110.01)
).
```
The 6 rules indicate conditions and restrictions stated in the GOZ that should be adhered to when creating an invoice.
We want to mark invoices as invalid if they do not adhere to those rules.
Which of those rules can you translate into prolog code given following restriction:
Only translate the rules as they are, do not include any examples.
Be as accurate as possible.
You must be able to exactly define every new predicate based on the given ones.
Do not make any assumptions which are not given.
Translate the rules where a translation given the restrictions is possible.
To determine if an invoice is correct, use the predicate 
```prolog
is_invoice_invalid(Invoice) : -
    Invoice = invoice(Services, Material_Costs, invoice_date(date(Year, Month, Day), invoice_amount(InvoiceAmount)),
    % The corresponding rule (only one rule for each predicate)
    % Please double check that the prolog code you write in here is semantically equivalent to the rule in the text.
    print(...), % When rule is not fulfilled and therefore the invoice is invalid, print the reason for the invalidity of the invoice
    true. % Then the invoice is invalid.
```
Use this predicate to check each rule individually. Before you translate a rule, think about it.
Expected format:
---
Rule 1:
Thoughts: ...
Translation:
```prolog
% code here (is_invoice_invalid/1 predicate with potential helper predicates for this rule)
```
---
Rule 2:
Thoughts: ...
Translation:
```prolog
% code here (is_invoice_invalid/1 predicate with potential helper predicates for this rule)
```
---
... 

When you can not translate leaf the code section empty like this:
---
Rule X:
Thoughts: ...
Translation:
```prolog
```
---

So you should have a block for each of the 6 given rules at the end.
For translated rules include print statements, so that the user can see the reason for the invalidity of the invoice.
When you calculate with currencies, always round the result to two digits with round(X*100)/100 and always calculate in Euros (even after summation).
I only want to have exactly defined rules.
First, think step by step how you would translate a rule, then translate it. Explain your thoughts step by step.",1.0,1469.0,920.0,0.09927,"
"
16,1010,"Kontrolle des Übungserfolges ein -
schließlich weiterer Unterweisung,
Dauer mindestens 15 Minuten",B_Prophylaktische_Leistungen,100.0,5.62,12.94,19.68,The text does not mention any references to other paragraphs.,,,,,,,,,,
17,1020,"Lokale Fluoridierung zur Verbesse -
rung der Zahnhartsubstanz, zur Ka -
riesvorbeugung und -behandlung,
mit Lack oder Gel, je Sitzung
Die Leistung nach der Nummer 1000 ist innerhalb eines Jahres ein -
mal, die Leistung nach der Nummer 1010 innerhalb eines Jahres dreimal
berechnungsfähig. Die Leistungen
umfassen die Erhebung von Mund -
hygiene-Indizes, das Anfärben der
Zähne, die praktische Unterweisung
mit individuellen Übungen und die
Motivierung des Patienten. Im Zu -
sammenhang mit den Leistungen
nach den Nummern 1000 und 1010
sind Leistungen nach den Num -
mern 0010, 4000 und 8000 sowie Be -
ratungen und Untersuchungen
nach der Gebührenordnung für
Ärzte nur dann berechnungsfähig,
wenn diese Leistungen anderen
Zwecken dienen und dies in der
Rechnung begründet wird. Die Leis -
tung nach der Nummer 1020 ist in -
nerhalb eines Jahres höchstens
viermal berechnungsfähig.",B_Prophylaktische_Leistungen,50.0,2.81,6.47,9.84,"References: Nummer 1000, Nummer 1010, Nummer 0010, Nummer 4000, Nummer 8000, Nummer 1020",,"Die Leistung nach der Nummer 1000 ist innerhalb eines Jahres ein -
mal, die Leistung nach der Nummer 1010 innerhalb eines Jahres dreimal
berechnungsfähig.",,,,,,,,"
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(Service, (member(service(Service, date(Year, _, _), _, _, _, _, _, _), Services), Service = 1000), Services1000),
    length(Services1000, Count1000),
    Count1000 > 1,
    print('Service 1000 is charged more than once in a year.'),
    true.

is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(Service, (member(service(Service, date(Year, _, _), _, _, _, _, _, _), Services), Service = 1010), Services1010),
    length(Services1010, Count1010),
    Count1010 > 3,
    print('Service 1010 is charged more than three times in a year.'),
    true.
"
18,1020,"Lokale Fluoridierung zur Verbesse -
rung der Zahnhartsubstanz, zur Ka -
riesvorbeugung und -behandlung,
mit Lack oder Gel, je Sitzung
Die Leistung nach der Nummer 1000 ist innerhalb eines Jahres ein -
mal, die Leistung nach der Nummer 1010 innerhalb eines Jahres dreimal
berechnungsfähig. Die Leistungen
umfassen die Erhebung von Mund -
hygiene-Indizes, das Anfärben der
Zähne, die praktische Unterweisung
mit individuellen Übungen und die
Motivierung des Patienten. Im Zu -
sammenhang mit den Leistungen
nach den Nummern 1000 und 1010
sind Leistungen nach den Num -
mern 0010, 4000 und 8000 sowie Be -
ratungen und Untersuchungen
nach der Gebührenordnung für
Ärzte nur dann berechnungsfähig,
wenn diese Leistungen anderen
Zwecken dienen und dies in der
Rechnung begründet wird. Die Leis -
tung nach der Nummer 1020 ist in -
nerhalb eines Jahres höchstens
viermal berechnungsfähig.",B_Prophylaktische_Leistungen,50.0,2.81,6.47,9.84,"References: Nummer 1000, Nummer 1010, Nummer 0010, Nummer 4000, Nummer 8000, Nummer 1020",,"Im Zu -
sammenhang mit den Leistungen
nach den Nummern 1000 und 1010
sind Leistungen nach den Num -
mern 0010, 4000 und 8000 sowie Be -
ratungen und Untersuchungen
nach der Gebührenordnung für
Ärzte nur dann berechnungsfähig,
wenn diese Leistungen anderen
Zwecken dienen und dies in der
Rechnung begründet wird.",,,,,,,,"
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    member(service(Service, _, _, _, _, _, Justification, _), Services),
    member(Service, [0010, 4000, 8000]),
    \+(member(service(1000, _, _, _, _, _, _, _), Services)),
    \+(member(service(1010, _, _, _, _, _, _, _), Services)),
    Justification = '',
    print('Service ', Service, ' is charged without justification and without services 1000 or 1010.'),
    true.
"
19,1020,"Lokale Fluoridierung zur Verbesse -
rung der Zahnhartsubstanz, zur Ka -
riesvorbeugung und -behandlung,
mit Lack oder Gel, je Sitzung
Die Leistung nach der Nummer 1000 ist innerhalb eines Jahres ein -
mal, die Leistung nach der Nummer 1010 innerhalb eines Jahres dreimal
berechnungsfähig. Die Leistungen
umfassen die Erhebung von Mund -
hygiene-Indizes, das Anfärben der
Zähne, die praktische Unterweisung
mit individuellen Übungen und die
Motivierung des Patienten. Im Zu -
sammenhang mit den Leistungen
nach den Nummern 1000 und 1010
sind Leistungen nach den Num -
mern 0010, 4000 und 8000 sowie Be -
ratungen und Untersuchungen
nach der Gebührenordnung für
Ärzte nur dann berechnungsfähig,
wenn diese Leistungen anderen
Zwecken dienen und dies in der
Rechnung begründet wird. Die Leis -
tung nach der Nummer 1020 ist in -
nerhalb eines Jahres höchstens
viermal berechnungsfähig.",B_Prophylaktische_Leistungen,50.0,2.81,6.47,9.84,"References: Nummer 1000, Nummer 1010, Nummer 0010, Nummer 4000, Nummer 8000, Nummer 1020",,"Die Leis -
tung nach der Nummer 1020 ist in -
nerhalb eines Jahres höchstens
viermal berechnungsfähig.",,,,,,,,"
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(Service, (member(service(Service, date(Year, _, _), _, _, _, _, _, _), Services), Service = 1020), Services1020),
    length(Services1020, Count1020),
    Count1020 > 4,
    print('Service 1020 is charged more than four times in a year.'),
    true.
"
20,1030,"Lokale Anwendung von Medika -
menten zur Kariesvorbeugung
oder initialen Kariesbehandlung
mit einer individuell gefertigten
Schiene als Medikamententräger,
je Kiefer
1. Die Herstellung einer individuell
angefertigten Schiene als Medika -
mententräger (z.B. Tiefziehschiene)
ist gesondert berechnungsfähig.
2. Mit der Gebühr sind die Kosten
für das verwendete Medikament
abgegolten.
3. Die Anwendung eines konfek -
tionierten Löffels als Medikamen -
tenträger erfüllt nicht den Inhalt
der Leistung nach der Nummer
1030.
4. Bei Anwendung einer individuell
gefertigten Schiene als Medika -
mententräger für Fluoridierungsmit -
tel ist die mehr als viermalige
Berechnung der Leistung nach der
Nummer 1030 innerhalb eines Jah -
res in der Rechnung zu begründen.",B_Prophylaktische_Leistungen,90.0,5.06,11.64,17.72,References: Nummer 1030,,"4. Bei Anwendung einer individuell
gefertigten Schiene als Medika -
mententräger für Fluoridierungsmit -
tel ist die mehr als viermalige
Berechnung der Leistung nach der
Nummer 1030 innerhalb eines Jah -
res in der Rechnung zu begründen.",,,,,,,,"
"
21,1040,"Professionelle Zahnreinigung
Die Leistung umfasst das Entfer -
nen der supragingivalen/gingivalen
Beläge auf Zahn- und Wurzelober-
flächen einschließlich Reinigung
der Zahnzwischenräume, das
Entfernen des Biofilms, die Ober -
flächenpolitur und geeignete Flu-
oridierungsmaßnahmen, je Zahn
oder Implantat oder Brücken -
glied. Die Leistung nach der
Nummer 1040 ist neben den Leis -
tungen nach den Nummern 1020,
4050, 4055, 4060, 4070, 4075, 4090
und 4100 nicht berechnungsfähig .",B_Prophylaktische_Leistungen,28.0,1.57,3.62,5.51,"References: Nummer 1040, Nummer 1020, Nummer 4050, Nummer 4055, Nummer 4060, Nummer 4070, Nummer 4075, Nummer 4090, Nummer 4100.",,"Die Leistung nach der Nummer 1040 ist neben den Leistungen nach den Nummern 1020, 4050, 4055, 4060, 4070, 4075, 4090 und 4100 nicht berechnungsfähig.",,,,,,,,"
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    member(service(1040, _, _, _, _, _, _, _), Services),
    member(service(Service, _, _, _, _, _, _, _), Services),
    member(Service, [1020, 4050, 4055, 4060, 4070, 4075, 4090, 4100]),
    print('Service 1040 is charged in addition to service ', Service, '.'),
    true.
"
22,2000,"Versiegelung von kariesfreien
Zahnfissuren mit aushärtenden
Kunststoffen, auch Glattflächen -
versiegelung, je Zahn",C_Konservierende_Leistungen,90.0,5.06,11.64,17.72,The text does not mention any references to other paragraphs.,,,,,,,,,,
23,2010,"Behandlung überempfindlicher
Zahnflächen, je Kiefer",C_Konservierende_Leistungen,50.0,2.81,6.47,9.84,The text provided does not contain any references to other paragraphs.,,,,,,,,,,
24,2020,"Temporärer speicheldichter Ver -
schluss einer Kavität",C_Konservierende_Leistungen,98.0,5.51,12.68,19.29,The text provided does not contain any references to other paragraphs.,,,,,,,,,,
25,2030,"Besondere Maßnahmen beim Prä -
parieren oder Füllen von Kavitäten
(z.B. Separieren, Beseitigen stören -
den Zahnfleisches, Stillung einer
übermäßigen Papillenblutung), je
Kieferhälfte oder Frontzahnbe -
reich
Die Leistung nach der Nummer 2030 ist je Sitzung für eine Kiefer -
hälfte oder einen Frontzahnbereich
höchstens einmal für besondere
Maßnahmen beim Präparieren
und höchstens einmal für beson -
dere Maßnahmen beim Füllen von
Kavitäten berechnungsfähig.",C_Konservierende_Leistungen,65.0,3.66,8.41,12.8,The text does not contain any references to other paragraphs.,,Die Leistung nach der Nummer 2030 ist je Sitzung für eine Kieferhälfte oder einen Frontzahnbereich höchstens einmal für besondere Maßnahmen beim Präparieren und höchstens einmal für besondere Maßnahmen beim Füllen von Kavitäten berechnungsfähig.,"The Prolog code should be inside code blocks, like this:
```prolog
your code here
```
",Error,,,,,,
26,2040,"Anlegen von Spanngummi, je Kie -
ferhälfte oder Frontzahnbereich",C_Konservierende_Leistungen,65.0,3.66,8.41,12.8,The text provided does not contain any references to other paragraphs.,,,,,,,,,,
27,2050,"Präparieren einer Kavität und
Restauration mit plastischem Fül -
lungsmaterial einschließlich Unter -
füllung, Anlegen einer Matrize
oder Benutzen anderer Hilfsmittel
zur Formung der Füllung, einflächig",C_Konservierende_Leistungen,213.0,11.98,27.55,41.93,The text does not mention any references to other paragraphs.,,,,,,,,,,
28,2060,"Präparieren einer Kavität und Res -
tauration mit Kompositmaterialien,
in Adhäsivtechnik (Konditionieren),
einflächig, gegebenenfalls ein -
schließlich Mehrschichttechnik,
einschließlich Polieren, gegebe -
nenfalls einschließlich Verwen -
dung von Inserts",C_Konservierende_Leistungen,527.0,29.64,68.17,103.74,The text does not mention any references to other paragraphs.,,,,,,,,,,
29,2070,"Präparieren einer Kavität und
Restauration mit plastischem Fül -
lungsmaterial einschließlich Unter -
füllung, Anlegen einer Matrize oder
Benutzen anderer Hilfsmittel zur For -
mung der Füllung, zweiflächig",C_Konservierende_Leistungen,242.0,13.61,31.3,47.64,The text does not mention any references to other paragraphs.,,,,,,,,,,
30,2080,"Präparieren einer Kavität und Res -
tauration mit Kompositmaterialien,
in Adhäsivtechnik (Konditionieren),
zweiflächig, gegebenenfalls ein -
schließlich Mehrschichttechnik,
einschließlich Polieren, gegebe -
nenfalls einschließlich Verwendung
von Inserts",C_Konservierende_Leistungen,556.0,31.27,71.92,109.45,The text does not mention any references to other paragraphs.,,,,,,,,,,
31,2090,"Präparieren einer Kavität und
Restauration mit plastischem Fül -
lungsmaterial einschließlich Unter -
füllung, Anlegen einer Matrize oder
Benutzen anderer Hilfsmittel zur For -
mung der Füllung, dreiflächig",C_Konservierende_Leistungen,297.0,16.7,38.42,58.46,The text does not mention any references to other paragraphs.,,,,,,,,,,
32,2100,"Präparieren einer Kavität und Res -
tauration mit Kompositmaterialien,
in Adhäsivtechnik (Konditionieren),
dreiflächig, gegebenenfalls ein -
schließlich Mehrschichttechnik,
einschließlich Polieren, gegebe -
nenfalls einschließlich Verwendung
von Inserts",C_Konservierende_Leistungen,642.0,36.11,83.05,126.38,The text does not mention any references to other paragraphs.,,,,,,,,,,
33,2110,"Präparieren einer Kavität und Res -
tauration mit plastischem Füllungs -
material einschließlich Unterfüllung,
Anlegen einer Matrize oder Benut -
zen anderer Hilfsmittel zur Formung
der Füllung, mehr als dreiflächig",C_Konservierende_Leistungen,319.0,17.94,41.26,62.79,The text does not mention any references to other paragraphs.,,,,,,,,,,
34,2120,"Präparieren einer Kavität und
Restauration mit Kompositmate -
rialien, in Adhäsivtechnik (Kondi -
tionieren), mehr als dreiflächig,
gegebenenfalls einschließlich
Mehrschichttechnik, einschließ -
lich Polieren, gegebenenfalls
einschließlich Verwendung von
Inserts",C_Konservierende_Leistungen,770.0,43.31,99.6,151.57,The text does not mention any references to other paragraphs.,,,,,,,,,,
35,2130,"Kontrolle, Finieren/Polieren einer
Restauration in separater Sitzung,
auch Nachpolieren einer vorhan -
denen Restauration",C_Konservierende_Leistungen,104.0,5.85,13.45,20.47,The text does not mention any references to other paragraphs.,,,,,,,,,,
36,2150,"Einlagefüllung, einflächig",C_Konservierende_Leistungen,1141.0,64.17,147.6,224.6,The text provided does not contain any references to other paragraphs.,,,,,,,,,,
37,2160,"Einlagefüllung, zweiflächig",C_Konservierende_Leistungen,1356.0,76.26,175.41,266.93,The text provided does not contain any references to other paragraphs.,,,,,,,,,,
38,2170,"Einlagefüllung, mehr als zweiflä -
chig",C_Konservierende_Leistungen,1709.0,96.12,221.07,336.41,The text provided does not contain any references to other paragraphs.,,,,,,,,,,
39,2180,"Vorbereitung eines zerstörten Zah -
nes mit plastischem Aufbaumate -
rial zur Aufnahme einer Krone",C_Konservierende_Leistungen,150.0,8.44,19.4,29.53,The text provided does not mention any references to other paragraphs.,,,,,,,,,,
40,2190,"Vorbereitung eines zerstörten Zah -
nes durch gegossenen Aufbau mit
Stiftverankerung zur Aufnahme
einer Krone",C_Konservierende_Leistungen,450.0,25.31,58.21,88.58,The text does not mention any references to other paragraphs.,,,,,,,,,,
41,2195,"Vorbereitung eines zerstörten Zah -
nes durch einen Schraubenaufbau
oder Glasfaserstift o.Ä. zur Auf -
nahme einer Krone
Die Leistungen nach den Num -
mern 2180, 2190 oder 2195 sind
neben den Leistungen nach den
Nummern 2150 bis 2170 nicht be -
rechnungsfähig.
Die Leistung nach der Nummer 2180 ist neben der Leistung nach
der Nummer 2190 nicht berech -
nungsfähig. Die Leistung nach der
Nummer 2195 ist neben der Leis -
tung nach der Nummer 2180 be -
rechnungsfähig. Die Leistungen
nach den Nummern 2180, 2190
und/oder die Leistung nach der
Nummer 2195 ist je Zahn nur jeweils
einmal berechnungsfähig. Die Kos -
ten für die Verankerungselemente
sind gesondert berechnungsfähig.",C_Konservierende_Leistungen,300.0,16.87,38.81,59.05,"References: Nummern 2180, 2190, 2195, 2150 bis 2170",,"Die Leistungen nach den Nummern 2180, 2190 oder 2195 sind neben den Leistungen nach den Nummern 2150 bis 2170 nicht berechnungsfähig.",,,,,,,,
42,2195,"Vorbereitung eines zerstörten Zah -
nes durch einen Schraubenaufbau
oder Glasfaserstift o.Ä. zur Auf -
nahme einer Krone
Die Leistungen nach den Num -
mern 2180, 2190 oder 2195 sind
neben den Leistungen nach den
Nummern 2150 bis 2170 nicht be -
rechnungsfähig.
Die Leistung nach der Nummer 2180 ist neben der Leistung nach
der Nummer 2190 nicht berech -
nungsfähig. Die Leistung nach der
Nummer 2195 ist neben der Leis -
tung nach der Nummer 2180 be -
rechnungsfähig. Die Leistungen
nach den Nummern 2180, 2190
und/oder die Leistung nach der
Nummer 2195 ist je Zahn nur jeweils
einmal berechnungsfähig. Die Kos -
ten für die Verankerungselemente
sind gesondert berechnungsfähig.",C_Konservierende_Leistungen,300.0,16.87,38.81,59.05,"References: Nummern 2180, 2190, 2195, 2150 bis 2170",,Die Leistung nach der Nummer 2180 ist neben der Leistung nach der Nummer 2190 nicht berechnungsfähig.,,,,,,,,
43,2195,"Vorbereitung eines zerstörten Zah -
nes durch einen Schraubenaufbau
oder Glasfaserstift o.Ä. zur Auf -
nahme einer Krone
Die Leistungen nach den Num -
mern 2180, 2190 oder 2195 sind
neben den Leistungen nach den
Nummern 2150 bis 2170 nicht be -
rechnungsfähig.
Die Leistung nach der Nummer 2180 ist neben der Leistung nach
der Nummer 2190 nicht berech -
nungsfähig. Die Leistung nach der
Nummer 2195 ist neben der Leis -
tung nach der Nummer 2180 be -
rechnungsfähig. Die Leistungen
nach den Nummern 2180, 2190
und/oder die Leistung nach der
Nummer 2195 ist je Zahn nur jeweils
einmal berechnungsfähig. Die Kos -
ten für die Verankerungselemente
sind gesondert berechnungsfähig.",C_Konservierende_Leistungen,300.0,16.87,38.81,59.05,"References: Nummern 2180, 2190, 2195, 2150 bis 2170",,Die Leistung nach der Nummer 2195 ist neben der Leistung nach der Nummer 2180 berechnungsfähig.,,,,,,,,
44,2195,"Vorbereitung eines zerstörten Zah -
nes durch einen Schraubenaufbau
oder Glasfaserstift o.Ä. zur Auf -
nahme einer Krone
Die Leistungen nach den Num -
mern 2180, 2190 oder 2195 sind
neben den Leistungen nach den
Nummern 2150 bis 2170 nicht be -
rechnungsfähig.
Die Leistung nach der Nummer 2180 ist neben der Leistung nach
der Nummer 2190 nicht berech -
nungsfähig. Die Leistung nach der
Nummer 2195 ist neben der Leis -
tung nach der Nummer 2180 be -
rechnungsfähig. Die Leistungen
nach den Nummern 2180, 2190
und/oder die Leistung nach der
Nummer 2195 ist je Zahn nur jeweils
einmal berechnungsfähig. Die Kos -
ten für die Verankerungselemente
sind gesondert berechnungsfähig.",C_Konservierende_Leistungen,300.0,16.87,38.81,59.05,"References: Nummern 2180, 2190, 2195, 2150 bis 2170",,"Die Leistungen nach den Nummern 2180, 2190 und/oder die Leistung nach der Nummer 2195 ist je Zahn nur jeweils einmal berechnungsfähig.",,,,,,,,
45,2197,"Adhäsive Befestigung (plastischer
Aufbau, Stift, Inlay, Krone, Teil -
krone, Veneer etc.)",C_Konservierende_Leistungen,130.0,7.31,16.82,25.59,The text provided does not mention any references to other paragraphs.,,,,,,,,,,
46,2200,"Versorgung eines Zahnes oder Im -
plantats durch eine Vollkrone (Tan -
gentialpräparation)",C_Konservierende_Leistungen,1322.0,74.35,171.01,260.23,The text provided does not contain any references to other paragraphs.,,,,,,,,,,
47,2210,"Versorgung eines Zahnes durch
eine Vollkrone (Hohlkehl- oder Stu -
fenpräparation)",C_Konservierende_Leistungen,1678.0,94.37,217.06,330.31,The text provided does not contain any references to other paragraphs.,,,,,,,,,,
48,2220,"Versorgung eines Zahnes durch
eine Teilkrone mit Retentionsrillen
oder -kästen oder mit Pinledges
einschließlich Rekonstruktion der
gesamten Kaufläche, auch Versor -
gung eines Zahnes durch ein Ve -
neer
Neben den Leistungen nach den
Nummern 2200 bis 2220 sind die
Leistungen nach den Nummern 2050 bis 2130 nicht berechnungs -
fähig. Die Leistung nach der Num -
mer 2210 ist im Zusammenhang
mit Implantaten nicht berech -
nungsfähig. Durch die Leistungen
nach den Nummern 2150 bis 2170
und 2200 bis 2220 sind folgende
zahnärztliche Leistungen abgegol -
ten: Präparieren des Zahnes oder
Implantats, Relationsbestimmung,
Abformungen, Einproben, proviso -
risches Eingliedern, festes Einfügen
der Einlagefüllung oder der Krone
oder der Teilkrone oder des Ve -
neers, Nachkontrolle und Korrektu -
ren. Die Leistung nach der
Nummer 2200 umfasst auch die
Verschraubung und Abdeckung
mit Füllungsmaterial. Zu den Kro -
nen nach den Nummern 2200 bis 2220 gehören Kronen (Voll- und
Teilkronen) jeder zahntechnischen
Ausführung.",C_Konservierende_Leistungen,2067.0,116.25,267.38,406.88,"References: Nummern 2200 bis 2220, Nummern 2050 bis 2130, Nummer 2210, Nummern 2150 bis 2170, Nummer 2200.",,Neben den Leistungen nach den Nummern 2200 bis 2220 sind die Leistungen nach den Nummern 2050 bis 2130 nicht berechnungsfähig.,,,,,,,,
49,2220,"Versorgung eines Zahnes durch
eine Teilkrone mit Retentionsrillen
oder -kästen oder mit Pinledges
einschließlich Rekonstruktion der
gesamten Kaufläche, auch Versor -
gung eines Zahnes durch ein Ve -
neer
Neben den Leistungen nach den
Nummern 2200 bis 2220 sind die
Leistungen nach den Nummern 2050 bis 2130 nicht berechnungs -
fähig. Die Leistung nach der Num -
mer 2210 ist im Zusammenhang
mit Implantaten nicht berech -
nungsfähig. Durch die Leistungen
nach den Nummern 2150 bis 2170
und 2200 bis 2220 sind folgende
zahnärztliche Leistungen abgegol -
ten: Präparieren des Zahnes oder
Implantats, Relationsbestimmung,
Abformungen, Einproben, proviso -
risches Eingliedern, festes Einfügen
der Einlagefüllung oder der Krone
oder der Teilkrone oder des Ve -
neers, Nachkontrolle und Korrektu -
ren. Die Leistung nach der
Nummer 2200 umfasst auch die
Verschraubung und Abdeckung
mit Füllungsmaterial. Zu den Kro -
nen nach den Nummern 2200 bis 2220 gehören Kronen (Voll- und
Teilkronen) jeder zahntechnischen
Ausführung.",C_Konservierende_Leistungen,2067.0,116.25,267.38,406.88,"References: Nummern 2200 bis 2220, Nummern 2050 bis 2130, Nummer 2210, Nummern 2150 bis 2170, Nummer 2200.",,Die Leistung nach der Nummer 2210 ist im Zusammenhang mit Implantaten nicht berechnungsfähig.,,,,,,,,
50,2220,"Versorgung eines Zahnes durch
eine Teilkrone mit Retentionsrillen
oder -kästen oder mit Pinledges
einschließlich Rekonstruktion der
gesamten Kaufläche, auch Versor -
gung eines Zahnes durch ein Ve -
neer
Neben den Leistungen nach den
Nummern 2200 bis 2220 sind die
Leistungen nach den Nummern 2050 bis 2130 nicht berechnungs -
fähig. Die Leistung nach der Num -
mer 2210 ist im Zusammenhang
mit Implantaten nicht berech -
nungsfähig. Durch die Leistungen
nach den Nummern 2150 bis 2170
und 2200 bis 2220 sind folgende
zahnärztliche Leistungen abgegol -
ten: Präparieren des Zahnes oder
Implantats, Relationsbestimmung,
Abformungen, Einproben, proviso -
risches Eingliedern, festes Einfügen
der Einlagefüllung oder der Krone
oder der Teilkrone oder des Ve -
neers, Nachkontrolle und Korrektu -
ren. Die Leistung nach der
Nummer 2200 umfasst auch die
Verschraubung und Abdeckung
mit Füllungsmaterial. Zu den Kro -
nen nach den Nummern 2200 bis 2220 gehören Kronen (Voll- und
Teilkronen) jeder zahntechnischen
Ausführung.",C_Konservierende_Leistungen,2067.0,116.25,267.38,406.88,"References: Nummern 2200 bis 2220, Nummern 2050 bis 2130, Nummer 2210, Nummern 2150 bis 2170, Nummer 2200.",,"Durch die Leistungen nach den Nummern 2150 bis 2170 und 2200 bis 2220 sind folgende zahnärztliche Leistungen abgegolten: Präparieren des Zahnes oder Implantats, Relationsbestimmung, Abformungen, Einproben, provisorisches Eingliedern, festes Einfügen der Einlagefüllung oder der Krone oder der Teilkrone oder des Veneers, Nachkontrolle und Korrekturen.",,,,,,,,
51,2220,"Versorgung eines Zahnes durch
eine Teilkrone mit Retentionsrillen
oder -kästen oder mit Pinledges
einschließlich Rekonstruktion der
gesamten Kaufläche, auch Versor -
gung eines Zahnes durch ein Ve -
neer
Neben den Leistungen nach den
Nummern 2200 bis 2220 sind die
Leistungen nach den Nummern 2050 bis 2130 nicht berechnungs -
fähig. Die Leistung nach der Num -
mer 2210 ist im Zusammenhang
mit Implantaten nicht berech -
nungsfähig. Durch die Leistungen
nach den Nummern 2150 bis 2170
und 2200 bis 2220 sind folgende
zahnärztliche Leistungen abgegol -
ten: Präparieren des Zahnes oder
Implantats, Relationsbestimmung,
Abformungen, Einproben, proviso -
risches Eingliedern, festes Einfügen
der Einlagefüllung oder der Krone
oder der Teilkrone oder des Ve -
neers, Nachkontrolle und Korrektu -
ren. Die Leistung nach der
Nummer 2200 umfasst auch die
Verschraubung und Abdeckung
mit Füllungsmaterial. Zu den Kro -
nen nach den Nummern 2200 bis 2220 gehören Kronen (Voll- und
Teilkronen) jeder zahntechnischen
Ausführung.",C_Konservierende_Leistungen,2067.0,116.25,267.38,406.88,"References: Nummern 2200 bis 2220, Nummern 2050 bis 2130, Nummer 2210, Nummern 2150 bis 2170, Nummer 2200.",,Die Leistung nach der Nummer 2200 umfasst auch die Verschraubung und Abdeckung mit Füllungsmaterial.,,,,,,,,
52,2220,"Versorgung eines Zahnes durch
eine Teilkrone mit Retentionsrillen
oder -kästen oder mit Pinledges
einschließlich Rekonstruktion der
gesamten Kaufläche, auch Versor -
gung eines Zahnes durch ein Ve -
neer
Neben den Leistungen nach den
Nummern 2200 bis 2220 sind die
Leistungen nach den Nummern 2050 bis 2130 nicht berechnungs -
fähig. Die Leistung nach der Num -
mer 2210 ist im Zusammenhang
mit Implantaten nicht berech -
nungsfähig. Durch die Leistungen
nach den Nummern 2150 bis 2170
und 2200 bis 2220 sind folgende
zahnärztliche Leistungen abgegol -
ten: Präparieren des Zahnes oder
Implantats, Relationsbestimmung,
Abformungen, Einproben, proviso -
risches Eingliedern, festes Einfügen
der Einlagefüllung oder der Krone
oder der Teilkrone oder des Ve -
neers, Nachkontrolle und Korrektu -
ren. Die Leistung nach der
Nummer 2200 umfasst auch die
Verschraubung und Abdeckung
mit Füllungsmaterial. Zu den Kro -
nen nach den Nummern 2200 bis 2220 gehören Kronen (Voll- und
Teilkronen) jeder zahntechnischen
Ausführung.",C_Konservierende_Leistungen,2067.0,116.25,267.38,406.88,"References: Nummern 2200 bis 2220, Nummern 2050 bis 2130, Nummer 2210, Nummern 2150 bis 2170, Nummer 2200.",,Zu den Kronen nach den Nummern 2200 bis 2220 gehören Kronen (Voll- und Teilkronen) jeder zahntechnischen Ausführung.,,,,,,,,
53,2230,"Enden die Leistungen mit der Prä -
paration eines Zahnes oder der
Abdrucknahme beim Implantat,
so ist die Hälfte der jeweiligen Ge -
bühr berechnungsfähig.",C_Konservierende_Leistungen,,,,,The text does not mention any references to other paragraphs.,,"Enden die Leistungen mit der Präparation eines Zahnes oder der Abdrucknahme beim Implantat, so ist die Hälfte der jeweiligen Gebühr berechnungsfähig.","Rule 1:
Thoughts: This rule states that if a service ends with the preparation of a tooth or the taking of an impression for an implant, only half of the respective fee can be charged. However, the given predicates do not provide any information about the end of a service or the type of service (whether it involves preparation of a tooth or taking an impression for an implant). Therefore, this rule cannot be translated into Prolog code given the current predicates.

Translation:
```prolog
```

Rule 2:
Thoughts: This rule states that the services under the numbers 2230 or 2240 can only be charged if it was objectively impossible for the dentist to continue the treatment or if a continuation was not indicated for medical reasons. However, the given predicates do not provide any information about the reasons for not continuing a treatment. Therefore, this rule cannot be translated into Prolog code given the current predicates.

Translation:
```prolog
```

Rule 3:
Thoughts: This rule does not provide any specific conditions or restrictions that can be applied to an invoice with the provided structure. Therefore, there is nothing to translate into Prolog code for this rule.

Translation:
```prolog
```

Rule 4:
Thoughts: This rule states that if a pre-made temporary is used, the costs for it can be charged separately. However, the given predicates do not provide any information about the type of temporary used (whether it is pre-made or not). Therefore, this rule cannot be translated into Prolog code given the current predicates.

Translation:
```prolog
```

Rule 5:
Thoughts: This rule states that the reintegration of the same temporary, possibly several times, including removal, is covered by the fee under the number 2260 or 2270. However, the given predicates do not provide any information about the reintegration of temporaries or the number of times a temporary is reintegrated. Therefore, this rule cannot be translated into Prolog code given the current predicates.

Translation:
```prolog
```

Rule 6:
Thoughts: This rule states that the service under the number 2400 can be charged a maximum of twice per session per root canal. This rule can be translated into Prolog code by checking if the service under the number 2400 is charged more than twice for the same root canal in the same session.

Translation:
```prolog
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(service(2400, Date, _, _, _, _, _, Teeth), member(service(2400, Date, _, _, _, _, _, Teeth), Services), Services2400),
    findall((Date, Tooth), (member(service(_, Date, _, _, _, _, _, Teeth), Services2400), member(Tooth, Teeth)), DateToothPairs),
    findall((Date, Tooth), (member((Date, Tooth), DateToothPairs), findall(_, member((Date, Tooth), DateToothPairs), L), length(L, N), N > 2), InvalidDateToothPairs),
    InvalidDateToothPairs \= [],
    print('The service under the number 2400 is charged more than twice for the same root canal in the same session.'), 
    true.
```

Rule 7:
Thoughts: This rule states that the service under the number 2410 can only be charged again for the same root canal if the root canal has been definitively treated after the first preparation. However, the given predicates do not provide any information about the treatment of root canals after the first preparation. Therefore, this rule cannot be translated into Prolog code given the current predicates.

Translation:
```prolog
```

Rule 8:
Thoughts: This rule states that if a preparation cannot be carried out in one session due to anatomical peculiarities, the service under the number 2410 can be charged again for the same root canal. However, the given predicates do not provide any information about the reasons for not being able to carry out a preparation in one session. Therefore, this rule cannot be translated into Prolog code given the current predicates.

Translation:
```prolog
```

Rule 9:
Thoughts: This rule states that in the case of a preparation of a root canal, the service can be charged a maximum of twice. This rule can be translated into Prolog code by checking if a service is charged more than twice for the same root canal.

Translation:
```prolog
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(service(Service, Date, _, _, _, _, _, Teeth), (member(service(Service, Date, _, _, _, _, _, Teeth), Services), member(2410, Service)), Services2410),
    findall((Date, Tooth), (member(service(_, Date, _, _, _, _, _, Teeth), Services2410), member(Tooth, Teeth)), DateToothPairs),
    findall((Date, Tooth), (member((Date, Tooth), DateToothPairs), findall(_, member((Date, Tooth), DateToothPairs), L), length(L, N), N > 2), InvalidDateToothPairs),
    InvalidDateToothPairs \= [],
    print('A service is charged more than twice for the same root canal.'), 
    true.
```

Rule 10:
Thoughts: This rule states that the service must be in connection with measures according to the numbers 2360, 2380 and 2410, per tooth and session. This rule can be translated into Prolog code by checking if a service is not in connection with measures according to the numbers 2360, 2380 and 2410 for each tooth and session.

Translation:
```prolog
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(service(Service, Date, _, _, _, _, _, Teeth), (member(service(Service, Date, _, _, _, _, _, Teeth), Services), not(member(Service, [2360, 2380, 2410]))), InvalidServices),
    InvalidServices \= [],
    print('A service is not in connection with measures according to the numbers 2360, 2380 and 2410 for each tooth and session.'), 
    true.
```",,"Given this rules from the german GOZ:
---
Enden die Leistungen mit der Präparation eines Zahnes oder der Abdrucknahme beim Implantat, so ist die Hälfte der jeweiligen Gebühr berechnungsfähig.
---
Die Leistung nach den Nummern 2230 oder 2240 sind nur berechnungsfähig, wenn es dem Zahnarzt objektiv auf Dauer unmöglich war, die Behandlung fortzusetzen oder eine Fortsetzung aus medizinischen Gründen nicht indiziert war.
---
The text does not provide any specific rules that can be applied to an invoice with the provided structure.
---
Bei Verwendung eines konfektionierten Provisoriums sind die Kosten hierfür gesondert berechnungsfähig.
---
Das Wiedereingliedern desselben Provisoriums, gegebenenfalls auch mehrmals, einschließlich Entfernung, ist mit der Gebühr nach der Nummer 2260 oder 2270 abgegolten.
---
Die Leistung nach der Nummer 2400 ist je Wurzelkanal höchstens zweimal je Sitzung berechnungsfähig.
---
Die Leistung nach der Nummer 2410 ist für denselben Wurzelkanal nur dann erneut berechnungsfähig, wenn der Wurzelkanal nach der ersten Aufbereitung definitiv versorgt worden ist.
---
Wenn auf Grund anatomischer Besonderheiten eine Aufbereitung in einer Sitzung nicht erfolgen kann, ist die Leistung nach der Nummer 2410 für denselben Wurzelkanal erneut berechnungsfähig. Dies ist in der Rechnung zu begründen.
---
Je Aufbereitung eines Wurzelkanals ist die Leistung in diesem Fall höchstens zweimal berechnungsfähig.
---
The service must be in connection with measures according to the numbers 2360, 2380 and 2410, per tooth and session.
---


And this predicates:
```prolog
invoice(
    % A Service is defined trough its Service Number (Service), the date / session when it was rendered, its multiplier, the teeth it is applied to, ...
    [service(Service, date(Year, Month, Day), Multiplier, PointScore, Charge, Description, Justification, [tooth(Area, Postion), ...]), ... ],
    % Billed Material Costs are defined trough the Section of the GOZ which allows its billing, the date / session when it was rendered, its multiplier, ...
    [material_cost(GOZ_Section, date(Year, Month, Day), Multiplier, Count, Charge, Description, Justification, [tooth(Area, Postion), ...]), ... ],
    invoice_date(date(Year, Month, Day)),
    invoice_amount(InvoiceAmount)
).
% Charge = (round(PointValue in Euros * Multiplier * PointScore * 100)) / 100
% A Tooth on which a Service is applied is uniquely defined by the combination of its area and position in this area: tooth(Area, Postion) nummerated after the FDI-Zahnschema
% Area = 1 -> Right upper jaw
% Area = 2 -> Left upper jaw
% Area = 3 -> Left lower jaw
% Area = 4 -> Right lower jaw
% Position is exact position of this tooth in its area (from 1 to 8)
% Example invoice
invoice(
    [
        service(11111, date(2023, 10, 01), 1, 100, 5.62, 'Teeth Cleaning', '', [tooth(1,7)]),
        service(11111, date(2023, 10, 01), 1, 100, 5.62, 'Teeth Cleaning', '', [tooth(1,6)]),
        service(987654, date(2023, 10, 01), 3.5, 200, 39.37, 'Tooth Filling', 'Very time consuming', [tooth(1,7), tooth(1,6)]),
        service(123456, date(2023, 10, 02), 2.3, 150, 19.40, 'Consultation', '', [])
    ],
    [
        material_cost('§ 4 (1)', date(2023, 10, 02), 1, 1, 40.00, 'Fill Material', 'Auslagen', [tooth(1,7), tooth(1,6)])
    ]
    invoice_date(date(2023, 10, 04),
    invoice_amount(110.01)
).
```
The 10 rules indicate conditions and restrictions stated in the GOZ that should be adhered to when creating an invoice.
We want to mark invoices as invalid if they do not adhere to those rules.
Which of those rules can you translate into prolog code given following restriction:
Only translate the rules as they are, do not include any examples.
Be as accurate as possible.
You must be able to exactly define every new predicate based on the given ones.
Do not make any assumptions which are not given.
Translate the rules where a translation given the restrictions is possible.
To determine if an invoice is correct, use the predicate 
```prolog
is_invoice_invalid(Invoice) : -
    Invoice = invoice(Services, Material_Costs, invoice_date(date(Year, Month, Day), invoice_amount(InvoiceAmount)),
    % The corresponding rule (only one rule for each predicate)
    % Please double check that the prolog code you write in here is semantically equivalent to the rule in the text.
    print(...), % When rule is not fulfilled and therefore the invoice is invalid, print the reason for the invalidity of the invoice
    true. % Then the invoice is invalid.
```
Use this predicate to check each rule individually. Before you translate a rule, think about it.
Expected format:
---
Rule 1:
Thoughts: ...
Translation:
```prolog
% code here (is_invoice_invalid/1 predicate with potential helper predicates for this rule)
```
---
Rule 2:
Thoughts: ...
Translation:
```prolog
% code here (is_invoice_invalid/1 predicate with potential helper predicates for this rule)
```
---
... 

When you can not translate leaf the code section empty like this:
---
Rule X:
Thoughts: ...
Translation:
```prolog
```
---

So you should have a block for each of the 10 given rules at the end.
For translated rules include print statements, so that the user can see the reason for the invalidity of the invoice.
When you calculate with currencies, always round the result to two digits with round(X*100)/100 and always calculate in Euros (even after summation).
I only want to have exactly defined rules.
First, think step by step how you would translate a rule, then translate it. Explain your thoughts step by step.",1.0,1573.0,1307.0,0.12561,"
"
54,2240,"Sind darüber hinaus weitere Maß -
nahmen erfolgt, so sind drei Viertel
der jeweiligen Gebühr berech -
nungsfähig.
Die Leistung nach den Nummern 2230 oder 2240 sind nur berech -
nungsfähig, wenn es dem Zahn -
arzt objektiv auf Dauer unmöglich
war, die Behandlung fortzusetzen
oder eine Fortsetzung aus medizi -
nischen Gründen nicht indiziert
war.",C_Konservierende_Leistungen,,,,,"References: Nummern 2230, 2240",,"Die Leistung nach den Nummern 2230 oder 2240 sind nur berechnungsfähig, wenn es dem Zahnarzt objektiv auf Dauer unmöglich war, die Behandlung fortzusetzen oder eine Fortsetzung aus medizinischen Gründen nicht indiziert war.",,,,,,,,"
"
55,2250,"Eingliederung einer konfektionier -
ten Krone in der pädiatrischen
Zahnheilkunde
Die Kosten für konfektionierte Kro -
nen sind gesondert berechnungs -
fähig.",C_Konservierende_Leistungen,210.0,11.81,27.16,41.34,The text does not mention any references to other paragraphs.,,The text does not provide any specific rules that can be applied to an invoice with the provided structure.,,,,,,,,"
"
56,2260,"Provisorium im direkten Verfahren
ohne Abformung, je Zahn oder Im -
plantat, einschließlich Entfernung",C_Konservierende_Leistungen,100.0,5.62,12.94,19.68,The text does not mention any references to other paragraphs.,,,,,,,,,,
57,2270,"Provisorium im direkten Verfahren
mit Abformung, je Zahn oder Im -
plantat, einschließlich Entfernung
Bei Verwendung eines konfektio -
nierten Provisoriums sind die
Kosten hierfür gesondert berech -
nungsfähig. Das Wiedereinglie -
dern desselben Provisoriums,
gegebenenfalls auch mehrmals,
einschließlich Entfernung, ist mit
der Gebühr nach der Nummer 2260 oder 2270 abgegolten.",C_Konservierende_Leistungen,270.0,15.19,34.93,53.15,"References: Nummer 2260, Nummer 2270",,Bei Verwendung eines konfektionierten Provisoriums sind die Kosten hierfür gesondert berechnungsfähig.,,,,,,,,"
"
58,2270,"Provisorium im direkten Verfahren
mit Abformung, je Zahn oder Im -
plantat, einschließlich Entfernung
Bei Verwendung eines konfektio -
nierten Provisoriums sind die
Kosten hierfür gesondert berech -
nungsfähig. Das Wiedereinglie -
dern desselben Provisoriums,
gegebenenfalls auch mehrmals,
einschließlich Entfernung, ist mit
der Gebühr nach der Nummer 2260 oder 2270 abgegolten.",C_Konservierende_Leistungen,270.0,15.19,34.93,53.15,"References: Nummer 2260, Nummer 2270",,"Das Wiedereingliedern desselben Provisoriums, gegebenenfalls auch mehrmals, einschließlich Entfernung, ist mit der Gebühr nach der Nummer 2260 oder 2270 abgegolten.",,,,,,,,"
"
59,2290,"Entfernung einer Einlagefüllung,
einer Krone, eines Brückenankers,
Abtrennen eines Brückengliedes
oder Steges oder Ähnliches",C_Konservierende_Leistungen,180.0,10.12,23.28,35.43,The text does not mention any references to other paragraphs.,,,,,,,,,,
60,2300,Entfernung eines Wurzelstiftes,C_Konservierende_Leistungen,270.0,15.19,34.93,53.15,"The text ""Entfernung eines Wurzelstiftes"" does not contain any references to other paragraphs.",,,,,,,,,,
61,2310,"Wiedereingliederung einer Einla -
gefüllung, einer Teilkrone, eines Ve -
neers oder einer Krone oder
Wiederherstellung einer Verblend -
schale an herausnehmbarem
Zahnersatz",C_Konservierende_Leistungen,145.0,8.16,18.76,28.54,The text does not mention any references to other paragraphs.,,,,,,,,,,
62,2320,"Wiederherstellung einer Krone,
einer Teilkrone, eines Veneers,
eines Brückenankers, einer Ver -
blendschale oder einer Verblen -
dung an festsitzendem Zahnersatz,
gegebenenfalls einschließlich Wie -
dereingliederung und Abformung",C_Konservierende_Leistungen,350.0,19.68,45.27,68.9,The text does not mention any references to other paragraphs.,,,,,,,,,,
63,2330,"Maßnahmen zur Erhaltung der vi -
talen Pulpa bei Caries profunda
(Exkavieren, indirekte Überkap -
pung), je Kavität",C_Konservierende_Leistungen,110.0,6.19,14.23,21.65,The text does not mention any references to other paragraphs.,,,,,,,,,,
64,2340,"Maßnahmen zur Erhaltung der frei -
liegenden vitalen Pulpa (Exkavie -
ren, direkte Überkappung), je
Kavität",C_Konservierende_Leistungen,200.0,11.25,25.87,39.37,The text does not mention any references to other paragraphs.,,,,,,,,,,
65,2350,"Amputation und Versorgung der
vitalen Pulpa einschließlich Exka -
vieren",C_Konservierende_Leistungen,290.0,16.31,37.51,57.09,The text provided does not contain any references to other paragraphs.,,,,,,,,,,
66,2360,"Exstirpation der vitalen Pulpa ein -
schließlich Exkavieren, je Kanal",C_Konservierende_Leistungen,110.0,6.19,14.23,21.65,The text doesn't mention any references to other paragraphs.,,,,,,,,,,
67,2380,"Amputation und endgültige Ver -
sorgung der avitalen Milchzahn -
pulpa",C_Konservierende_Leistungen,160.0,9.0,20.7,31.5,The text provided does not contain any references to other paragraphs.,,,,,,,,,,
68,2390,"Trepanation eines Zahnes, als
selbstständige Leistung",C_Konservierende_Leistungen,65.0,3.66,8.41,12.8,The text provided does not mention any references to other paragraphs.,,,,,,,,,,
69,2400,"Elektrometrische Längenbestim -
mung eines Wurzelkanals
Die Leistung nach der Nummer 2400 ist je Wurzelkanal höchstens
zweimal je Sitzung berechnungs-
fähig.",C_Konservierende_Leistungen,70.0,3.94,9.05,13.78,The text does not mention any references to other paragraphs.,,Die Leistung nach der Nummer 2400 ist je Wurzelkanal höchstens zweimal je Sitzung berechnungsfähig.,,,,,,,,"
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(service(2400, Date, _, _, _, _, _, Teeth), member(service(2400, Date, _, _, _, _, _, Teeth), Services), Services2400),
    findall((Date, Tooth), (member(service(_, Date, _, _, _, _, _, Teeth), Services2400), member(Tooth, Teeth)), DateToothPairs),
    findall((Date, Tooth), (member((Date, Tooth), DateToothPairs), findall(_, member((Date, Tooth), DateToothPairs), L), length(L, N), N > 2), InvalidDateToothPairs),
    InvalidDateToothPairs \= [],
    print('The service under the number 2400 is charged more than twice for the same root canal in the same session.'), 
    true.
"
70,2410,"Aufbereitung eines Wurzelkanals
auch retrograd, je Kanal, gege -
benenfalls in mehreren Sitzungen
Die Leistung nach der Nummer 2410 ist für denselben Wurzelkanal
nur dann erneut berechnungsfä -
hig, wenn der Wurzelkanal nach
der ersten Aufbereitung definitiv
versorgt worden ist. Wenn auf
Grund anatomischer Besonderhei -
ten eine Aufbereitung in einer Sit -
zung nicht erfolgen kann, ist die
Leistung nach der Nummer 2410
für denselben Wurzelkanal erneut
berechnungsfähig. Dies ist in der
Rechnung zu begründen. Je Auf -
bereitung eines Wurzelkanals ist
die Leistung in diesem Fall höchs -
tens zweimal berechnungsfähig.",C_Konservierende_Leistungen,392.0,22.05,50.71,77.16,References: Nummer 2410,,"Die Leistung nach der Nummer 2410 ist für denselben Wurzelkanal nur dann erneut berechnungsfähig, wenn der Wurzelkanal nach der ersten Aufbereitung definitiv versorgt worden ist.",,,,,,,,"
"
71,2410,"Aufbereitung eines Wurzelkanals
auch retrograd, je Kanal, gege -
benenfalls in mehreren Sitzungen
Die Leistung nach der Nummer 2410 ist für denselben Wurzelkanal
nur dann erneut berechnungsfä -
hig, wenn der Wurzelkanal nach
der ersten Aufbereitung definitiv
versorgt worden ist. Wenn auf
Grund anatomischer Besonderhei -
ten eine Aufbereitung in einer Sit -
zung nicht erfolgen kann, ist die
Leistung nach der Nummer 2410
für denselben Wurzelkanal erneut
berechnungsfähig. Dies ist in der
Rechnung zu begründen. Je Auf -
bereitung eines Wurzelkanals ist
die Leistung in diesem Fall höchs -
tens zweimal berechnungsfähig.",C_Konservierende_Leistungen,392.0,22.05,50.71,77.16,References: Nummer 2410,,"Wenn auf Grund anatomischer Besonderheiten eine Aufbereitung in einer Sitzung nicht erfolgen kann, ist die Leistung nach der Nummer 2410 für denselben Wurzelkanal erneut berechnungsfähig. Dies ist in der Rechnung zu begründen.",,,,,,,,"
"
72,2410,"Aufbereitung eines Wurzelkanals
auch retrograd, je Kanal, gege -
benenfalls in mehreren Sitzungen
Die Leistung nach der Nummer 2410 ist für denselben Wurzelkanal
nur dann erneut berechnungsfä -
hig, wenn der Wurzelkanal nach
der ersten Aufbereitung definitiv
versorgt worden ist. Wenn auf
Grund anatomischer Besonderhei -
ten eine Aufbereitung in einer Sit -
zung nicht erfolgen kann, ist die
Leistung nach der Nummer 2410
für denselben Wurzelkanal erneut
berechnungsfähig. Dies ist in der
Rechnung zu begründen. Je Auf -
bereitung eines Wurzelkanals ist
die Leistung in diesem Fall höchs -
tens zweimal berechnungsfähig.",C_Konservierende_Leistungen,392.0,22.05,50.71,77.16,References: Nummer 2410,,Je Aufbereitung eines Wurzelkanals ist die Leistung in diesem Fall höchstens zweimal berechnungsfähig.,,,,,,,,"
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(service(Service, Date, _, _, _, _, _, Teeth), (member(service(Service, Date, _, _, _, _, _, Teeth), Services), member(2410, Service)), Services2410),
    findall((Date, Tooth), (member(service(_, Date, _, _, _, _, _, Teeth), Services2410), member(Tooth, Teeth)), DateToothPairs),
    findall((Date, Tooth), (member((Date, Tooth), DateToothPairs), findall(_, member((Date, Tooth), DateToothPairs), L), length(L, N), N > 2), InvalidDateToothPairs),
    InvalidDateToothPairs \= [],
    print('A service is charged more than twice for the same root canal.'), 
    true.
"
73,2420,"Zusätzliche Anwendung elektro -
physikalisch-chemischer Metho -
den, je Kanal",C_Konservierende_Leistungen,70.0,3.94,9.05,13.78,The text provided does not mention or reference any other paragraphs.,,,,,,,,,,
74,2430,"Medikamentöse Einlage in Verbin -
dung mit Maßnahmen nach den
Nummern 2360, 2380 und 2410, je
Zahn und Sitzung",C_Konservierende_Leistungen,204.0,11.47,26.39,40.16,"References: Nummern 2360, 2380, 2410",,"The service must be in connection with measures according to the numbers 2360, 2380 and 2410, per tooth and session.",,,,,,,,"
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(service(Service, Date, _, _, _, _, _, Teeth), (member(service(Service, Date, _, _, _, _, _, Teeth), Services), \+(member(Service, [2360, 2380, 2410]))), InvalidServices),
    InvalidServices \= [],
    print('A service is not in connection with measures according to the numbers 2360, 2380 and 2410 for each tooth and session.'), 
    true.
"
75,2440,Füllung eines Wurzelkanals,C_Konservierende_Leistungen,258.0,14.51,33.37,50.79,The text provided does not contain any references to other paragraphs.,,,,,,,,,,
76,3000,"Entfernung eines einwurzeligen Zah -
nes oder eines enossalen Implantats",D_Chirurgische_Leistungen,70.0,3.94,9.05,13.78,The text provided does not mention any references to other paragraphs.,,,,,,,,,,
77,3010,"Entfernung eines mehrwurzeligen
Zahnes",D_Chirurgische_Leistungen,110.0,6.19,14.23,21.65,The text provided does not contain any references to other paragraphs.,,,,,,,,,,
78,3020,"Entfernung eines tief frakturierten
oder tief zerstörten Zahnes",D_Chirurgische_Leistungen,270.0,15.19,34.93,53.15,The text provided does not contain any references to other paragraphs.,,,,,,,,,,
79,3030,"Entfernung eines Zahnes oder
eines enossalen Implantats durch
Osteotomie",D_Chirurgische_Leistungen,350.0,19.68,45.27,68.9,The text doesn't mention any references to other paragraphs.,,,,,,,,,,
80,3040,"Entfernung eines retinierten, im -
paktierten oder verlagerten Zah -
nes durch Osteotomie",D_Chirurgische_Leistungen,540.0,30.37,69.85,106.3,The text does not mention any references to other paragraphs.,,,,,,,,,,
81,3045,"Entfernen eines extrem verlagerten
und/oder extrem retinierten Zahnes
durch umfangreiche Osteotomie
bei gefährdeten anatomischen
Nachbarstrukturen",D_Chirurgische_Leistungen,767.0,43.14,99.22,150.98,The text does not mention any references to other paragraphs.,,,,,,,,,,
82,3050,"Stillung einer übermäßigen Blutung
im Mund- und/oder Kieferbereich,
als selbstständige Leistung",D_Chirurgische_Leistungen,110.0,6.19,14.23,21.65,The text does not mention any references to other paragraphs.,,,,,,,,,,
83,3060,"Stillung einer Blutung durch Abbin -
den oder Umstechen des Gefäßes
oder durch Knochenbolzung",D_Chirurgische_Leistungen,140.0,7.87,18.11,27.56,The text does not mention any references to other paragraphs.,,,,,,,,,,
84,3070,"Exzision von Schleimhaut oder
Granulationsgewebe, als selbst -
ständige Leistung",D_Chirurgische_Leistungen,45.0,2.53,5.82,8.86,The text doesn't mention any references to other paragraphs.,,,,,,,,,,
85,3080,"Exzision einer Schleimhautwuche -
rung größeren Umfangs (z.B. lappi -
ges Fibrom, Epulis)",D_Chirurgische_Leistungen,150.0,8.44,19.4,29.53,The text does not mention any references to other paragraphs.,,,,,,,,,,
86,3090,"Plastischer Verschluss einer eröffne -
ten Kieferhöhle",D_Chirurgische_Leistungen,370.0,20.81,47.86,72.83,The text provided does not contain any references to other paragraphs.,,,,,,,,,,
87,3100,"Plastische Deckung im Rahmen
einer Wundversorgung einschließ -
lich einer Periostschlitzung, je
Operationsgebiet (Raum einer
zusammenhängenden Schnitt -
führung)
Die Leistung nach der Nummer 3100 ist für dasselbe Operationsge -
biet nicht neben der Leistung nach
der Nummer 3090 berechnungsfä -
hig.",D_Chirurgische_Leistungen,270.0,15.19,34.93,53.15,"References: Nummer 3100, Nummer 3090",,"Die Leistung nach der Nummer 3100 ist für dasselbe Operationsge -
biet nicht neben der Leistung nach
der Nummer 3090 berechnungsfä -
hig.","---
Rule 1:
Thoughts: This rule states that the service with number 3100 cannot be charged alongside the service with number 3090 for the same operation area. This means that if both services are present in the same invoice and applied to the same tooth, the invoice is invalid. We can check this by iterating over the services in the invoice and checking if both services are applied to the same tooth.

Translation:
```prolog
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    member(service(3100, _, _, _, _, _, _, Teeth1), Services),
    member(service(3090, _, _, _, _, _, _, Teeth2), Services),
    intersection(Teeth1, Teeth2, CommonTeeth),
    CommonTeeth \= [],
    print('The service with number 3100 cannot be charged alongside the service with number 3090 for the same operation area.'),
    true.
```
---
Rule 2:
Thoughts: This rule states that the service of scraping granulation tissue or small cysts in connection with extractions, osteotomies or root tip resections cannot be charged under the numbers 3190 to 3200 and 3310. This means that if any service with these numbers is present in the invoice, the invoice is invalid. We can check this by iterating over the services in the invoice and checking if any of these services are present.

Translation:
```prolog
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    member(service(ServiceNumber, _, _, _, _, _, _, _), Services),
    (between(3190, 3200, ServiceNumber); ServiceNumber = 3310),
    print('The service of scraping granulation tissue or small cysts in connection with extractions, osteotomies or root tip resections cannot be charged under the numbers 3190 to 3200 and 3310.'),
    true.
```
---
Rule 3:
Thoughts: This rule states that the service with number 3300 can be charged at most twice per jaw half or front tooth area. This means that if this service is charged more than twice for the same jaw half or front tooth area in the invoice, the invoice is invalid. We can check this by iterating over the services in the invoice and counting the occurrences of this service for each jaw half or front tooth area.

Translation:
```prolog
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(tooth(Area, Position), member(service(3300, _, _, _, _, _, _, [tooth(Area, Position)]), Services), Teeth),
    sort(Teeth, SortedTeeth),
    count_occurrences(SortedTeeth, Counts),
    member((_, Count), Counts),
    Count > 2,
    print('The service with number 3300 can be charged at most twice per jaw half or front tooth area.'),
    true.

count_occurrences(List, Counts) :-
    maplist([X, Y]>>(count(List, X, Y)), List, Counts).
```
---
Rule 4:
Thoughts: This rule states that the services with numbers 3060 or 3310 cannot be charged alongside the service with number 3300. This means that if any of these services are present in the same invoice with the service 3300, the invoice is invalid. We can check this by iterating over the services in the invoice and checking if any of these services are present.

Translation:
```prolog
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    member(service(3300, _, _, _, _, _, _, _), Services),
    (member(service(3060, _, _, _, _, _, _, _), Services); member(service(3310, _, _, _, _, _, _, _), Services)),
    print('The services with numbers 3060 or 3310 cannot be charged alongside the service with number 3300.'),
    true.
```
---
Rule 5:
Thoughts: This rule states that the service with number 3310 can be charged at most twice per jaw half or front tooth area. This means that if this service is charged more than twice for the same jaw half or front tooth area in the invoice, the invoice is invalid. We can check this by iterating over the services in the invoice and counting the occurrences of this service for each jaw half or front tooth area.

Translation:
```prolog
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(tooth(Area, Position), member(service(3310, _, _, _, _, _, _, [tooth(Area, Position)]), Services), Teeth),
    sort(Teeth, SortedTeeth),
    count_occurrences(SortedTeeth, Counts),
    member((_, Count), Counts),
    Count > 2,
    print('The service with number 3310 can be charged at most twice per jaw half or front tooth area.'),
    true.
```
---
Rule 6:
Thoughts: This rule states that the services with numbers 3060 or 3300 cannot be charged alongside the service with number 3310. This means that if any of these services are present in the same invoice with the service 3310, the invoice is invalid. We can check this by iterating over the services in the invoice and checking if any of these services are present.

Translation:
```prolog
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    member(service(3310, _, _, _, _, _, _, _), Services),
    (member(service(3060, _, _, _, _, _, _, _), Services); member(service(3300, _, _, _, _, _, _, _), Services)),
    print('The services with numbers 3060 or 3300 cannot be charged alongside the service with number 3310.'),
    true.
```",,"Given this rules from the german GOZ:
---
Die Leistung nach der Nummer 3100 ist für dasselbe Operationsge -
biet nicht neben der Leistung nach
der Nummer 3090 berechnungsfä -
hig.
---
Das Auskratzen von Granulationsgewebe oder kleinen Zysten in Verbindung mit Extraktionen, Osteotomien oder Wurzelspitzenresektionen kann nicht nach den Nummern 3190 bis 3200 sowie 3310 berechnet werden.
---
Die Leistung nach der Nummer 3300 ist höchstens zweimal je Kieferhälfte oder Frontzahnbereich berechnungsfähig.
---
Neben der Leistung nach der Nummer 3300 sind die Leistungen nach den Nummern 3060 oder 3310 nicht berechnungsfähig.
---
Die Leistung nach der Nummer 3310 ist höchstens zweimal je Kieferhälfte oder Frontzahnbereich berechnungsfähig.
---
Neben der Leistung nach der Nummer 3310 sind die Leistungen nach den Nummern 3060 oder 3300 nicht berechnungsfähig.
---


And this predicates:
```prolog
invoice(
    % A Service is defined trough its Service Number (Service), the date / session when it was rendered, its multiplier, the teeth it is applied to, ...
    [service(Service, date(Year, Month, Day), Multiplier, PointScore, Charge, Description, Justification, [tooth(Area, Postion), ...]), ... ],
    % Billed Material Costs are defined trough the Section of the GOZ which allows its billing, the date / session when it was rendered, its multiplier, ...
    [material_cost(GOZ_Section, date(Year, Month, Day), Multiplier, Count, Charge, Description, Justification, [tooth(Area, Postion), ...]), ... ],
    invoice_date(date(Year, Month, Day)),
    invoice_amount(InvoiceAmount)
).
% Charge = (round(PointValue in Euros * Multiplier * PointScore * 100)) / 100
% A Tooth on which a Service is applied is uniquely defined by the combination of its area and position in this area: tooth(Area, Postion) nummerated after the FDI-Zahnschema
% Area = 1 -> Right upper jaw
% Area = 2 -> Left upper jaw
% Area = 3 -> Left lower jaw
% Area = 4 -> Right lower jaw
% Position is exact position of this tooth in its area (from 1 to 8)
% Example invoice
invoice(
    [
        service(11111, date(2023, 10, 01), 1, 100, 5.62, 'Teeth Cleaning', '', [tooth(1,7)]),
        service(11111, date(2023, 10, 01), 1, 100, 5.62, 'Teeth Cleaning', '', [tooth(1,6)]),
        service(987654, date(2023, 10, 01), 3.5, 200, 39.37, 'Tooth Filling', 'Very time consuming', [tooth(1,7), tooth(1,6)]),
        service(123456, date(2023, 10, 02), 2.3, 150, 19.40, 'Consultation', '', [])
    ],
    [
        material_cost('§ 4 (1)', date(2023, 10, 02), 1, 1, 40.00, 'Fill Material', 'Auslagen', [tooth(1,7), tooth(1,6)])
    ]
    invoice_date(date(2023, 10, 04),
    invoice_amount(110.01)
).
```
The 6 rules indicate conditions and restrictions stated in the GOZ that should be adhered to when creating an invoice.
We want to mark invoices as invalid if they do not adhere to those rules.
Which of those rules can you translate into prolog code given following restriction:
Only translate the rules as they are, do not include any examples.
Be as accurate as possible.
You must be able to exactly define every new predicate based on the given ones.
Do not make any assumptions which are not given.
Translate the rules where a translation given the restrictions is possible.
To determine if an invoice is correct, use the predicate 
```prolog
is_invoice_invalid(Invoice) : -
    Invoice = invoice(Services, Material_Costs, invoice_date(date(Year, Month, Day), invoice_amount(InvoiceAmount)),
    % The corresponding rule (only one rule for each predicate)
    % Please double check that the prolog code you write in here is semantically equivalent to the rule in the text.
    print(...), % When rule is not fulfilled and therefore the invoice is invalid, print the reason for the invalidity of the invoice
    true. % Then the invoice is invalid.
```
Use this predicate to check each rule individually. Before you translate a rule, think about it.
Expected format:
---
Rule 1:
Thoughts: ...
Translation:
```prolog
% code here (is_invoice_invalid/1 predicate with potential helper predicates for this rule)
```
---
Rule 2:
Thoughts: ...
Translation:
```prolog
% code here (is_invoice_invalid/1 predicate with potential helper predicates for this rule)
```
---
... 

When you can not translate leaf the code section empty like this:
---
Rule X:
Thoughts: ...
Translation:
```prolog
```
---

So you should have a block for each of the 6 given rules at the end.
For translated rules include print statements, so that the user can see the reason for the invalidity of the invoice.
When you calculate with currencies, always round the result to two digits with round(X*100)/100 and always calculate in Euros (even after summation).
I only want to have exactly defined rules.
First, think step by step how you would translate a rule, then translate it. Explain your thoughts step by step.",1.0,1403.0,1239.0,0.11643,"
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    member(service(3100, _, _, _, _, _, _, Teeth1), Services),
    member(service(3090, _, _, _, _, _, _, Teeth2), Services),
    intersection(Teeth1, Teeth2, CommonTeeth),
    CommonTeeth \= [],
    print('The service with number 3100 cannot be charged alongside the service with number 3090 for the same operation area.'),
    true.
"
88,3110,"Resektion einer Wurzelspitze an
einem Frontzahn",D_Chirurgische_Leistungen,460.0,25.87,59.5,90.55,The text provided does not contain any references to other paragraphs.,,,,,,,,,,
89,3120,"Resektion einer Wurzelspitze an
einem Seitenzahn
Die Kosten für konfektionierte api -
kale Stiftsysteme sind gesondert
berechnungsfähig.",D_Chirurgische_Leistungen,580.0,32.62,75.03,114.17,The text does not mention any references to other paragraphs.,,,,,,,,,,
90,3130,"Hemisektion und Teilextraktion
eines mehrwurzeligen Zahnes",D_Chirurgische_Leistungen,280.0,15.75,36.22,55.12,The text provided does not contain any references to other paragraphs.,,,,,,,,,,
91,3140,"Reimplantation eines Zahnes ein -
schließlich einfacher Fixation",D_Chirurgische_Leistungen,550.0,30.93,71.15,108.27,The text provided does not contain any references to other paragraphs.,,,,,,,,,,
92,3160,"Transplantation eines Zahnes ein -
schließlich operativer Schaffung
des Knochenbettes",D_Chirurgische_Leistungen,650.0,36.56,84.08,127.95,The text provided does not contain any references to other paragraphs.,,,,,,,,,,
93,3190,"Operation einer Zyste durch Zyst -
ektomie in Verbindung mit einer
Osteotomie oder Wurzelspitzenre -
sektion",D_Chirurgische_Leistungen,270.0,15.19,34.93,53.15,The text does not mention any references to other paragraphs.,,,,,,,,,,
94,3200,"Operation einer Zyste durch Zyst -
ektomie, als selbstständige Leis -
tung
Das Auskratzen von Granulations -
gewebe oder kleinen Zysten in
Verbindung mit Extraktionen, Os -
teotomien oder Wurzelspitzenre -
sektionen kann nicht nach den
Nummern 3190 bis 3200 sowie 3310
berechnet werden.",D_Chirurgische_Leistungen,500.0,28.12,64.68,98.42,"References: Nummern 3190 bis 3200, 3310",,"Das Auskratzen von Granulationsgewebe oder kleinen Zysten in Verbindung mit Extraktionen, Osteotomien oder Wurzelspitzenresektionen kann nicht nach den Nummern 3190 bis 3200 sowie 3310 berechnet werden.",,,,,,,,"
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    member(service(ServiceNumber, _, _, _, _, _, _, _), Services),
    (between(3190, 3200, ServiceNumber); ServiceNumber = 3310),
    print('The service of scraping granulation tissue or small cysts in connection with extractions, osteotomies or root tip resections cannot be charged under the numbers 3190 to 3200 and 3310.'),
    true.
"
95,3210,"Beseitigung störender Schleim -
hautbänder, je Kieferhälfte oder
Frontzahnbereich",D_Chirurgische_Leistungen,140.0,7.87,18.11,27.56,The text doesn't mention any references to other paragraphs.,,,,,,,,,,
96,3230,"Knochenresektion am Alveolar -
fortsatz zur Formung des Prothe -
senlagers, als selbstständige Leis-
tung, je Kiefer",D_Chirurgische_Leistungen,440.0,24.75,56.92,86.61,The text does not mention any references to other paragraphs.,,,,,,,,,,
97,3240,"Vestibulumplastik oder Mundbo -
denplastik kleineren Umfangs
auch Gingivaextensionsplastik, je
Kieferhälfte oder Frontzahnbe -
reich, für einen Bereich bis zu zwei
nebeneinander liegenden Zäh -
nen, gegebenenfalls auch am
zahnlosen Kieferabschnitt",D_Chirurgische_Leistungen,550.0,30.93,71.15,108.27,The text does not mention any references to other paragraphs.,,,,,,,,,,
98,3250,"Tuberplastik, einseitig",D_Chirurgische_Leistungen,270.0,15.19,34.93,53.15,The text provided does not contain any references to other paragraphs.,,,,,,,,,,
99,3260,"Freilegen eines retinierten oder
verlagerten Zahnes zur orthopädi -
schen Einstellung",D_Chirurgische_Leistungen,550.0,30.93,71.15,108.27,The text doesn't mention any references to other paragraphs.,,,,,,,,,,
100,3270,Germektomie,D_Chirurgische_Leistungen,590.0,33.18,76.32,116.14,The text provided does not contain any references to other paragraphs.,,,,,,,,,,
101,3280,"Lösen, Verlegen und Fixieren des
Lippenbändchens und Durchtren -
nen des Septums bei echtem Dias-
tema",D_Chirurgische_Leistungen,270.0,15.19,34.93,53.15,The text does not mention any references to other paragraphs.,,,,,,,,,,
102,3290,"Kontrolle nach chirurgischem Ein -
griff, als selbstständige Leistung, je
Kieferhälfte oder Frontzahnbereich",D_Chirurgische_Leistungen,55.0,3.09,7.11,10.83,The text does not mention any references to other paragraphs.,,,,,,,,,,
103,3300,"Nachbehandlung nach chirurgi -
schem Eingriff (z.B. Tamponieren),
als selbstständige Leistung, je Ope -
rationsgebiet (Raum einer zusam -
menhängenden Schnittführung)
Die Leistung nach der Nummer 3300 ist höchstens zweimal je Kie -
ferhälfte oder Frontzahnbereich
berechnungsfähig. Neben der
Leistung nach der Nummer 3300
sind die Leistungen nach den
Nummern 3060 oder 3310 nicht
berechnungsfähig.",D_Chirurgische_Leistungen,65.0,3.66,8.41,12.8,"References: Nummer 3300, Nummern 3060, Nummer 3310",,Die Leistung nach der Nummer 3300 ist höchstens zweimal je Kieferhälfte oder Frontzahnbereich berechnungsfähig.,,,,,,,,"
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(tooth(Area, Position), member(service(3300, _, _, _, _, _, _, [tooth(Area, Position)]), Services), Teeth),
    sort(Teeth, SortedTeeth),
    count_occurrences(SortedTeeth, Counts),
    member((_, Count), Counts),
    Count > 2,
    print('The service with number 3300 can be charged at most twice per jaw half or front tooth area.'),
    true.

count_occurrences(List, Counts) :-
    maplist([X, Y]>>(count(List, X, Y)), List, Counts).
"
104,3300,"Nachbehandlung nach chirurgi -
schem Eingriff (z.B. Tamponieren),
als selbstständige Leistung, je Ope -
rationsgebiet (Raum einer zusam -
menhängenden Schnittführung)
Die Leistung nach der Nummer 3300 ist höchstens zweimal je Kie -
ferhälfte oder Frontzahnbereich
berechnungsfähig. Neben der
Leistung nach der Nummer 3300
sind die Leistungen nach den
Nummern 3060 oder 3310 nicht
berechnungsfähig.",D_Chirurgische_Leistungen,65.0,3.66,8.41,12.8,"References: Nummer 3300, Nummern 3060, Nummer 3310",,Neben der Leistung nach der Nummer 3300 sind die Leistungen nach den Nummern 3060 oder 3310 nicht berechnungsfähig.,,,,,,,,"
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    member(service(3300, _, _, _, _, _, _, _), Services),
    (member(service(3060, _, _, _, _, _, _, _), Services); member(service(3310, _, _, _, _, _, _, _), Services)),
    print('The services with numbers 3060 or 3310 cannot be charged alongside the service with number 3300.'),
    true.
"
105,3310,"Chirurgische Wundrevision (z.B.
Glätten des Knochens, Auskrat -
zen, Naht), je Operationsgebiet
(Raum einer zusammenhängen -
den Schnittführung)
Die Leistung nach der Nummer 3310 ist höchstens zweimal je Kie -
ferhälfte oder Frontzahnbereich
berechnungsfähig. Neben der
Leistung nach der Nummer 3310
sind die Leistungen nach den
Nummern 3060 oder 3300 nicht
berechnungsfähig.",D_Chirurgische_Leistungen,100.0,5.62,12.94,19.68,"References: Nummer 3310, Nummern 3060, Nummer 3300",,Die Leistung nach der Nummer 3310 ist höchstens zweimal je Kieferhälfte oder Frontzahnbereich berechnungsfähig.,,,,,,,,"
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(tooth(Area, Position), member(service(3310, _, _, _, _, _, _, [tooth(Area, Position)]), Services), Teeth),
    sort(Teeth, SortedTeeth),
    count_occurrences(SortedTeeth, Counts),
    member((_, Count), Counts),
    Count > 2,
    print('The service with number 3310 can be charged at most twice per jaw half or front tooth area.'),
    true.
"
106,3310,"Chirurgische Wundrevision (z.B.
Glätten des Knochens, Auskrat -
zen, Naht), je Operationsgebiet
(Raum einer zusammenhängen -
den Schnittführung)
Die Leistung nach der Nummer 3310 ist höchstens zweimal je Kie -
ferhälfte oder Frontzahnbereich
berechnungsfähig. Neben der
Leistung nach der Nummer 3310
sind die Leistungen nach den
Nummern 3060 oder 3300 nicht
berechnungsfähig.",D_Chirurgische_Leistungen,100.0,5.62,12.94,19.68,"References: Nummer 3310, Nummern 3060, Nummer 3300",,Neben der Leistung nach der Nummer 3310 sind die Leistungen nach den Nummern 3060 oder 3300 nicht berechnungsfähig.,,,,,,,,"
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    member(service(3310, _, _, _, _, _, _, _), Services),
    (member(service(3060, _, _, _, _, _, _, _), Services); member(service(3300, _, _, _, _, _, _, _), Services)),
    print('The services with numbers 3060 or 3300 cannot be charged alongside the service with number 3310.'),
    true.
"
107,4000,"Erstellen und Dokumentieren eines
Parodontalstatus
Die Leistung nach der Nummer 4000
ist innerhalb eines Jahres höchstens
zweimal berechnungsfähig .",E_Leistungen_bei_Erkrankungen_der_Mundschleimhaut,160.0,9.0,20.7,31.5,References: Nummer 4000,,Die Leistung nach der Nummer 4000 ist innerhalb eines Jahres höchstens zweimal berechnungsfähig.,"---
Rule 1:
Thoughts: This rule states that the service with the number 4000 can be charged at most twice in a year. We can check this by counting the number of times this service appears in the invoice within a year. If it appears more than twice, the invoice is invalid.

Translation:
```prolog
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(Service, (member(service(4000, date(Year, _, _), _, _, _, _, _, _), Services)), Services4000),
    length(Services4000, Count),
    Count > 2,
    print('The service with the number 4000 is charged more than twice in a year.'),
    true.
```
---
Rule 2:
Thoughts: This rule is similar to the first one, but for the service with the number 4005. We can use the same approach.

Translation:
```prolog
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(Service, (member(service(4005, date(Year, _, _), _, _, _, _, _, _), Services)), Services4005),
    length(Services4005, Count),
    Count > 2,
    print('The service with the number 4005 is charged more than twice in a year.'),
    true.
```
---
Rule 3:
Thoughts: This rule states that antibacterial materials are separately chargeable. However, there is no information given on how to identify antibacterial materials in the invoice. Therefore, this rule cannot be translated into Prolog code.

Translation:
```prolog
```
---
Rule 4:
Thoughts: This rule states that the services with the numbers 4050 and 4055 can be charged at most once in 30 days for the same tooth. We can check this by finding all services with these numbers applied to the same tooth within 30 days. If there are more than one such service, the invoice is invalid.

Translation:
```prolog
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(service(Service, date(Year, Month, Day), _, _, _, _, _, Teeth), 
            (member(service(Service, date(Year, Month, Day), _, _, _, _, _, Teeth), Services), 
             member(Service, [4050, 4055]), 
             member(tooth(Area, Position), Teeth), 
             findall(_, (member(service(Service, date(Year, Month2, Day2), _, _, _, _, _, Teeth2), Services), 
                         member(tooth(Area, Position), Teeth2), 
                         abs(Day - Day2) <= 30), Services30), 
             length(Services30, Count), 
             Count > 1), 
    InvalidServices),
    InvalidServices \= [],
    print('The services with the numbers 4050 and 4055 are charged more than once in 30 days for the same tooth.'),
    true.
```
---
Rule 5:
Thoughts: This rule states that the service with the number 4060 cannot be charged alongside the services with the numbers 1040, 4050, and 4055. We can check this by finding all services with the number 4060 and checking if any of the forbidden services appear in the same invoice. If they do, the invoice is invalid.

Translation:
```prolog
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    member(service(4060, _, _, _, _, _, _, _), Services),
    member(service(Service, _, _, _, _, _, _, _), Services),
    member(Service, [1040, 4050, 4055]),
    print('The service with the number 4060 is charged alongside the services with the numbers 1040, 4050, and 4055.'),
    true.
```
---
Rule 6:
Thoughts: This rule states that the services with the numbers 4090 and 4100 cannot be charged alongside the services with the numbers 4050 to 4080 in the same session. We can check this by finding all services with the numbers 4090 and 4100 and checking if any of the forbidden services appear in the same session. If they do, the invoice is invalid.

Translation:
```prolog
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    member(service(Service1, Date, _, _, _, _, _, _), Services),
    member(Service1, [4090, 4100]),
    member(service(Service2, Date, _, _, _, _, _, _), Services),
    between(4050, 4080, Service2),
    print('The services with the numbers 4090 and 4100 are charged alongside the services with the numbers 4050 to 4080 in the same session.'),
    true.
```
---
Rule 7:
Thoughts: This rule states that the service with the number 4110 can be charged even during a surgical treatment. However, there is no information given on how to identify a surgical treatment in the invoice. Therefore, this rule cannot be translated into Prolog code.

Translation:
```prolog
```
---
Rule 8:
Thoughts: This rule states that the costs of a once-used bone collector or scraper are separately chargeable. However, there is no information given on how to identify these items in the invoice. Therefore, this rule cannot be translated into Prolog code.

Translation:
```prolog
```
---",,"Given this rules from the german GOZ:
---
Die Leistung nach der Nummer 4000 ist innerhalb eines Jahres höchstens zweimal berechnungsfähig.
---
Die Leistung nach der Nummer 4005 ist innerhalb eines Jahres höchstens zweimal berechnungsfähig.
---
Die verwendeten antibakteriellen Materialien sind gesondert be - rechnungsfähig.
---
Die Leistungen nach den Nummern 4050 und 4055 sind für denselben Zahn innerhalb von 30 Tagen nur einmal berechnungsfähig.
---
Die Leistung nach der Nummer 4060 ist neben den Leistungen nach den Nummern 1040, 4050 und 4055 nicht berechnungsfähig.
---
Neben den Leistungen nach den Nummern 4090 und 4100 sind Leis -
tungen nach den Nummern 4050 bis 4080 in der gleichen Sitzung nicht berechnungsfähig.
---
Die Leistung nach der Nummer 4110 ist auch im Rahmen einer chirurgischen Behandlung berechnungsfähig.
---
Die Kosten eines einmal verwendbaren Knochenkollektors oder -schabers sind gesondert berechnungsfähig.
---


And this predicates:
```prolog
invoice(
    % A Service is defined trough its Service Number (Service), the date / session when it was rendered, its multiplier, the teeth it is applied to, ...
    [service(Service, date(Year, Month, Day), Multiplier, PointScore, Charge, Description, Justification, [tooth(Area, Postion), ...]), ... ],
    % Billed Material Costs are defined trough the Section of the GOZ which allows its billing, the date / session when it was rendered, its multiplier, ...
    [material_cost(GOZ_Section, date(Year, Month, Day), Multiplier, Count, Charge, Description, Justification, [tooth(Area, Postion), ...]), ... ],
    invoice_date(date(Year, Month, Day)),
    invoice_amount(InvoiceAmount)
).
% Charge = (round(PointValue in Euros * Multiplier * PointScore * 100)) / 100
% A Tooth on which a Service is applied is uniquely defined by the combination of its area and position in this area: tooth(Area, Postion) nummerated after the FDI-Zahnschema
% Area = 1 -> Right upper jaw
% Area = 2 -> Left upper jaw
% Area = 3 -> Left lower jaw
% Area = 4 -> Right lower jaw
% Position is exact position of this tooth in its area (from 1 to 8)
% Example invoice
invoice(
    [
        service(11111, date(2023, 10, 01), 1, 100, 5.62, 'Teeth Cleaning', '', [tooth(1,7)]),
        service(11111, date(2023, 10, 01), 1, 100, 5.62, 'Teeth Cleaning', '', [tooth(1,6)]),
        service(987654, date(2023, 10, 01), 3.5, 200, 39.37, 'Tooth Filling', 'Very time consuming', [tooth(1,7), tooth(1,6)]),
        service(123456, date(2023, 10, 02), 2.3, 150, 19.40, 'Consultation', '', [])
    ],
    [
        material_cost('§ 4 (1)', date(2023, 10, 02), 1, 1, 40.00, 'Fill Material', 'Auslagen', [tooth(1,7), tooth(1,6)])
    ]
    invoice_date(date(2023, 10, 04),
    invoice_amount(110.01)
).
```
The 8 rules indicate conditions and restrictions stated in the GOZ that should be adhered to when creating an invoice.
We want to mark invoices as invalid if they do not adhere to those rules.
Which of those rules can you translate into prolog code given following restriction:
Only translate the rules as they are, do not include any examples.
Be as accurate as possible.
You must be able to exactly define every new predicate based on the given ones.
Do not make any assumptions which are not given.
Translate the rules where a translation given the restrictions is possible.
To determine if an invoice is correct, use the predicate 
```prolog
is_invoice_invalid(Invoice) : -
    Invoice = invoice(Services, Material_Costs, invoice_date(date(Year, Month, Day), invoice_amount(InvoiceAmount)),
    % The corresponding rule (only one rule for each predicate)
    % Please double check that the prolog code you write in here is semantically equivalent to the rule in the text.
    print(...), % When rule is not fulfilled and therefore the invoice is invalid, print the reason for the invalidity of the invoice
    true. % Then the invoice is invalid.
```
Use this predicate to check each rule individually. Before you translate a rule, think about it.
Expected format:
---
Rule 1:
Thoughts: ...
Translation:
```prolog
% code here (is_invoice_invalid/1 predicate with potential helper predicates for this rule)
```
---
Rule 2:
Thoughts: ...
Translation:
```prolog
% code here (is_invoice_invalid/1 predicate with potential helper predicates for this rule)
```
---
... 

When you can not translate leaf the code section empty like this:
---
Rule X:
Thoughts: ...
Translation:
```prolog
```
---

So you should have a block for each of the 8 given rules at the end.
For translated rules include print statements, so that the user can see the reason for the invalidity of the invoice.
When you calculate with currencies, always round the result to two digits with round(X*100)/100 and always calculate in Euros (even after summation).
I only want to have exactly defined rules.
First, think step by step how you would translate a rule, then translate it. Explain your thoughts step by step.",4.0,7017.0,2406.0,0.35486999999999996,"
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(Service, (member(service(4000, date(Year, _, _), _, _, _, _, _, _), Services)), Services4000),
    length(Services4000, Count),
    Count > 2,
    print('The service with the number 4000 is charged more than twice in a year.'),
    true.
"
108,4005,"Erhebung mindestens eines Gingi -
valindex und/oder eines Parodon -
talindex (z.B. des Parodontalen
Screening-Index PSI)
Die Leistung nach der Nummer 4005
ist innerhalb eines Jahres höchstens
zweimal berechnungsfähig.",E_Leistungen_bei_Erkrankungen_der_Mundschleimhaut,80.0,4.5,10.35,15.75,The text does not mention any references to other paragraphs.,,Die Leistung nach der Nummer 4005 ist innerhalb eines Jahres höchstens zweimal berechnungsfähig.,,,,,,,,"
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(Service, (member(service(4005, date(Year, _, _), _, _, _, _, _, _), Services)), Services4005),
    length(Services4005, Count),
    Count > 2,
    print('The service with the number 4005 is charged more than twice in a year.'),
    true.
"
109,4020,"Lokalbehandlung von Mund -
schleimhauterkrankungen, gege -
benenfalls einschließlich Taschen-
spülungen, je Sitzung",E_Leistungen_bei_Erkrankungen_der_Mundschleimhaut,45.0,2.53,5.82,8.86,The text does not mention any references to other paragraphs.,,,,,,,,,,
110,4025,"Subgingivale medikamentöse an -
tibakterielle Lokalapplikation, je
Zahn
Die verwendeten antibakteriellen
Materialien sind gesondert be -
rechnungsfähig.",E_Leistungen_bei_Erkrankungen_der_Mundschleimhaut,15.0,0.84,1.94,2.95,The text does not mention any references to other paragraphs.,,Die verwendeten antibakteriellen Materialien sind gesondert be - rechnungsfähig.,,,,,,,,"
"
111,4030,"Beseitigung von scharfen Zahnkan -
ten, störenden Prothesenrändern
und Fremdreizen am Parodon -
tium, je Kieferhälfte oder Front -
zahnbereich",E_Leistungen_bei_Erkrankungen_der_Mundschleimhaut,35.0,1.97,4.53,6.89,The text does not mention any references to other paragraphs.,,,,,,,,,,
112,4040,"Beseitigung grober Vorkontakte
der Okklusion und Artikulation
durch Einschleifen des natürlichen
Gebisses oder bereits vorhande -
nen Zahnersatzes, je Sitzung",E_Leistungen_bei_Erkrankungen_der_Mundschleimhaut,45.0,2.53,5.82,8.86,The text does not mention any references to other paragraphs.,,,,,,,,,,
113,4050,"Entfernung harter und weicher
Zahnbeläge, gegebenenfalls ein -
schließlich Polieren an einem ein -
wurzeligen Zahn oder Implantat,
auch Brückenglied",E_Leistungen_bei_Erkrankungen_der_Mundschleimhaut,10.0,0.56,1.29,1.97,The text does not mention any references to other paragraphs.,,,,,,,,,,
114,4055,"Entfernung harter und weicher
Zahnbeläge, gegebenenfalls ein -
schließlich Polieren an einem
mehrwurzeligen Zahn
Die Leistungen nach den Num -
mern 4050 und 4055 sind für densel -
ben Zahn innerhalb von 30 Tagen
nur einmal berechnungsfähig.",E_Leistungen_bei_Erkrankungen_der_Mundschleimhaut,13.0,0.73,1.68,2.56,"References: Nummern 4050, 4055",,Die Leistungen nach den Nummern 4050 und 4055 sind für denselben Zahn innerhalb von 30 Tagen nur einmal berechnungsfähig.,,,,,,,,"
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(service(Service, date(Year, Month, Day), _, _, _, _, _, Teeth), 
            (member(service(Service, date(Year, Month, Day), _, _, _, _, _, Teeth), Services), 
             member(Service, [4050, 4055]), 
             member(tooth(Area, Position), Teeth), 
             findall(_, (member(service(Service, date(Year, Month2, Day2), _, _, _, _, _, Teeth2), Services), 
                         member(tooth(Area, Position), Teeth2), 
                         date_to_julian(date(Year, Month, Day), Julian1), 
                         date_to_julian(date(Year, Month2, Day2), Julian2), 
                         Diff is Julian1 - Julian2, 
                         AbsDiff is abs(Diff), 
                         AbsDiff =< 30), Services30), 
             length(Services30, Count), 
             Count > 1), 
    InvalidServices),
    InvalidServices \= [],
    print('The services with the numbers 4050 and 4055 are charged more than once in 30 days for the same tooth.'),
    true.
"
115,4060,"Kontrolle nach Entfernung harter
und weicher Zahnbeläge oder pro -
fessioneller Zahnreinigung nach der
Nummer 1040 mit Nachreinigung
einschließlich Polieren, je Zahn,
oder Implantat, auch Brückenglied
Die Leistung nach der Nummer 4060 ist neben den Leistungen
nach den Nummern 1040, 4050
und 4055 nicht berechnungsfähig.",E_Leistungen_bei_Erkrankungen_der_Mundschleimhaut,7.0,0.39,0.91,1.38,"References: Nummer 1040, Nummer 4060, Nummer 4050, Nummer 4055",,"Die Leistung nach der Nummer 4060 ist neben den Leistungen nach den Nummern 1040, 4050 und 4055 nicht berechnungsfähig.",,,,,,,,"
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    member(service(4060, _, _, _, _, _, _, _), Services),
    member(service(Service, _, _, _, _, _, _, _), Services),
    member(Service, [1040, 4050, 4055]),
    print('The service with the number 4060 is charged alongside the services with the numbers 1040, 4050, and 4055.'),
    true.
"
116,4070,"Parodontalchirurgische Therapie
(insbesondere Entfernung subgin -
givaler Konkremente und Wurzel -
glättung) an einem einwurzeligen
Zahn oder Implantat, geschlosse -
nes Vorgehen",E_Leistungen_bei_Erkrankungen_der_Mundschleimhaut,100.0,5.62,12.94,19.68,The text does not mention any references to other paragraphs.,,,,,,,,,,
117,4075,"Parodontalchirurgische Therapie
(insbesondere Entfernung subgingi -
valer Konkremente und Wurzelglät -
tung) an einem mehrwurzeligen
Zahn, geschlossenes Vorgehen",E_Leistungen_bei_Erkrankungen_der_Mundschleimhaut,130.0,7.31,16.82,25.59,The text doesn't mention any references to other paragraphs.,,,,,,,,,,
118,4080,"Gingivektomie, Gingivoplastik, je
Parodontium",E_Leistungen_bei_Erkrankungen_der_Mundschleimhaut,45.0,2.53,5.82,8.86,The text provided does not contain any references to other paragraphs.,,,,,,,,,,
119,4090,"Lappenoperation, offene Küret -
tage einschließlich Osteoplastik an
einem Frontzahn, je Parodontium",E_Leistungen_bei_Erkrankungen_der_Mundschleimhaut,180.0,10.12,23.28,35.43,The text doesn't mention any references to other paragraphs.,,,,,,,,,,
120,4100,"Lappenoperation, offene Küret -
tage einschließlich Osteoplastik an
einem Seitenzahn, je Parodontium
Neben den Leistungen nach den
Nummern 4090 und 4100 sind Leis -
tungen nach den Nummern 4050
bis 4080 in der gleichen Sitzung
nicht berechnungsfähig.",E_Leistungen_bei_Erkrankungen_der_Mundschleimhaut,275.0,15.47,35.57,54.13,"References: Nummern 4090, 4100, 4050 bis 4080",,"Neben den Leistungen nach den Nummern 4090 und 4100 sind Leis -
tungen nach den Nummern 4050 bis 4080 in der gleichen Sitzung nicht berechnungsfähig.",,,,,,,,"
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    member(service(Service1, Date, _, _, _, _, _, _), Services),
    member(Service1, [4090, 4100]),
    member(service(Service2, Date, _, _, _, _, _, _), Services),
    between(4050, 4080, Service2),
    print('The services with the numbers 4090 and 4100 are charged alongside the services with the numbers 4050 to 4080 in the same session.'),
    true.
"
121,4110,"Auffüllen von parodontalen Kno -
chendefekten mit Aufbaumaterial
(Knochen- und/oder Knochener -
satzmaterial), auch Einbringen von
Proteinen, zur regenerativen Be -
handlung parodontaler Defekte,
gegebenenfalls einschließlich Ma -
terialentnahme im Aufbaugebiet,
je Zahn oder Parodontium oder
Implantat
Die Leistung nach der Nummer 4110 ist auch im Rahmen einer chi -
rurgischen Behandlung berech -
nungsfähig. Die Kosten eines
einmal verwendbaren Knochen -
kollektors oder -schabers sind ge -
sondert berechnungsfähig.",E_Leistungen_bei_Erkrankungen_der_Mundschleimhaut,180.0,10.12,23.28,35.43,The text does not contain any references to other paragraphs.,,Die Leistung nach der Nummer 4110 ist auch im Rahmen einer chirurgischen Behandlung berechnungsfähig.,,,,,,,,"
"
122,4110,"Auffüllen von parodontalen Kno -
chendefekten mit Aufbaumaterial
(Knochen- und/oder Knochener -
satzmaterial), auch Einbringen von
Proteinen, zur regenerativen Be -
handlung parodontaler Defekte,
gegebenenfalls einschließlich Ma -
terialentnahme im Aufbaugebiet,
je Zahn oder Parodontium oder
Implantat
Die Leistung nach der Nummer 4110 ist auch im Rahmen einer chi -
rurgischen Behandlung berech -
nungsfähig. Die Kosten eines
einmal verwendbaren Knochen -
kollektors oder -schabers sind ge -
sondert berechnungsfähig.",E_Leistungen_bei_Erkrankungen_der_Mundschleimhaut,180.0,10.12,23.28,35.43,The text does not contain any references to other paragraphs.,,Die Kosten eines einmal verwendbaren Knochenkollektors oder -schabers sind gesondert berechnungsfähig.,,,,,,,,"
"
123,4120,"Verlegen eines gestielten Schleim -
hautlappens, je Kieferhälfte oder
Frontzahnbereich",E_Leistungen_bei_Erkrankungen_der_Mundschleimhaut,275.0,15.47,35.57,54.13,The text provided does not contain any references to other paragraphs.,,,,,,,,,,
124,4130,"Gewinnung und Transplantation
von Schleimhaut, gegebenenfalls
einschließlich Versorgung der Ent -
nahmestelle, je Transplantat",E_Leistungen_bei_Erkrankungen_der_Mundschleimhaut,180.0,10.12,23.28,35.43,The text does not mention any references to other paragraphs.,,,,,,,,,,
125,4133,"Gewinnung und Transplantation
von Bindegewebe einschließlich
Versorgung der Entnahmestelle, je
Zahnzwischenraum",E_Leistungen_bei_Erkrankungen_der_Mundschleimhaut,880.0,49.49,113.83,173.23,The text does not mention any references to other paragraphs.,,,,,,,,,,
126,4136,"Osteoplastik auch Kronenverlän -
gerung, Tunnelierung oder Ähnli -
ches je Zahn oder Parodontium,
auch Implantat, als selbstständige
Leistung",E_Leistungen_bei_Erkrankungen_der_Mundschleimhaut,200.0,11.25,25.87,39.37,The text does not mention any references to other paragraphs.,,,,,,,,,,
127,4138,"Verwendung einer Membran zur
Behandlung eines Knochendefek -
tes einschließlich Fixierung, je Zahn,
je Implantat",E_Leistungen_bei_Erkrankungen_der_Mundschleimhaut,220.0,12.37,28.46,43.31,The text doesn't mention any references to other paragraphs.,,,,,,,,,,
128,4150,"Kontrolle/Nachbehandlung nach
parodontalchirurgischen Maßnah -
men, je Zahn, Implantat oder Pa -
rodontium",E_Leistungen_bei_Erkrankungen_der_Mundschleimhaut,7.0,0.39,0.91,1.38,The text does not mention any references to other paragraphs.,,,,,,,,,,
129,5000,"Versorgung eines Lückengebisses
durch eine Brücke oder Prothese:
je Pfeilerzahn oder Implantat als
Brücken- oder Prothesenanker
mit einer Vollkrone (Tangential -
präparation)",F_Prothetische_Leistungen,1016.0,57.14,131.43,200.0,The text does not mention any references to other paragraphs.,,,,,,,,,,
130,5010,"Versorgung eines Lückengebisses
durch eine Brücke oder Prothese:
je Pfeilerzahn als Brücken- oder
Prothesenanker mit einer Voll -
krone (Hohlkehl- und Stufenprä -
paration) oder Einlagefüllung",F_Prothetische_Leistungen,1483.0,83.41,191.84,291.92,The text does not mention any references to other paragraphs.,,,,,,,,,,
131,5020,"Versorgung eines Lückengebisses
durch eine Brücke oder Prothese:
je Pfeilerzahn als Brücken- oder
Prothesenanker mit einer Teil -
krone mit Retentionsrillen oder
-kasten oder mit Pinledges ein -
schließlich Rekonstruktion der
Kaufläche",F_Prothetische_Leistungen,1997.0,112.32,258.33,393.1,The text does not mention any references to other paragraphs.,,,,,,,,,,
132,5030,"Versorgung eines Lückengebisses
durch eine Brücke oder Prothese:
je Pfeilerzahn oder Implantat als
Brücken- oder Prothesenanker mit
einer Wurzelkappe mit Stift, gege -
benenfalls zur Aufnahme einer
Verbindungsvorrichtung oder an -
derer Verbindungselemente",F_Prothetische_Leistungen,1483.0,83.41,191.84,291.92,The text does not mention any references to other paragraphs.,,,,,,,,,,
133,5040,"Versorgung eines Lückengebisses
durch eine Brücke oder Prothese: je
Pfeilerzahn oder Implantat als Brü -
cken- oder Prothesenanker mit einer
Teleskopkrone, auch Konuskrone
Die Leistung nach der Nummer 5040 ist neben der Leistung nach
der Nummer 5080 nicht berech -
nungsfähig.
Durch die Leistungen nach den
Nummern 5000 bis 5040 sind
folgende zahnärztliche Leistungen
abgegolten: Präparieren des Zah -
nes oder Implantats, Relationsbe -
stimmung, Abformungen, Einpro-
ben, provisorisches Eingliedern ,
festes Einfügen der Krone, der Einla -
gefüllung, der Teilkrone o.a., Nach -
kontrolle und Korrekturen.
Die Leistungen nach den Nummern 5000 und 5030 umfassen auch die
Verschraubung und Abdeckung
mit Füllungsmaterial. Zu den Leistun -
gen nach den Nummern 5000 bis 5040 gehören Brücken- oder Pro -
thesenanker mit Verbindungsele -
menten jeder Ausführung.
Die Leistungen nach den Nummern 5010 und 5020 sind im Zusammen -
hang mit Implantaten nicht berech -
nungsfähig. Zu den Kronen nach
den Nummern 5000 bis 5040 gehö -
ren Kronen (Voll-, Teil- und Teleskop -
kronen, sowie Wurzelstiftkappen)
jeder zahntechnischen Ausführung.",F_Prothetische_Leistungen,2605.0,146.51,336.97,512.79,"References: Nummer 5040, Nummer 5080, Nummern 5000 bis 5040, Nummern 5000 und 5030, Nummern 5010 und 5020, Nummern 5000 bis 5040.",,Die Leistung nach der Nummer 5040 ist neben der Leistung nach der Nummer 5080 nicht berechnungsfähig.,"---
Rule 1:
Thoughts: This rule states that the service with number 5040 cannot be charged alongside the service with number 5080. This can be translated into a rule that checks if both services are present in the same invoice. If they are, the invoice is invalid.

Translation:
```prolog
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    member(service(5040, _, _, _, _, _, _, _), Services),
    member(service(5080, _, _, _, _, _, _, _), Services),
    print('The services 5040 and 5080 cannot be charged together.'),
    true.
```
---
Rule 2:
Thoughts: This rule states that the services with numbers 5010 and 5020 cannot be charged in connection with implants. However, we do not have any information about implants in the given predicates. Therefore, this rule cannot be translated.

Translation:
```prolog
```
---
Rule 3:
Thoughts: This rule states that if the services end with the preparation of the bridge pillars or prosthesis anchors with connecting elements or the impression taking at the implant, half of the respective fee can be charged. However, we do not have any information about the end of services or the specific services mentioned in the rule in the given predicates. Therefore, this rule cannot be translated.

Translation:
```prolog
```
---
Rule 4:
Thoughts: This rule states that the services with numbers 5050 or 5060 can only be charged if it was objectively impossible for the dentist to continue the treatment or if a continuation was not indicated for medical reasons. However, we do not have any information about the continuation of treatment or the specific medical reasons in the given predicates. Therefore, this rule cannot be translated.

Translation:
```prolog
```
---
Rule 5:
Thoughts: This rule is the same as Rule 1 but with the service numbers reversed. Therefore, the translation will be the same.

Translation:
```prolog
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    member(service(5040, _, _, _, _, _, _, _), Services),
    member(service(5080, _, _, _, _, _, _, _), Services),
    print('The services 5040 and 5080 cannot be charged together.'),
    true.
```
---
Rule 6:
Thoughts: This rule states that the reinsertion of the same provisional bridge, if necessary several times, including removal, is covered by the fees according to the numbers 5120 to 5140. However, we do not have any information about the reinsertion of the same provisional bridge or the specific services mentioned in the rule in the given predicates. Therefore, this rule cannot be translated.

Translation:
```prolog
```
---
Rule 7:
Thoughts: This rule states that the services with numbers 5200 to 5230 cover certain other services. However, we do not have any information about the specific services mentioned in the rule in the given predicates. Therefore, this rule cannot be translated.

Translation:
```prolog
```
---
Rule 8:
Thoughts: This rule states that the services with numbers 5270 to 5310 can only be charged with the services with numbers 5250 and 5260 if they are performed at different times. However, we do not have any information about the specific services mentioned in the rule in the given predicates. Therefore, this rule cannot be translated.

Translation:
```prolog
```
---
Rule 9:
Thoughts: This rule states that the services with numbers 5270 to 5310 can only be charged as measures to restore the function of a removable prosthesis. However, we do not have any information about the specific services mentioned in the rule in the given predicates. Therefore, this rule cannot be translated.

Translation:
```prolog
```
---
Rule 10:
Thoughts: This rule states that measures for soft tissue support are covered by the services with numbers 5200 to 5340. However, we do not have any information about the specific services mentioned in the rule in the given predicates. Therefore, this rule cannot be translated.

Translation:
```prolog
```
---",,"Given this rules from the german GOZ:
---
Die Leistung nach der Nummer 5040 ist neben der Leistung nach der Nummer 5080 nicht berechnungsfähig.
---
Die Leistungen nach den Nummern 5010 und 5020 sind im Zusammenhang mit Implantaten nicht berechnungsfähig.
---
Enden die Leistungen mit der Präparation der Brückenpfeiler oder Prothesenanker mit Verbindungselementen oder der Abdrucknahme beim Implantat, so ist die Hälfte der jeweiligen Gebühr berechnungsfähig.
---
Die Leistungen nach den Nummern 5050 oder 5060 sind nur berechnungsfähig, wenn es dem Zahnarzt objektiv auf Dauer unmöglich war, die Behandlung fortzusetzen, oder eine Fortsetzung aus medizinischen Gründen nicht indiziert war.
---
Die Leistung nach der Nummer 5080 ist neben der Leistung nach der Nummer 5040 nicht berechnungsfähig.
---
The reinsertion of the same provisional bridge, if necessary several times, including removal, is covered by the fees according to the numbers 5120 to 5140.
---
Durch die Leistungen nach den Nummern 5200 bis 5230 sind folgende Leistungen abgegolten: Anatomische Abformungen (auch des Gegenkiefers), Bestimmung der Kieferrelation, Einproben, Einpassen bzw. Einfügen, Nachkontrolle und Korrekturen.
---
Im Zusammenhang mit Leistungen nach den Nummern 5270 bis 5310 dürfen Leistungen nach den Nummern 5250 und 5260 nur berechnet werden, wenn es sich um zeitlich getrennte Verrichtungen handelt.
---
Leistungen nach den Nummern 5270 bis 5310 sind nur als Maßnahmen zur Wiederherstellung der Funktion einer abnehmbaren Prothese berechnungsfähig.
---
Maßnahmen zur Weichteilstützung sind mit den Leistungen nach den Nummern 5200 bis 5340 abgegolten.
---


And this predicates:
```prolog
invoice(
    % A Service is defined trough its Service Number (Service), the date / session when it was rendered, its multiplier, the teeth it is applied to, ...
    [service(Service, date(Year, Month, Day), Multiplier, PointScore, Charge, Description, Justification, [tooth(Area, Postion), ...]), ... ],
    % Billed Material Costs are defined trough the Section of the GOZ which allows its billing, the date / session when it was rendered, its multiplier, ...
    [material_cost(GOZ_Section, date(Year, Month, Day), Multiplier, Count, Charge, Description, Justification, [tooth(Area, Postion), ...]), ... ],
    invoice_date(date(Year, Month, Day)),
    invoice_amount(InvoiceAmount)
).
% Charge = (round(PointValue in Euros * Multiplier * PointScore * 100)) / 100
% A Tooth on which a Service is applied is uniquely defined by the combination of its area and position in this area: tooth(Area, Postion) nummerated after the FDI-Zahnschema
% Area = 1 -> Right upper jaw
% Area = 2 -> Left upper jaw
% Area = 3 -> Left lower jaw
% Area = 4 -> Right lower jaw
% Position is exact position of this tooth in its area (from 1 to 8)
% Example invoice
invoice(
    [
        service(11111, date(2023, 10, 01), 1, 100, 5.62, 'Teeth Cleaning', '', [tooth(1,7)]),
        service(11111, date(2023, 10, 01), 1, 100, 5.62, 'Teeth Cleaning', '', [tooth(1,6)]),
        service(987654, date(2023, 10, 01), 3.5, 200, 39.37, 'Tooth Filling', 'Very time consuming', [tooth(1,7), tooth(1,6)]),
        service(123456, date(2023, 10, 02), 2.3, 150, 19.40, 'Consultation', '', [])
    ],
    [
        material_cost('§ 4 (1)', date(2023, 10, 02), 1, 1, 40.00, 'Fill Material', 'Auslagen', [tooth(1,7), tooth(1,6)])
    ]
    invoice_date(date(2023, 10, 04),
    invoice_amount(110.01)
).
```
The 10 rules indicate conditions and restrictions stated in the GOZ that should be adhered to when creating an invoice.
We want to mark invoices as invalid if they do not adhere to those rules.
Which of those rules can you translate into prolog code given following restriction:
Only translate the rules as they are, do not include any examples.
Be as accurate as possible.
You must be able to exactly define every new predicate based on the given ones.
Do not make any assumptions which are not given.
Translate the rules where a translation given the restrictions is possible.
To determine if an invoice is correct, use the predicate 
```prolog
is_invoice_invalid(Invoice) : -
    Invoice = invoice(Services, Material_Costs, invoice_date(date(Year, Month, Day), invoice_amount(InvoiceAmount)),
    % The corresponding rule (only one rule for each predicate)
    % Please double check that the prolog code you write in here is semantically equivalent to the rule in the text.
    print(...), % When rule is not fulfilled and therefore the invoice is invalid, print the reason for the invalidity of the invoice
    true. % Then the invoice is invalid.
```
Use this predicate to check each rule individually. Before you translate a rule, think about it.
Expected format:
---
Rule 1:
Thoughts: ...
Translation:
```prolog
% code here (is_invoice_invalid/1 predicate with potential helper predicates for this rule)
```
---
Rule 2:
Thoughts: ...
Translation:
```prolog
% code here (is_invoice_invalid/1 predicate with potential helper predicates for this rule)
```
---
... 

When you can not translate leaf the code section empty like this:
---
Rule X:
Thoughts: ...
Translation:
```prolog
```
---

So you should have a block for each of the 10 given rules at the end.
For translated rules include print statements, so that the user can see the reason for the invalidity of the invoice.
When you calculate with currencies, always round the result to two digits with round(X*100)/100 and always calculate in Euros (even after summation).
I only want to have exactly defined rules.
First, think step by step how you would translate a rule, then translate it. Explain your thoughts step by step.",1.0,1617.0,883.0,0.10149,"
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    member(service(5040, _, _, _, _, _, _, _), Services),
    member(service(5080, _, _, _, _, _, _, _), Services),
    print('The services 5040 and 5080 cannot be charged together.'),
    true.
"
134,5040,"Versorgung eines Lückengebisses
durch eine Brücke oder Prothese: je
Pfeilerzahn oder Implantat als Brü -
cken- oder Prothesenanker mit einer
Teleskopkrone, auch Konuskrone
Die Leistung nach der Nummer 5040 ist neben der Leistung nach
der Nummer 5080 nicht berech -
nungsfähig.
Durch die Leistungen nach den
Nummern 5000 bis 5040 sind
folgende zahnärztliche Leistungen
abgegolten: Präparieren des Zah -
nes oder Implantats, Relationsbe -
stimmung, Abformungen, Einpro-
ben, provisorisches Eingliedern ,
festes Einfügen der Krone, der Einla -
gefüllung, der Teilkrone o.a., Nach -
kontrolle und Korrekturen.
Die Leistungen nach den Nummern 5000 und 5030 umfassen auch die
Verschraubung und Abdeckung
mit Füllungsmaterial. Zu den Leistun -
gen nach den Nummern 5000 bis 5040 gehören Brücken- oder Pro -
thesenanker mit Verbindungsele -
menten jeder Ausführung.
Die Leistungen nach den Nummern 5010 und 5020 sind im Zusammen -
hang mit Implantaten nicht berech -
nungsfähig. Zu den Kronen nach
den Nummern 5000 bis 5040 gehö -
ren Kronen (Voll-, Teil- und Teleskop -
kronen, sowie Wurzelstiftkappen)
jeder zahntechnischen Ausführung.",F_Prothetische_Leistungen,2605.0,146.51,336.97,512.79,"References: Nummer 5040, Nummer 5080, Nummern 5000 bis 5040, Nummern 5000 und 5030, Nummern 5010 und 5020, Nummern 5000 bis 5040.",,Die Leistungen nach den Nummern 5010 und 5020 sind im Zusammenhang mit Implantaten nicht berechnungsfähig.,,,,,,,,"
"
135,5050,"Enden die Leistungen mit der
Präparation der Brückenpfeiler
oder Prothesenanker mit Verbin -
dungselementen oder der Ab -
drucknahme beim Implantat, so ist
die Hälfte der jeweiligen Gebühr
berechnungsfähig.",F_Prothetische_Leistungen,,,,,The text does not mention any references to other paragraphs.,,"Enden die Leistungen mit der Präparation der Brückenpfeiler oder Prothesenanker mit Verbindungselementen oder der Abdrucknahme beim Implantat, so ist die Hälfte der jeweiligen Gebühr berechnungsfähig.",,,,,,,,"
"
136,5060,"Sind darüber hinaus weitere Maß -
nahmen erfolgt, so sind drei Viertel
der jeweiligen Gebühr berech -
nungsfähig.
Die Leistungen nach den Nummern 5050 oder 5060 sind nur berech -
nungsfähig, wenn es dem Zahnarzt
objektiv auf Dauer unmöglich war,
die Behandlung fortzusetzen, oder
eine Fortsetzung aus medizini -
schen Gründen nicht indiziert war .",F_Prothetische_Leistungen,,,,,"References: Nummern 5050, 5060",,"Die Leistungen nach den Nummern 5050 oder 5060 sind nur berechnungsfähig, wenn es dem Zahnarzt objektiv auf Dauer unmöglich war, die Behandlung fortzusetzen, oder eine Fortsetzung aus medizinischen Gründen nicht indiziert war.",,,,,,,,"
"
137,5070,"Versorgung eines Lückengebisses
durch eine Brücke oder Prothese:
Verbindung von Kronen oder Ein -
lagefüllungen durch Brückenglie -
der, Prothesenspannen oder Stege,
je zu überbrückende Spanne oder
Freiendsattel",F_Prothetische_Leistungen,400.0,22.5,51.74,78.74,The text does not mention any references to other paragraphs.,,,,,,,,,,
138,5080,"Versorgung eines Lückengebisses
durch eine zusammengesetzte Brü -
cke oder Prothese, je Verbindungs -
element
Matrize und Patrize gelten als ein
Verbindungselement.
Die Leistung nach der Nummer 5080 ist neben der Leistung nach
der Nummer 5040 nicht berech -
nungsfähig.",F_Prothetische_Leistungen,230.0,12.94,29.75,45.27,"References: Nummer 5080, Nummer 5040",,Die Leistung nach der Nummer 5080 ist neben der Leistung nach der Nummer 5040 nicht berechnungsfähig.,,,,,,,,"
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    member(service(5040, _, _, _, _, _, _, _), Services),
    member(service(5080, _, _, _, _, _, _, _), Services),
    print('The services 5040 and 5080 cannot be charged together.'),
    true.
"
139,5090,"Wiederherstellung der Funktion
eines Verbindungselements nach
der Nummer 5080",F_Prothetische_Leistungen,110.0,6.19,14.23,21.65,References: Nummer 5080,,,,,,,,,,
140,5100,"Erneuern des Sekundärteils einer
Teleskopkrone einschließlich Abfor -
mung",F_Prothetische_Leistungen,450.0,25.31,58.21,88.58,The text provided does not contain any references to other paragraphs.,,,,,,,,,,
141,5110,"Wiedereingliederung einer end -
gültigen Brücke nach Wiederher -
stellung der Funktion",F_Prothetische_Leistungen,360.0,20.25,46.57,70.87,The text provided does not contain any references to other paragraphs.,,,,,,,,,,
142,5120,"Provisorische Brücke im direkten
Verfahren mit Abformung, je Zahn
oder Implantat, einschließlich Ent -
fernung",F_Prothetische_Leistungen,240.0,13.5,31.05,47.24,The text does not mention any references to other paragraphs.,,,,,,,,,,
143,5140,"Provisorische Brücke im direkten
Verfahren mit Abformung, je Brü -
ckenspanne oder Freiendsattel,
einschließlich Entfernung
Das Wiedereingliedern derselben
provisorischen Brücke, gegebe -
nenfalls auch mehrmals, ein -
schließlich Entfernung ist mit den
Gebühren nach den Nummern 5120 bis 5140 abgegolten.",F_Prothetische_Leistungen,80.0,4.5,10.35,15.75,References: Nummern 5120 bis 5140,,"The reinsertion of the same provisional bridge, if necessary several times, including removal, is covered by the fees according to the numbers 5120 to 5140.",,,,,,,,"
"
144,5150,"Versorgung eines Lückengebisses
mit Hilfe einer durch Adhäsivtech -
nik befestigten Brücke, für die erste
zu überbrückende Spanne",F_Prothetische_Leistungen,730.0,41.06,94.43,143.7,The text does not mention any references to other paragraphs.,,,,,,,,,,
145,5160,"Versorgung eines Lückengebisses
nach der Nummer 5150, für jede
weitere zu überbrückende Spanne",F_Prothetische_Leistungen,360.0,20.25,46.57,70.87,References: Nummer 5150,,,,,,,,,,
146,5170,"Anatomische Abformung des Kie -
fers mit individuellem Löffel bei
ungünstigen Zahnbogen- und
Kieferformen und/oder tief anset -
zenden Bändern oder spezielle Ab -
formung zur Remontage, je Kiefer",F_Prothetische_Leistungen,250.0,14.06,32.34,49.21,The text does not mention any references to other paragraphs.,,,,,,,,,,
147,5180,"Funktionelle Abformung des Ober -
kiefers mit individuellem Löffel",F_Prothetische_Leistungen,450.0,25.31,58.21,88.58,The text provided does not contain any references to other paragraphs.,,,,,,,,,,
148,5190,"Funktionelle Abformung des Unter -
kiefers mit individuellem Löffel",F_Prothetische_Leistungen,540.0,30.37,69.85,106.3,The text provided does not contain any references to other paragraphs.,,,,,,,,,,
149,5200,"Versorgung eines teilbezahnten
Kiefers durch eine Teilprothese mit
einfachen, gebogenen Haftele -
menten einschließlich Einschleifen
der Auflagen",F_Prothetische_Leistungen,700.0,39.37,90.55,137.79,The text does not mention any references to other paragraphs.,,,,,,,,,,
150,5210,"Versorgung eines teilbezahnten
Kiefers durch eine Modellgusspro -
these mit gegossenen Halte- und
Stützelementen einschließlich Ein -
schleifen der Auflagen",F_Prothetische_Leistungen,1400.0,78.74,181.1,275.59,The text does not mention any references to other paragraphs.,,,,,,,,,,
151,5220,"Versorgung eines zahnlosen Kiefers
durch eine totale Prothese oder
Deckprothese bei Verwendung
einer Kunststoff- oder Metallbasis,
im Oberkiefer
Eine Deckprothese setzt eine Basis -
gestaltung wie bei einer totalen
Prothese voraus.",F_Prothetische_Leistungen,1850.0,104.05,239.31,364.17,The text does not mention any references to other paragraphs.,,,,,,,,,,
152,5230,"Versorgung eines zahnlosen Kiefers
durch eine totale Prothese oder
Deckprothese bei Verwendung
einer Kunststoff- oder Metallbasis,
im Unterkiefer
Eine Deckprothese setzt eine Basis -
gestaltung wie bei einer totalen
Prothese voraus.
Durch die Leistungen nach den
Nummern 5200 bis 5230 sind fol -
gende Leistungen abgegolten:
Anatomische Abformungen (auch
des Gegenkiefers), Bestimmung
der Kieferrelation, Einproben, Ein -
passen bzw. Einfügen, Nachkon -
trolle und Korrekturen.",F_Prothetische_Leistungen,2200.0,123.73,284.59,433.06,References: Nummern 5200 bis 5230,,"Durch die Leistungen nach den Nummern 5200 bis 5230 sind folgende Leistungen abgegolten: Anatomische Abformungen (auch des Gegenkiefers), Bestimmung der Kieferrelation, Einproben, Einpassen bzw. Einfügen, Nachkontrolle und Korrekturen.",,,,,,,,"
"
153,5250,"Maßnahmen zur Wiederherstel -
lung der Funktion oder zur Erweite -
rung einer abnehmbaren Prothese
(ohne Abformung)",F_Prothetische_Leistungen,140.0,7.87,18.11,27.56,The text does not mention any references to other paragraphs.,,,,,,,,,,
154,5260,"Maßnahmen zur Wiederherstel -
lung der Funktion oder zur Erweite -
rung einer abnehmbaren Prothese
(mit Abformung) einschließlich
Halte- und Stützvorrichtungen",F_Prothetische_Leistungen,270.0,15.19,34.93,53.15,The text does not mention any references to other paragraphs.,,,,,,,,,,
155,5270,Teilunterfütterung einer Prothese,F_Prothetische_Leistungen,180.0,10.12,23.28,35.43,The text provided does not contain any references to other paragraphs.,,,,,,,,,,
156,5280,"Vollständige Unterfütterung einer
Prothese",F_Prothetische_Leistungen,270.0,15.19,34.93,53.15,The text provided does not contain any references to other paragraphs.,,,,,,,,,,
157,5290,"Vollständige Unterfütterung einer
Prothese einschließlich funktionel -
ler Randgestaltung, im Oberkiefer",F_Prothetische_Leistungen,450.0,25.31,58.21,88.58,The text provided does not mention any references to other paragraphs.,,,,,,,,,,
158,5300,"Vollständige Unterfütterung einer
Prothese einschließlich funktionel -
ler Randgestaltung, im Unterkiefer",F_Prothetische_Leistungen,540.0,30.37,69.85,106.3,The text provided does not mention any references to other paragraphs.,,,,,,,,,,
159,5310,"Vollständige Unterfütterung bei
einer Defektprothese einschließlich
funktioneller Randgestaltung
Im Zusammenhang mit Leistungen
nach den Nummern 5270 bis 5310
dürfen Leistungen nach den Num -
mern 5250 und 5260 nur berech -
net werden, wenn es sich um
zeitlich getrennte Verrichtungen
handelt. Leistungen nach den
Nummern 5270 bis 5310 sind nur
als Maßnahmen zur Wiederherstel -
lung der Funktion einer abnehm -
baren Prothese berechnungs-
fähig.",F_Prothetische_Leistungen,730.0,41.06,94.43,143.7,"References: Nummern 5270 bis 5310, Nummern 5250 und 5260, Nummern 5270 bis 5310",,"Im Zusammenhang mit Leistungen nach den Nummern 5270 bis 5310 dürfen Leistungen nach den Nummern 5250 und 5260 nur berechnet werden, wenn es sich um zeitlich getrennte Verrichtungen handelt.",,,,,,,,"
"
160,5310,"Vollständige Unterfütterung bei
einer Defektprothese einschließlich
funktioneller Randgestaltung
Im Zusammenhang mit Leistungen
nach den Nummern 5270 bis 5310
dürfen Leistungen nach den Num -
mern 5250 und 5260 nur berech -
net werden, wenn es sich um
zeitlich getrennte Verrichtungen
handelt. Leistungen nach den
Nummern 5270 bis 5310 sind nur
als Maßnahmen zur Wiederherstel -
lung der Funktion einer abnehm -
baren Prothese berechnungs-
fähig.",F_Prothetische_Leistungen,730.0,41.06,94.43,143.7,"References: Nummern 5270 bis 5310, Nummern 5250 und 5260, Nummern 5270 bis 5310",,Leistungen nach den Nummern 5270 bis 5310 sind nur als Maßnahmen zur Wiederherstellung der Funktion einer abnehmbaren Prothese berechnungsfähig.,,,,,,,,"
"
161,5320,"Eingliederung eines Obturators
zum Verschluss von Defekten des
Gaumens",F_Prothetische_Leistungen,2200.0,123.73,284.59,433.06,The text provided does not contain any references to other paragraphs.,,,,,,,,,,
162,5330,"Eingliederung einer Resektionspro -
these zum Verschluss und zum Aus -
gleich von Defekten der Kiefer",F_Prothetische_Leistungen,2800.0,157.48,362.2,551.17,The text provided does not contain any references to other paragraphs.,,,,,,,,,,
163,5340,"Eingliederung einer Prothese oder
Epithese zum Verschluss extraora -
ler Weichteildefekte oder zum
Ersatz fehlender Gesichtsteile ein -
schließlich Stütz-, Halte- oder Hilfs -
vorrichtungen
Maßnahmen zur Weichteilstützung
sind mit den Leistungen nach den
Nummern 5200 bis 5340 abgegolten.",F_Prothetische_Leistungen,7300.0,410.57,944.3,1436.99,References: Nummern 5200 bis 5340,,Maßnahmen zur Weichteilstützung sind mit den Leistungen nach den Nummern 5200 bis 5340 abgegolten.,,,,,,,,"
"
164,6000,"Profil- oder Enfacefotografie ein -
schließlich kieferorthopädischer
Auswertung
Eine mehr als viermalige Berech -
nung der Leistung nach der Num -
mer 6000 im Verlauf einer
kieferorthopädischen Behandlung
ist in der Rechnung zu begründen.",G_Kieferorthopädische_Leistungen,80.0,4.5,10.35,15.75,The text does not mention any references to other paragraphs.,,"Eine mehr als viermalige Berech -
nung der Leistung nach der Num -
mer 6000 im Verlauf einer
kieferorthopädischen Behandlung
ist in der Rechnung zu begründen.","Rule 1:
Thoughts: This rule states that if a service with the number 6000 is billed more than four times during a kieferorthopädischen treatment, it must be justified in the invoice. We can translate this rule by counting the number of times the service 6000 appears in the invoice and checking if the justification is provided when it appears more than four times.

Translation:
```prolog
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(Service, (member(service(Service, _, _, _, _, _, Justification, _), Services), Service = 6000), Services6000),
    length(Services6000, Count),
    Count > 4,
    member(service(6000, _, _, _, _, _, Justification, _), Services),
    Justification = '',
    print('Service 6000 is billed more than four times without justification.'),
    true.
```

Rule 2:
Thoughts: This rule states that services from 6030 to 6080 include all measures within a period of up to four years. However, we don't have any information about the start date of the treatment or the duration of the treatment in the given predicates. Therefore, we can't translate this rule into Prolog code.

Translation:
```prolog
```

Rule 3:
Thoughts: This rule is similar to Rule 2. It states that measures from 6030 to 6080 include all services for jaw reshaping and retention or adjustment of the lower jaw within a period of up to four years. Again, we don't have any information about the start date of the treatment or the duration of the treatment in the given predicates. Therefore, we can't translate this rule into Prolog code.

Translation:
```prolog
```

Rule 4:
Thoughts: This rule states that services from 6030 to 6080 can't be billed alongside services from 6190 to 6260. We can translate this rule by checking if any service from the first range appears in the same invoice as any service from the second range.

Translation:
```prolog
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(Service, (member(service(Service, _, _, _, _, _, _, _), Services), between(6030, 6080, Service)), Services6030_6080),
    findall(Service, (member(service(Service, _, _, _, _, _, _, _), Services), between(6190, 6260, Service)), Services6190_6260),
    intersection(Services6030_6080, Services6190_6260, Intersection),
    Intersection \= [],
    print('Services from 6030 to 6080 and from 6190 to 6260 are billed in the same invoice.'),
    true.
```

Rule 5:
Thoughts: This rule states that the costs for the integrated aids according to numbers 6160 and 6170 can be invoiced separately. This rule doesn't impose any restrictions or conditions on the invoice, so there's no need to translate it into Prolog code.

Translation:
```prolog
```

Rule 6:
Thoughts: This rule states that each jaw and each session can be billed once. However, we don't have any information about the number of jaws or sessions in the given predicates. Therefore, we can't translate this rule into Prolog code.

Translation:
```prolog
```

Rule 7:
Thoughts: This rule states that service 6190 can't be billed alongside service 0010 in the same session. We can translate this rule by checking if both services appear in the same session in the invoice.

Translation:
```prolog
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(Date, (member(service(6190, Date, _, _, _, _, _, _), Services)), Dates6190),
    findall(Date, (member(service(0010, Date, _, _, _, _, _, _), Services)), Dates0010),
    intersection(Dates6190, Dates0010, Intersection),
    Intersection \= [],
    print('Services 6190 and 0010 are billed in the same session.'),
    true.
```",,"Given this rules from the german GOZ:
---
Eine mehr als viermalige Berech -
nung der Leistung nach der Num -
mer 6000 im Verlauf einer
kieferorthopädischen Behandlung
ist in der Rechnung zu begründen.
---
Die Leistungen nach den Nummern 6030 bis 6080 umfassen alle im Behandlungsplan festgelegten Maßnahmen innerhalb eines Zeitraumes von bis zu vier Jahren.
---
Die Maßnahmen im Sinne der Nummern 6030 bis 6080 umfassen alle Leistungen zur Kieferumformung und Retention bzw. zur Einstellung des Unterkiefers in den Regelbiss innerhalb eines Zeitraumes von bis zu vier Jahren, unabhängig von den angewandten Behandlungsmethoden oder den verwendeten Therapiegeräten.
---
Neben den Leistungen nach den Nummern 6030 bis 6080 sind Leistungen nach den Nummern 6190 bis 6260 nicht berechnungsfähig.
---
The costs for the integrated aids according to numbers 6160 and 6170 can be invoiced separately.
---
Je Kiefer und je Sitzung einmal berechnungsfähig
---
Neben der Leistung nach der Nummer 6190 ist die Leistung nach der Nummer 0010 in derselben Sitzung nicht berechnungsfähig.
---


And this predicates:
```prolog
invoice(
    % A Service is defined trough its Service Number (Service), the date / session when it was rendered, its multiplier, the teeth it is applied to, ...
    [service(Service, date(Year, Month, Day), Multiplier, PointScore, Charge, Description, Justification, [tooth(Area, Postion), ...]), ... ],
    % Billed Material Costs are defined trough the Section of the GOZ which allows its billing, the date / session when it was rendered, its multiplier, ...
    [material_cost(GOZ_Section, date(Year, Month, Day), Multiplier, Count, Charge, Description, Justification, [tooth(Area, Postion), ...]), ... ],
    invoice_date(date(Year, Month, Day)),
    invoice_amount(InvoiceAmount)
).
% Charge = (round(PointValue in Euros * Multiplier * PointScore * 100)) / 100
% A Tooth on which a Service is applied is uniquely defined by the combination of its area and position in this area: tooth(Area, Postion) nummerated after the FDI-Zahnschema
% Area = 1 -> Right upper jaw
% Area = 2 -> Left upper jaw
% Area = 3 -> Left lower jaw
% Area = 4 -> Right lower jaw
% Position is exact position of this tooth in its area (from 1 to 8)
% Example invoice
invoice(
    [
        service(11111, date(2023, 10, 01), 1, 100, 5.62, 'Teeth Cleaning', '', [tooth(1,7)]),
        service(11111, date(2023, 10, 01), 1, 100, 5.62, 'Teeth Cleaning', '', [tooth(1,6)]),
        service(987654, date(2023, 10, 01), 3.5, 200, 39.37, 'Tooth Filling', 'Very time consuming', [tooth(1,7), tooth(1,6)]),
        service(123456, date(2023, 10, 02), 2.3, 150, 19.40, 'Consultation', '', [])
    ],
    [
        material_cost('§ 4 (1)', date(2023, 10, 02), 1, 1, 40.00, 'Fill Material', 'Auslagen', [tooth(1,7), tooth(1,6)])
    ]
    invoice_date(date(2023, 10, 04),
    invoice_amount(110.01)
).
```
The 7 rules indicate conditions and restrictions stated in the GOZ that should be adhered to when creating an invoice.
We want to mark invoices as invalid if they do not adhere to those rules.
Which of those rules can you translate into prolog code given following restriction:
Only translate the rules as they are, do not include any examples.
Be as accurate as possible.
You must be able to exactly define every new predicate based on the given ones.
Do not make any assumptions which are not given.
Translate the rules where a translation given the restrictions is possible.
To determine if an invoice is correct, use the predicate 
```prolog
is_invoice_invalid(Invoice) : -
    Invoice = invoice(Services, Material_Costs, invoice_date(date(Year, Month, Day), invoice_amount(InvoiceAmount)),
    % The corresponding rule (only one rule for each predicate)
    % Please double check that the prolog code you write in here is semantically equivalent to the rule in the text.
    print(...), % When rule is not fulfilled and therefore the invoice is invalid, print the reason for the invalidity of the invoice
    true. % Then the invoice is invalid.
```
Use this predicate to check each rule individually. Before you translate a rule, think about it.
Expected format:
---
Rule 1:
Thoughts: ...
Translation:
```prolog
% code here (is_invoice_invalid/1 predicate with potential helper predicates for this rule)
```
---
Rule 2:
Thoughts: ...
Translation:
```prolog
% code here (is_invoice_invalid/1 predicate with potential helper predicates for this rule)
```
---
... 

When you can not translate leaf the code section empty like this:
---
Rule X:
Thoughts: ...
Translation:
```prolog
```
---

So you should have a block for each of the 7 given rules at the end.
For translated rules include print statements, so that the user can see the reason for the invalidity of the invoice.
When you calculate with currencies, always round the result to two digits with round(X*100)/100 and always calculate in Euros (even after summation).
I only want to have exactly defined rules.
First, think step by step how you would translate a rule, then translate it. Explain your thoughts step by step.",1.0,1454.0,889.0,0.09695999999999999,"
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(Service, (member(service(Service, _, _, _, _, _, Justification, _), Services), Service = 6000), Services6000),
    length(Services6000, Count),
    Count > 4,
    member(service(6000, _, _, _, _, _, Justification, _), Services),
    Justification = '',
    print('Service 6000 is billed more than four times without justification.'),
    true.
"
165,6010,"Anwendung von Methoden zur
Analyse von Kiefermodellen (drei -
dimensionale, graphische oder
metrische Analysen, Diagramme),
je Leistung nach der Nummer 0060",G_Kieferorthopädische_Leistungen,180.0,10.12,23.28,35.43,References: Nummer 0060,,,,,,,,,,
166,6020,"Anwendung von Methoden zur
Untersuchung des Gesichtsschä -
dels (zeichnerische Auswertung
von Röntgenaufnahmen des Schä -
dels, Wachstumsanalysen)",G_Kieferorthopädische_Leistungen,360.0,20.25,46.57,70.87,The text does not mention any references to other paragraphs.,,,,,,,,,,
167,6030,"Maßnahmen zur Umformung eines
Kiefers einschließlich Retention,
geringer Umfang",G_Kieferorthopädische_Leistungen,1350.0,75.93,174.63,265.74,The text provided does not contain any references to other paragraphs.,,,,,,,,,,
168,6040,"Maßnahmen zur Umformung eines
Kiefers einschließlich Retention,
mittlerer Umfang",G_Kieferorthopädische_Leistungen,2100.0,118.11,271.65,413.38,The text provided does not contain any references to other paragraphs.,,,,,,,,,,
169,6050,"Maßnahmen zur Umformung eines
Kiefers einschließlich Retention,
hoher Umfang
Bei Maßnahmen von mittlerem
Umfang nach der Nummer 6040
müssen mindestens drei, bei Maß -
nahmen von hohem Umfang min -
destens vier der Kriterien nach den
Buchstaben a) bis e) erfüllt sein:
a) Zahl der bewegten Zahngrup -
pen: zwei und mehr Zahngruppen,
b) Ausmaß der Zahnbewegung:
mehr als 2 Millimeter,
c) Art der Zahnbewegung: körper -
lich mehr als 2 Millimeter, kontrol -
lierte Wurzelbewegung, direkte
Veränderung der Bisshöhe, Zahn -
drehung mehr als 30 Grad,
d) Richtung der Zahnbewegung:
entgegen Wanderungstendenz,
e) Verankerung: mit zusätzlichen
intra- oder extraoralen Maßnah -
men.",G_Kieferorthopädische_Leistungen,3600.0,202.47,465.68,708.65,The text does not contain any references to other paragraphs.,,,,,,,,,,
170,6060,"Maßnahmen zur Einstellung der
Kiefer in den Regelbiss während
der Wachstumsphase einschließ -
lich Retention, geringer Umfang",G_Kieferorthopädische_Leistungen,1800.0,101.24,232.84,354.33,The text does not mention any references to other paragraphs.,,,,,,,,,,
171,6070,"Maßnahmen zur Einstellung der
Kiefer in den Regelbiss während
der Wachstumsphase einschließ -
lich Retention, mittlerer Umfang",G_Kieferorthopädische_Leistungen,2600.0,146.23,336.33,511.8,The text does not mention any references to other paragraphs.,,,,,,,,,,
172,6080,"Maßnahmen zur Einstellung der
Kiefer in den Regelbiss während
der Wachstumsphase einschließ -
lich Retention, hoher Umfang
Bei Maßnahmen von mittlerem
Umfang muss mindestens ein Krite -
rium nach den Buchstaben a) bis
c), bei Maßnahmen von hohem
Umfang müssen mindestens zwei
der Kriterien erfüllt sein:
a) Ausmaß der Bissverschiebung:
mehr als 4 Millimeter,
b) Richtung der durchzuführenden
Bissverschiebung, Unterkiefer rela -
tiv zum Oberkiefer: dorsal,
c) Skelettale Bedingungen: ungüns -
tige Wachstumsvoraussetzungen.
Die Leistungen nach den Num -
mern 6030 bis 6080 umfassen alle
im Behandlungsplan festgelegten
Maßnahmen innerhalb eines Zeit -
raumes von bis zu vier Jahren.
Die Maßnahmen im Sinne der
Nummern 6030 bis 6080 umfassen
alle Leistungen zur Kieferumfor -
mung und Retention bzw. zur Ein -
stellung des Unterkiefers in den
Regelbiss innerhalb eines Zeitrau -
mes von bis zu vier Jahren, unab -
hängig von den angewandten
Behandlungsmethoden oder den
verwendeten Therapiegeräten.
Neben den Leistungen nach den
Nummern 6030 bis 6080 sind Leis -
tungen nach den Nummern 6190
bis 6260 nicht berechnungsfähig.",G_Kieferorthopädische_Leistungen,3600.0,202.47,465.68,708.65,"References: Nummern 6030 bis 6080, Nummern 6190 bis 6260",,Die Leistungen nach den Nummern 6030 bis 6080 umfassen alle im Behandlungsplan festgelegten Maßnahmen innerhalb eines Zeitraumes von bis zu vier Jahren.,,,,,,,,"
"
173,6080,"Maßnahmen zur Einstellung der
Kiefer in den Regelbiss während
der Wachstumsphase einschließ -
lich Retention, hoher Umfang
Bei Maßnahmen von mittlerem
Umfang muss mindestens ein Krite -
rium nach den Buchstaben a) bis
c), bei Maßnahmen von hohem
Umfang müssen mindestens zwei
der Kriterien erfüllt sein:
a) Ausmaß der Bissverschiebung:
mehr als 4 Millimeter,
b) Richtung der durchzuführenden
Bissverschiebung, Unterkiefer rela -
tiv zum Oberkiefer: dorsal,
c) Skelettale Bedingungen: ungüns -
tige Wachstumsvoraussetzungen.
Die Leistungen nach den Num -
mern 6030 bis 6080 umfassen alle
im Behandlungsplan festgelegten
Maßnahmen innerhalb eines Zeit -
raumes von bis zu vier Jahren.
Die Maßnahmen im Sinne der
Nummern 6030 bis 6080 umfassen
alle Leistungen zur Kieferumfor -
mung und Retention bzw. zur Ein -
stellung des Unterkiefers in den
Regelbiss innerhalb eines Zeitrau -
mes von bis zu vier Jahren, unab -
hängig von den angewandten
Behandlungsmethoden oder den
verwendeten Therapiegeräten.
Neben den Leistungen nach den
Nummern 6030 bis 6080 sind Leis -
tungen nach den Nummern 6190
bis 6260 nicht berechnungsfähig.",G_Kieferorthopädische_Leistungen,3600.0,202.47,465.68,708.65,"References: Nummern 6030 bis 6080, Nummern 6190 bis 6260",,"Die Maßnahmen im Sinne der Nummern 6030 bis 6080 umfassen alle Leistungen zur Kieferumformung und Retention bzw. zur Einstellung des Unterkiefers in den Regelbiss innerhalb eines Zeitraumes von bis zu vier Jahren, unabhängig von den angewandten Behandlungsmethoden oder den verwendeten Therapiegeräten.",,,,,,,,"
"
174,6080,"Maßnahmen zur Einstellung der
Kiefer in den Regelbiss während
der Wachstumsphase einschließ -
lich Retention, hoher Umfang
Bei Maßnahmen von mittlerem
Umfang muss mindestens ein Krite -
rium nach den Buchstaben a) bis
c), bei Maßnahmen von hohem
Umfang müssen mindestens zwei
der Kriterien erfüllt sein:
a) Ausmaß der Bissverschiebung:
mehr als 4 Millimeter,
b) Richtung der durchzuführenden
Bissverschiebung, Unterkiefer rela -
tiv zum Oberkiefer: dorsal,
c) Skelettale Bedingungen: ungüns -
tige Wachstumsvoraussetzungen.
Die Leistungen nach den Num -
mern 6030 bis 6080 umfassen alle
im Behandlungsplan festgelegten
Maßnahmen innerhalb eines Zeit -
raumes von bis zu vier Jahren.
Die Maßnahmen im Sinne der
Nummern 6030 bis 6080 umfassen
alle Leistungen zur Kieferumfor -
mung und Retention bzw. zur Ein -
stellung des Unterkiefers in den
Regelbiss innerhalb eines Zeitrau -
mes von bis zu vier Jahren, unab -
hängig von den angewandten
Behandlungsmethoden oder den
verwendeten Therapiegeräten.
Neben den Leistungen nach den
Nummern 6030 bis 6080 sind Leis -
tungen nach den Nummern 6190
bis 6260 nicht berechnungsfähig.",G_Kieferorthopädische_Leistungen,3600.0,202.47,465.68,708.65,"References: Nummern 6030 bis 6080, Nummern 6190 bis 6260",,Neben den Leistungen nach den Nummern 6030 bis 6080 sind Leistungen nach den Nummern 6190 bis 6260 nicht berechnungsfähig.,,,,,,,,"
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(Service, (member(service(Service, _, _, _, _, _, _, _), Services), between(6030, 6080, Service)), Services6030_6080),
    findall(Service, (member(service(Service, _, _, _, _, _, _, _), Services), between(6190, 6260, Service)), Services6190_6260),
    intersection(Services6030_6080, Services6190_6260, Intersection),
    Intersection \= [],
    print('Services from 6030 to 6080 and from 6190 to 6260 are billed in the same invoice.'),
    true.
"
175,6090,"Maßnahmen zur Einstellung der
Okklusion durch alveolären Aus -
gleich bei abgeschlossener
Wachstumsphase einschließlich
Retention, je Kiefer",G_Kieferorthopädische_Leistungen,700.0,39.37,90.55,137.79,The text does not mention any references to other paragraphs.,,,,,,,,,,
176,6100,"Eingliederung eines Klebebrackets
zur Aufnahme orthodontischer
Hilfsmittel",G_Kieferorthopädische_Leistungen,165.0,9.28,21.34,32.48,The text provided does not contain any references to other paragraphs.,,,,,,,,,,
177,6110,"Entfernung eines Klebebrackets
einschließlich Polieren und gegebe -
nenfalls Versiegelung des Zahnes",G_Kieferorthopädische_Leistungen,70.0,3.94,9.05,13.78,The text provided does not mention any references to other paragraphs.,,,,,,,,,,
178,6120,"Eingliederung eines Bandes zur
Aufnahme orthodontischer Hilfs -
mittel",G_Kieferorthopädische_Leistungen,230.0,12.94,29.75,45.27,The text provided does not contain any references to other paragraphs.,,,,,,,,,,
179,6130,"Entfernung eines Bandes ein -
schließlich Polieren und gegebe -
nenfalls Versiegelung des Zahnes",G_Kieferorthopädische_Leistungen,20.0,1.12,2.59,3.94,The text does not mention any references to other paragraphs.,,,,,,,,,,
180,6140,Eingliederung eines Teilbogens,G_Kieferorthopädische_Leistungen,210.0,11.81,27.16,41.34,The text provided does not contain any references to other paragraphs.,,,,,,,,,,
181,6150,"Eingliederung eines ungeteilten
Bogens, alle Zahngruppen umfas -
send, je Kiefer",G_Kieferorthopädische_Leistungen,500.0,28.12,64.68,98.42,The text provided does not contain any references to other paragraphs.,,,,,,,,,,
182,6160,"Eingliederung einer intra-/extrao -
ralen Verankerung (z.B. Head -
gear).",G_Kieferorthopädische_Leistungen,370.0,20.81,47.86,72.83,The text does not mention any references to other paragraphs.,,,,,,,,,,
183,6170,"Eingliederung einer Kopf-Kinn-
Kappe.
Die Kosten für die eingegliederten
Hilfsmittel nach den Nummern 6160 und 6170 sind gesondert be -
rechnungsfähig",G_Kieferorthopädische_Leistungen,500.0,28.12,64.68,98.42,"References: Nummern 6160, 6170",,The costs for the integrated aids according to numbers 6160 and 6170 can be invoiced separately.,,,,,,,,"
"
184,6180,"Maßnahmen zur Wiederherstellung
der Funktionsfähigkeit und/oder Er -
weiterung von herausnehmbaren
Behandlungsgeräten einschließlich
Abformung und Wiedereinfügen, je
Kiefer und je Sitzung einmal berech -
nungsfähig",G_Kieferorthopädische_Leistungen,270.0,15.19,34.93,53.15,The text does not mention any references to other paragraphs.,,Je Kiefer und je Sitzung einmal berechnungsfähig,,,,,,,,"
"
185,6190,"Beratendes und belehrendes
Gespräch mit Anweisungen zur
Beseitigung von schädlichen Ge -
wohnheiten und Dysfunktionen
Neben der Leistung nach der
Nummer 6190 ist die Leistung nach
der Nummer 0010 in derselben Sit -
zung nicht berechnungsfähig.",G_Kieferorthopädische_Leistungen,140.0,7.87,18.11,27.56,"References: Nummer 6190, Nummer 0010",,Neben der Leistung nach der Nummer 6190 ist die Leistung nach der Nummer 0010 in derselben Sitzung nicht berechnungsfähig.,,,,,,,,"
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(Date, (member(service(6190, Date, _, _, _, _, _, _), Services)), Dates6190),
    findall(Date, (member(service(0010, Date, _, _, _, _, _, _), Services)), Dates0010),
    intersection(Dates6190, Dates0010, Intersection),
    Intersection \= [],
    print('Services 6190 and 0010 are billed in the same session.'),
    true.
"
186,6200,"Eingliedern von Hilfsmitteln zur Be -
seitigung von Funktionsstörungen
(z.B. Mundvorhofplatte) einschließ -
lich Anweisung zum Gebrauch und
Kontrollen",G_Kieferorthopädische_Leistungen,450.0,25.31,58.21,88.58,The text does not mention any references to other paragraphs.,,,,,,,,,,
187,6210,"Kontrolle des Behandlungsverlaufs
oder Weiterführung der Retention
einschließlich kleiner Änderungen
der Behandlungs- oder Retentions -
geräte, Therapiekontrolle der ge -
steuerten Extraktion, je Sitzung",G_Kieferorthopädische_Leistungen,90.0,5.06,11.64,17.72,The text does not mention any references to other paragraphs.,,,,,,,,,,
188,6220,"Vorbereitende Maßnahmen zur
Herstellung von kieferorthopädi -
schen Behandlungsmitteln (z.B.
Abformung, Bissnahme), je Kiefer",G_Kieferorthopädische_Leistungen,180.0,10.12,23.28,35.43,The text does not mention any references to other paragraphs.,,,,,,,,,,
189,6230,"Eingliederung von kieferorthopädi -
schen Behandlungsmitteln, je Kiefer",G_Kieferorthopädische_Leistungen,180.0,10.12,23.28,35.43,The text provided does not mention any references to other paragraphs.,,,,,,,,,,
190,6240,"Maßnahmen zur Verhütung von
Folgen vorzeitigen Zahnverlustes
(Offenhalten einer Lücke)",G_Kieferorthopädische_Leistungen,270.0,15.19,34.93,53.15,The text provided does not contain any references to other paragraphs.,,,,,,,,,,
191,6250,"Beseitigung des Diastemas, als
selbstständige Leistung",G_Kieferorthopädische_Leistungen,450.0,25.31,58.21,88.58,The text provided does not contain any references to other paragraphs.,,,,,,,,,,
192,6260,"Maßnahmen zur Einordnung eines
verlagerten Zahnes in den Zahn -
bogen, als selbstständige Leistung",G_Kieferorthopädische_Leistungen,1100.0,61.87,142.29,216.53,The text does not mention any references to other paragraphs.,,,,,,,,,,
193,7000,"Eingliederung eines Aufbissbehelfs
ohne adjustierte Oberfläche",H_Eingliederung_von_Aufbissbehelfen_und_Schienen,270.0,15.19,34.93,53.15,The text provided does not contain any references to other paragraphs.,,,,,,,,,,
194,7010,"Eingliederung eines Aufbissbehelfs
mit adjustierter Oberfläche",H_Eingliederung_von_Aufbissbehelfen_und_Schienen,800.0,44.99,103.49,157.48,The text provided does not contain any references to other paragraphs.,,,,,,,,,,
195,7020,"Umarbeitung einer vorhandenen
Prothese zum Aufbissbehelf",H_Eingliederung_von_Aufbissbehelfen_und_Schienen,450.0,25.31,58.21,88.58,The text provided does not contain any references to other paragraphs.,,,,,,,,,,
196,7030,"Wiederherstellung der Funktion
eines Aufbissbehelfs, z.B. durch Un -
terfütterung",H_Eingliederung_von_Aufbissbehelfen_und_Schienen,370.0,20.81,47.86,72.83,The text does not mention any references to other paragraphs.,,,,,,,,,,
197,7040,Kontrolle eines Aufbissbehelfs,H_Eingliederung_von_Aufbissbehelfen_und_Schienen,65.0,3.66,8.41,12.8,The text provided does not contain any references to other paragraphs.,,,,,,,,,,
198,7050,"Kontrolle eines Aufbissbehelfs mit
adjustierter Oberfläche: subtrak -
tive Maßnahmen, je Sitzung",H_Eingliederung_von_Aufbissbehelfen_und_Schienen,180.0,10.12,23.28,35.43,The text does not mention any references to other paragraphs.,,,,,,,,,,
199,7060,"Kontrolle eines Aufbissbehelfs mit
adjustierter Oberfläche: additive
Maßnahmen, je Sitzung",H_Eingliederung_von_Aufbissbehelfen_und_Schienen,410.0,23.06,53.04,80.71,The text does not mention any references to other paragraphs.,,,,,,,,,,
200,7070,"Semipermanente Schiene unter
Anwendung der Ätztechnik, je In -
terdentalraum",H_Eingliederung_von_Aufbissbehelfen_und_Schienen,90.0,5.06,11.64,17.72,The text does not mention any references to other paragraphs.,,,,,,,,,,
201,7080,"Versorgung eines Kiefers mit einem
festsitzenden laborgefertigten Pro -
visorium (einschließlich Vorpräpa -
ration) im indirekten Verfahren, je
Zahn oder je Implantat, einschließ -
lich Entfernung",H_Eingliederung_von_Aufbissbehelfen_und_Schienen,600.0,33.75,77.61,118.11,The text does not mention any references to other paragraphs.,,,,,,,,,,
202,7090,"Versorgung eines Kiefers mit einem
laborgefertigten Provisorium im indi -
rekten Verfahren, je Brückenglied,
einschließlich Entfernung
Die Berechnung der Leistungen
nach den Nummern 7080 und 7090 setzt voraus, dass es sich bei
dem festsitzenden laborgefertig -
ten Provisorium um ein Langzeit -
provisorium mit einer Tragezeit von
mindestens drei Monaten handelt.
Beträgt die Tragezeit des festsit -
zenden laborgefertigten Provisori -
ums unter drei Monaten, sind
anstelle der Leistungen nach den
Nummern 7080 und 7090 die Leis -
tungen nach den Nummern 2260, 2270 oder 5120 und 5140 berech -
nungsfähig. Im Zusammenhang
mit den Leistungen nach den
Nummern 7080 oder 7090 sind die
Leistungen nach den Nummern
2230, 2240, 5050 oder 5060 nicht
berechnungsfähig.",H_Eingliederung_von_Aufbissbehelfen_und_Schienen,270.0,15.19,34.93,53.15,"References: Nummern 7080, 7090, 2260, 2270, 5120, 5140, 2230, 2240, 5050, 5060",,"Die Berechnung der Leistungen nach den Nummern 7080 und 7090 setzt voraus, dass es sich bei dem festsitzenden laborgefertigten Provisorium um ein Langzeitprovisorium mit einer Tragezeit von mindestens drei Monaten handelt.","Rule 1:
Thoughts: This rule states that the services 7080 and 7090 can only be charged if the provisional is worn for at least three months. However, we do not have any information about the duration of the provisional in the given predicates. Therefore, we cannot translate this rule into Prolog code.

Translation:
```prolog
```

Rule 2:
Thoughts: This rule states that if the provisional is worn for less than three months, the services 2260, 2270, 5120 and 5140 can be charged instead of 7080 and 7090. Again, we do not have any information about the duration of the provisional in the given predicates. Therefore, we cannot translate this rule into Prolog code.

Translation:
```prolog
```

Rule 3:
Thoughts: This rule states that the services 2230, 2240, 5050 and 5060 cannot be charged in conjunction with the services 7080 or 7090. We can translate this rule into Prolog code by checking if any of the services 2230, 2240, 5050 and 5060 are charged in the same invoice as 7080 or 7090.

Translation:
```prolog
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    member(service(7080, _, _, _, _, _, _, _), Services),
    member(service(Service, _, _, _, _, _, _, _), Services),
    member(Service, [2230, 2240, 5050, 5060]),
    print('Services 2230, 2240, 5050 and 5060 cannot be charged in conjunction with service 7080.'),
    true.

is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    member(service(7090, _, _, _, _, _, _, _), Services),
    member(service(Service, _, _, _, _, _, _, _), Services),
    member(Service, [2230, 2240, 5050, 5060]),
    print('Services 2230, 2240, 5050 and 5060 cannot be charged in conjunction with service 7090.'),
    true.
```

Rule 4:
Thoughts: This rule states that the reintegration of the same fixed laboratory-made provisional according to the numbers 7080 or 7090, possibly several times, including removal, is covered by the fees according to the numbers 7080 to 7100. This rule seems to be more about the interpretation of the GOZ than about specific conditions that could lead to an invoice being invalid. Therefore, we cannot translate this rule into Prolog code.

Translation:
```prolog
```",,"Given this rules from the german GOZ:
---
Die Berechnung der Leistungen nach den Nummern 7080 und 7090 setzt voraus, dass es sich bei dem festsitzenden laborgefertigten Provisorium um ein Langzeitprovisorium mit einer Tragezeit von mindestens drei Monaten handelt.
---
Beträgt die Tragezeit des festsitzenden laborgefertigten Provisoriums unter drei Monaten, sind anstelle der Leistungen nach den Nummern 7080 und 7090 die Leistungen nach den Nummern 2260, 2270 oder 5120 und 5140 berechnungsfähig.
---
Im Zusammenhang mit den Leistungen nach den Nummern 7080 oder 7090 sind die Leistungen nach den Nummern 2230, 2240, 5050 oder 5060 nicht berechnungsfähig.
---
The reintegration of the same fixed laboratory-made provisional according to the numbers 7080 or 7090, possibly several times, including removal, is covered by the fees according to the numbers 7080 to 7100.
---


And this predicates:
```prolog
invoice(
    % A Service is defined trough its Service Number (Service), the date / session when it was rendered, its multiplier, the teeth it is applied to, ...
    [service(Service, date(Year, Month, Day), Multiplier, PointScore, Charge, Description, Justification, [tooth(Area, Postion), ...]), ... ],
    % Billed Material Costs are defined trough the Section of the GOZ which allows its billing, the date / session when it was rendered, its multiplier, ...
    [material_cost(GOZ_Section, date(Year, Month, Day), Multiplier, Count, Charge, Description, Justification, [tooth(Area, Postion), ...]), ... ],
    invoice_date(date(Year, Month, Day)),
    invoice_amount(InvoiceAmount)
).
% Charge = (round(PointValue in Euros * Multiplier * PointScore * 100)) / 100
% A Tooth on which a Service is applied is uniquely defined by the combination of its area and position in this area: tooth(Area, Postion) nummerated after the FDI-Zahnschema
% Area = 1 -> Right upper jaw
% Area = 2 -> Left upper jaw
% Area = 3 -> Left lower jaw
% Area = 4 -> Right lower jaw
% Position is exact position of this tooth in its area (from 1 to 8)
% Example invoice
invoice(
    [
        service(11111, date(2023, 10, 01), 1, 100, 5.62, 'Teeth Cleaning', '', [tooth(1,7)]),
        service(11111, date(2023, 10, 01), 1, 100, 5.62, 'Teeth Cleaning', '', [tooth(1,6)]),
        service(987654, date(2023, 10, 01), 3.5, 200, 39.37, 'Tooth Filling', 'Very time consuming', [tooth(1,7), tooth(1,6)]),
        service(123456, date(2023, 10, 02), 2.3, 150, 19.40, 'Consultation', '', [])
    ],
    [
        material_cost('§ 4 (1)', date(2023, 10, 02), 1, 1, 40.00, 'Fill Material', 'Auslagen', [tooth(1,7), tooth(1,6)])
    ]
    invoice_date(date(2023, 10, 04),
    invoice_amount(110.01)
).
```
The 4 rules indicate conditions and restrictions stated in the GOZ that should be adhered to when creating an invoice.
We want to mark invoices as invalid if they do not adhere to those rules.
Which of those rules can you translate into prolog code given following restriction:
Only translate the rules as they are, do not include any examples.
Be as accurate as possible.
You must be able to exactly define every new predicate based on the given ones.
Do not make any assumptions which are not given.
Translate the rules where a translation given the restrictions is possible.
To determine if an invoice is correct, use the predicate 
```prolog
is_invoice_invalid(Invoice) : -
    Invoice = invoice(Services, Material_Costs, invoice_date(date(Year, Month, Day), invoice_amount(InvoiceAmount)),
    % The corresponding rule (only one rule for each predicate)
    % Please double check that the prolog code you write in here is semantically equivalent to the rule in the text.
    print(...), % When rule is not fulfilled and therefore the invoice is invalid, print the reason for the invalidity of the invoice
    true. % Then the invoice is invalid.
```
Use this predicate to check each rule individually. Before you translate a rule, think about it.
Expected format:
---
Rule 1:
Thoughts: ...
Translation:
```prolog
% code here (is_invoice_invalid/1 predicate with potential helper predicates for this rule)
```
---
Rule 2:
Thoughts: ...
Translation:
```prolog
% code here (is_invoice_invalid/1 predicate with potential helper predicates for this rule)
```
---
... 

When you can not translate leaf the code section empty like this:
---
Rule X:
Thoughts: ...
Translation:
```prolog
```
---

So you should have a block for each of the 4 given rules at the end.
For translated rules include print statements, so that the user can see the reason for the invalidity of the invoice.
When you calculate with currencies, always round the result to two digits with round(X*100)/100 and always calculate in Euros (even after summation).
I only want to have exactly defined rules.
First, think step by step how you would translate a rule, then translate it. Explain your thoughts step by step.",1.0,1387.0,571.0,0.07586999999999999,"
"
203,7090,"Versorgung eines Kiefers mit einem
laborgefertigten Provisorium im indi -
rekten Verfahren, je Brückenglied,
einschließlich Entfernung
Die Berechnung der Leistungen
nach den Nummern 7080 und 7090 setzt voraus, dass es sich bei
dem festsitzenden laborgefertig -
ten Provisorium um ein Langzeit -
provisorium mit einer Tragezeit von
mindestens drei Monaten handelt.
Beträgt die Tragezeit des festsit -
zenden laborgefertigten Provisori -
ums unter drei Monaten, sind
anstelle der Leistungen nach den
Nummern 7080 und 7090 die Leis -
tungen nach den Nummern 2260, 2270 oder 5120 und 5140 berech -
nungsfähig. Im Zusammenhang
mit den Leistungen nach den
Nummern 7080 oder 7090 sind die
Leistungen nach den Nummern
2230, 2240, 5050 oder 5060 nicht
berechnungsfähig.",H_Eingliederung_von_Aufbissbehelfen_und_Schienen,270.0,15.19,34.93,53.15,"References: Nummern 7080, 7090, 2260, 2270, 5120, 5140, 2230, 2240, 5050, 5060",,"Beträgt die Tragezeit des festsitzenden laborgefertigten Provisoriums unter drei Monaten, sind anstelle der Leistungen nach den Nummern 7080 und 7090 die Leistungen nach den Nummern 2260, 2270 oder 5120 und 5140 berechnungsfähig.",,,,,,,,"
"
204,7090,"Versorgung eines Kiefers mit einem
laborgefertigten Provisorium im indi -
rekten Verfahren, je Brückenglied,
einschließlich Entfernung
Die Berechnung der Leistungen
nach den Nummern 7080 und 7090 setzt voraus, dass es sich bei
dem festsitzenden laborgefertig -
ten Provisorium um ein Langzeit -
provisorium mit einer Tragezeit von
mindestens drei Monaten handelt.
Beträgt die Tragezeit des festsit -
zenden laborgefertigten Provisori -
ums unter drei Monaten, sind
anstelle der Leistungen nach den
Nummern 7080 und 7090 die Leis -
tungen nach den Nummern 2260, 2270 oder 5120 und 5140 berech -
nungsfähig. Im Zusammenhang
mit den Leistungen nach den
Nummern 7080 oder 7090 sind die
Leistungen nach den Nummern
2230, 2240, 5050 oder 5060 nicht
berechnungsfähig.",H_Eingliederung_von_Aufbissbehelfen_und_Schienen,270.0,15.19,34.93,53.15,"References: Nummern 7080, 7090, 2260, 2270, 5120, 5140, 2230, 2240, 5050, 5060",,"Im Zusammenhang mit den Leistungen nach den Nummern 7080 oder 7090 sind die Leistungen nach den Nummern 2230, 2240, 5050 oder 5060 nicht berechnungsfähig.",,,,,,,,"
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    member(service(7080, _, _, _, _, _, _, _), Services),
    member(service(Service, _, _, _, _, _, _, _), Services),
    member(Service, [2230, 2240, 5050, 5060]),
    print('Services 2230, 2240, 5050 and 5060 cannot be charged in conjunction with service 7080.'),
    true.

is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    member(service(7090, _, _, _, _, _, _, _), Services),
    member(service(Service, _, _, _, _, _, _, _), Services),
    member(Service, [2230, 2240, 5050, 5060]),
    print('Services 2230, 2240, 5050 and 5060 cannot be charged in conjunction with service 7090.'),
    true.
"
205,7100,"Maßnahmen zur Wiederherstellung
der Funktion eines Langzeitprovisori -
ums, je Krone, Spanne oder Freiend -
brückenglied
Die Wiedereingliederung desselben
festsitzenden laborgefertigten Provi -
soriums nach den Nummern 7080
oder 7090, gegebenenfalls auch
mehrmals, einschließlich Entfernung,
ist mit den Gebühren nach den
Nummern 7080 bis 7100 abgegolten.",H_Eingliederung_von_Aufbissbehelfen_und_Schienen,200.0,11.25,25.87,39.37,"References: Nummern 7080, 7090, 7080 bis 7100",,"The reintegration of the same fixed laboratory-made provisional according to the numbers 7080 or 7090, possibly several times, including removal, is covered by the fees according to the numbers 7080 to 7100.",,,,,,,,"
"
206,8000,"Klinische Funktionsanalyse ein -
schließlich Dokumentation
Die Leistung nach der Nummer 8000 umfasst auch folgende zahn -
ärztliche Leistungen: prophylakti -
sche, prothetische, parodonto-
logische und okklusale Befunder -
hebung, funktionsdiagnostische
Auswertung von Röntgenaufnah -
men des Schädels und der Halswir -
belsäule, klinische Reaktionstests
(z.B. Resilienztest, Provokationstest).",J_Funktionsanalytische_und,500.0,28.12,64.68,98.42,The text does not mention any references to other paragraphs.,,,,,,,,,,
207,8010,"Registrieren der gelenkbezügli -
chen Zentrallage des Unterkiefers,
auch Stützstiftregistrierung, je Re -
gistrat
Die Leistung nach der Nummer 8010 ist je Sitzung höchstens zwei -
mal berechnungsfähig.
Neben der Leistung nach der
Nummer 8010 sind die Material-
und Laborkosten für die Bissnahme
und die Lieferung und Anbringung
des Stützstiftbestecks gesondert
berechnungsfähig.",J_Funktionsanalytische_und,180.0,10.12,23.28,35.43,The text does not contain any references to other paragraphs.,,"Die Leistung nach der Nummer 8010 ist je Sitzung höchstens zwei -
mal berechnungsfähig.","---
Rule 1:
Thoughts: This rule states that the service with the number 8010 can be charged at most twice per session. This means we need to count the occurrences of this service per session and check if it exceeds 2. We can achieve this by filtering the services for the service number 8010 and the specific date, then counting the results. If the count is more than 2, the invoice is invalid.
Translation:
```prolog
% Helper predicate to count the occurrences of a service in a session
count_service_per_session(ServiceNumber, SessionDate, Services, Count) :-
    findall(Service, (member(Service, Services), Service = service(ServiceNumber, SessionDate, _, _, _, _, _, _)), FilteredServices),
    length(FilteredServices, Count).

is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    member(Service, Services),
    Service = service(8010, SessionDate, _, _, _, _, _, _),
    count_service_per_session(8010, SessionDate, Services, Count),
    Count > 2,
    print('The service 8010 is charged more than twice in a session.'),
    true.
```
---
Rule 2:
Thoughts: This rule states that the material and lab costs for the bite registration and the delivery and attachment of the post and core set can be charged separately in addition to the service 8010. This rule does not impose any restrictions or conditions that could make an invoice invalid, so there is no need to translate it into a Prolog rule.
Translation:
```prolog
```
---
Rule 3:
Thoughts: Similar to rule 2, this rule states that the material and lab costs for the articulation of the upper and lower jaw models in the (semi) individual articulator can be charged separately in addition to the services 8020 to 8035. This rule does not impose any restrictions or conditions that could make an invoice invalid, so there is no need to translate it into a Prolog rule.
Translation:
```prolog
```
---
Rule 4:
Thoughts: Similar to rules 2 and 3, this rule states that the material and lab costs for the adjustment of the (semi) individual articulator according to the measured values can be charged separately in addition to the services 8050 to 8065. This rule does not impose any restrictions or conditions that could make an invoice invalid, so there is no need to translate it into a Prolog rule.
Translation:
```prolog
```",,"Given this rules from the german GOZ:
---
Die Leistung nach der Nummer 8010 ist je Sitzung höchstens zwei -
mal berechnungsfähig.
---
Neben der Leistung nach der
Nummer 8010 sind die Material-
und Laborkosten für die Bissnahme
und die Lieferung und Anbringung
des Stützstiftbestecks gesondert
berechnungsfähig.
---
Neben den Leistungen nach den Nummern 8020 bis 8035 sind die Material- und Laborkosten für die Artikulation des Ober- und Unterkiefermodells im (halb) individuellen Artikulator gesondert berechnungsfähig.
---
Neben den Leistungen nach den Nummern 8050 bis 8065 sind Material- und Laborkosten für die Einstellung des (halb) individuellen Artikulators nach den gemessenen Werten gesondert berechnungsfähig.
---


And this predicates:
```prolog
invoice(
    % A Service is defined trough its Service Number (Service), the date / session when it was rendered, its multiplier, the teeth it is applied to, ...
    [service(Service, date(Year, Month, Day), Multiplier, PointScore, Charge, Description, Justification, [tooth(Area, Postion), ...]), ... ],
    % Billed Material Costs are defined trough the Section of the GOZ which allows its billing, the date / session when it was rendered, its multiplier, ...
    [material_cost(GOZ_Section, date(Year, Month, Day), Multiplier, Count, Charge, Description, Justification, [tooth(Area, Postion), ...]), ... ],
    invoice_date(date(Year, Month, Day)),
    invoice_amount(InvoiceAmount)
).
% Charge = (round(PointValue in Euros * Multiplier * PointScore * 100)) / 100
% A Tooth on which a Service is applied is uniquely defined by the combination of its area and position in this area: tooth(Area, Postion) nummerated after the FDI-Zahnschema
% Area = 1 -> Right upper jaw
% Area = 2 -> Left upper jaw
% Area = 3 -> Left lower jaw
% Area = 4 -> Right lower jaw
% Position is exact position of this tooth in its area (from 1 to 8)
% Example invoice
invoice(
    [
        service(11111, date(2023, 10, 01), 1, 100, 5.62, 'Teeth Cleaning', '', [tooth(1,7)]),
        service(11111, date(2023, 10, 01), 1, 100, 5.62, 'Teeth Cleaning', '', [tooth(1,6)]),
        service(987654, date(2023, 10, 01), 3.5, 200, 39.37, 'Tooth Filling', 'Very time consuming', [tooth(1,7), tooth(1,6)]),
        service(123456, date(2023, 10, 02), 2.3, 150, 19.40, 'Consultation', '', [])
    ],
    [
        material_cost('§ 4 (1)', date(2023, 10, 02), 1, 1, 40.00, 'Fill Material', 'Auslagen', [tooth(1,7), tooth(1,6)])
    ]
    invoice_date(date(2023, 10, 04),
    invoice_amount(110.01)
).
```
The 4 rules indicate conditions and restrictions stated in the GOZ that should be adhered to when creating an invoice.
We want to mark invoices as invalid if they do not adhere to those rules.
Which of those rules can you translate into prolog code given following restriction:
Only translate the rules as they are, do not include any examples.
Be as accurate as possible.
You must be able to exactly define every new predicate based on the given ones.
Do not make any assumptions which are not given.
Translate the rules where a translation given the restrictions is possible.
To determine if an invoice is correct, use the predicate 
```prolog
is_invoice_invalid(Invoice) : -
    Invoice = invoice(Services, Material_Costs, invoice_date(date(Year, Month, Day), invoice_amount(InvoiceAmount)),
    % The corresponding rule (only one rule for each predicate)
    % Please double check that the prolog code you write in here is semantically equivalent to the rule in the text.
    print(...), % When rule is not fulfilled and therefore the invoice is invalid, print the reason for the invalidity of the invoice
    true. % Then the invoice is invalid.
```
Use this predicate to check each rule individually. Before you translate a rule, think about it.
Expected format:
---
Rule 1:
Thoughts: ...
Translation:
```prolog
% code here (is_invoice_invalid/1 predicate with potential helper predicates for this rule)
```
---
Rule 2:
Thoughts: ...
Translation:
```prolog
% code here (is_invoice_invalid/1 predicate with potential helper predicates for this rule)
```
---
... 

When you can not translate leaf the code section empty like this:
---
Rule X:
Thoughts: ...
Translation:
```prolog
```
---

So you should have a block for each of the 4 given rules at the end.
For translated rules include print statements, so that the user can see the reason for the invalidity of the invoice.
When you calculate with currencies, always round the result to two digits with round(X*100)/100 and always calculate in Euros (even after summation).
I only want to have exactly defined rules.
First, think step by step how you would translate a rule, then translate it. Explain your thoughts step by step.",1.0,1348.0,525.0,0.07194,"
% Helper predicate to count the occurrences of a service in a session
count_service_per_session(ServiceNumber, SessionDate, Services, Count) :-
    findall(Service, (member(Service, Services), Service = service(ServiceNumber, SessionDate, _, _, _, _, _, _)), FilteredServices),
    length(FilteredServices, Count).

is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    member(Service, Services),
    Service = service(8010, SessionDate, _, _, _, _, _, _),
    count_service_per_session(8010, SessionDate, Services, Count),
    Count > 2,
    print('The service 8010 is charged more than twice in a session.'),
    true.
"
208,8010,"Registrieren der gelenkbezügli -
chen Zentrallage des Unterkiefers,
auch Stützstiftregistrierung, je Re -
gistrat
Die Leistung nach der Nummer 8010 ist je Sitzung höchstens zwei -
mal berechnungsfähig.
Neben der Leistung nach der
Nummer 8010 sind die Material-
und Laborkosten für die Bissnahme
und die Lieferung und Anbringung
des Stützstiftbestecks gesondert
berechnungsfähig.",J_Funktionsanalytische_und,180.0,10.12,23.28,35.43,The text does not contain any references to other paragraphs.,,"Neben der Leistung nach der
Nummer 8010 sind die Material-
und Laborkosten für die Bissnahme
und die Lieferung und Anbringung
des Stützstiftbestecks gesondert
berechnungsfähig.",,,,,,,,"
"
209,8020,"Arbiträre Scharnierachsenbestim -
mung (eingeschlossen sind die arbi -
träre Scharnierachsenbestimmung,
das Anlegen eines Übertragungs -
bogens, das Koordinieren eines
Übertragungsbogens mit einem Ar -
tikulator)",J_Funktionsanalytische_und,300.0,16.87,38.81,59.05,The text provided does not contain any references to other paragraphs.,,,,,,,,,,
210,8030,"Kinematische Scharnierachsenbe -
stimmung (eingeschlossen sind die
kinematische Scharnierachsenbe -
stimmung, das definitive Markieren
der Referenzpunkte, das Anlegen
eines Übertragungsbogens, das
Koordinieren eines Übertragungs -
bogens mit einem Artikulator)",J_Funktionsanalytische_und,550.0,30.93,71.15,108.27,The text does not mention any references to other paragraphs.,,,,,,,,,,
211,8035,"Kinematische Scharnierachsenbe -
stimmung mittels elektronischer
Aufzeichnung (eingeschlossen
sind die kinematische Scharnier -
achsenbestimmung, das definitive
Markieren der Referenzpunkte, ge -
gebenenfalls das Anlegen eines
Übertragungsbogens, gegebe -
nenfalls das Koordinieren eines
Übertragungsbogens mit einem
Artikulator)
Neben den Leistungen nach den
Nummern 8020 bis 8035 sind die
Material- und Laborkosten für
die Artikulation des Ober- und
Unterkiefermodells im (halb) indivi -
duellen Artikulator gesondert be -
rechnungsfähig.",J_Funktionsanalytische_und,550.0,30.93,71.15,108.27,References: Nummern 8020 bis 8035,,Neben den Leistungen nach den Nummern 8020 bis 8035 sind die Material- und Laborkosten für die Artikulation des Ober- und Unterkiefermodells im (halb) individuellen Artikulator gesondert berechnungsfähig.,,,,,,,,"
"
212,8050,"Registrieren von Unterkieferbewe -
gungen zur Einstellung halbindivi -
dueller Artikulatoren und Ein-
stellung nach den gemessenen
Werten, je Sitzung",J_Funktionsanalytische_und,500.0,28.12,64.68,98.42,The text does not mention any references to other paragraphs.,,,,,,,,,,
213,8060,"Registrieren von Unterkieferbewe -
gungen zur Einstellung voll adjus -
tierbarer Artikulatoren und Ein-
stellung nach den gemessenen
Werten, je Sitzung",J_Funktionsanalytische_und,750.0,42.18,97.02,147.64,The text does not mention any references to other paragraphs.,,,,,,,,,,
214,8065,"Registrieren von Unterkieferbewe -
gungen mittels elektronischer Auf -
zeichnung zur Einstellung voll
adjustierbarer Artikulatoren und
Einstellung nach den gemessenen
Werten, je Sitzung
Neben den Leistungen nach den
Nummern 8050 bis 8065 sind Mate -
rial- und Laborkosten für die Ein -
stellung des (halb) individuellen
Artikulators nach den gemessenen
Werten gesondert berechnungs -
fähig.",J_Funktionsanalytische_und,850.0,47.81,109.95,167.32,References: Nummern 8050 bis 8065,,Neben den Leistungen nach den Nummern 8050 bis 8065 sind Material- und Laborkosten für die Einstellung des (halb) individuellen Artikulators nach den gemessenen Werten gesondert berechnungsfähig.,,,,,,,,"
"
215,8080,"Diagnostische Maßnahmen an
Modellen im Artikulator einschließ -
lich subtraktiver oder additiver Kor -
rekturen, Befundauswertung und
Behandlungsplanung, je Sitzung",J_Funktionsanalytische_und,250.0,14.06,32.34,49.21,The text does not mention any references to other paragraphs.,,,,,,,,,,
216,8090,"Diagnostischer Aufbau von Funkti -
onsflächen am natürlichen Gebiss,
am festsitzenden und/oder he -
rausnehmbaren Zahnersatz, je Sit -
zung",J_Funktionsanalytische_und,250.0,14.06,32.34,49.21,The text does not mention any references to other paragraphs.,,,,,,,,,,
217,8100,"Systematische subtraktive Maß -
nahmen am natürlichen Gebiss,
am festsitzenden und/oder he -
rausnehmbaren Zahnersatz, je
Zahnpaar",J_Funktionsanalytische_und,20.0,1.12,2.59,3.94,The text does not mention any references to other paragraphs.,,,,,,,,,,
218,9000,"Implantatbezogene Analyse und
Vermessung des Alveolarfortsat -
zes, des Kieferkörpers und der
angrenzenden knöchernen Struk -
turen sowie der Schleimhaut, ein -
schließlich metrischer Auswertung
von radiologischen Befundunterla -
gen, Modellen und Fotos zur Fest -
stellung der Implantatposition,
gegebenenfalls mit Hilfe einer indi -
viduellen Schablone zur Diagnostik,
einschließlich Implantatauswahl, je
Kiefer.
Bei Verwendung einer Röntgen -
messschablone sind die Material-
und Laborkosten gesondert be -
rechnungsfähig.",K_Implantologische_Leistungen,884.0,49.72,114.35,174.01,The text does not mention any references to other paragraphs.,,"Bei Verwendung einer Röntgen -
messschablone sind die Material-
und Laborkosten gesondert be -
rechnungsfähig.","Rule 1:
Thoughts: This rule states that when a Röntgenmessschablone is used, the material and labor costs can be billed separately. However, there is no information given on how to identify the use of a Röntgenmessschablone in the invoice. Therefore, this rule cannot be translated into Prolog code given the current predicates.

Translation:
```prolog
```

Rule 2:
Thoughts: Similar to Rule 1, this rule states that when an Orientierungsschablone is used, the material and labor costs can be billed separately. Again, there is no information given on how to identify the use of an Orientierungsschablone in the invoice. Therefore, this rule cannot be translated into Prolog code given the current predicates.

Translation:
```prolog
```

Rule 3:
Thoughts: This rule states that the used fixation elements and the material and labor costs of the navigation template can be billed separately. However, there is no information given on how to identify the use of these elements in the invoice. Therefore, this rule cannot be translated into Prolog code given the current predicates.

Translation:
```prolog
```

Rule 4:
Thoughts: This rule states that the service with the number 9050 cannot be billed alongside the services with the numbers 9010 and 9040. This can be translated into Prolog code by checking if the service 9050 is in the list of services and if either service 9010 or 9040 is also in the list.

Translation:
```prolog
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    member(service(9050, _, _, _, _, _, _, _), Services),
    (member(service(9010, _, _, _, _, _, _, _), Services) ; member(service(9040, _, _, _, _, _, _, _), Services)),
    print('Service 9050 cannot be billed alongside services 9010 and 9040.'),
    true.
```

Rule 5:
Thoughts: This rule states that the service with the number 9050 can be billed a maximum of three times per implant and once per session. This can be translated into Prolog code by counting the number of times service 9050 appears in the list of services and checking if it exceeds the limit.

Translation:
```prolog
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(S, (member(service(9050, Date, _, _, _, _, _, Teeth), Services), member(tooth(_, _), Teeth)), List),
    length(List, Count),
    Count > 3,
    print('Service 9050 can be billed a maximum of three times per implant.'),
    true.

is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(D, member(service(9050, D, _, _, _, _, _, _), Services), Dates),
    sort(Dates, SortedDates),
    length(SortedDates, Count),
    Count > 1,
    print('Service 9050 can be billed a maximum of once per session.'),
    true.
```

Rule 6:
Thoughts: This rule states that the service with the number 9060 can be billed a maximum of once per session for an implant. This can be translated into Prolog code by counting the number of times service 9060 appears in the list of services and checking if it exceeds the limit.

Translation:
```prolog
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(D, member(service(9060, D, _, _, _, _, _, _), Services), Dates),
    sort(Dates, SortedDates),
    length(SortedDates, Count),
    Count > 1,
    print('Service 9060 can be billed a maximum of once per session for an implant.'),
    true.
```

Rule 7:
Thoughts: This rule states that the costs of a once-used bone collector or scraper can be billed separately. However, there is no information given on how to identify the use of these tools in the invoice. Therefore, this rule cannot be translated into Prolog code given the current predicates.

Translation:
```prolog
```

Rule 8:
Thoughts: This rule states that the service with the number 9100 cannot be billed for the smoothing of the Alveolarfortsatz in the area of the implant bed. However, there is no information given on how to identify the smoothing of the Alveolarfortsatz in the area of the implant bed in the invoice. Therefore, this rule cannot be translated into Prolog code given the current predicates.

Translation:
```prolog
```",,"Given this rules from the german GOZ:
---
Bei Verwendung einer Röntgen -
messschablone sind die Material-
und Laborkosten gesondert be -
rechnungsfähig.
---
Bei Verwendung einer Orientie -
rungsschablone sind die Material-
und Laborkosten gesondert be -
rechnungsfähig.
---
Die verwendeten Fixierungselemente sowie die Material- und Laborkosten der Navigationsschablone sind gesondert berechnungsfähig.
---
1. Die Leistung nach der Nummer 9050 ist nicht neben den Leistungen nach den Nummern 9010 und 9040 berechnungsfähig.
---
2. Die Leistung nach der Nummer 9050 ist je Implantat höchstens dreimal und höchstens einmal je Sitzung berechnungsfähig.
---
Die Leistung nach der Nummer 9060 ist für ein Implantat höchstens einmal je Sitzung berechnungsfähig.
---
Die Kosten eines einmal verwendbaren Knochenkollektors oder -schabers sind gesondert berechnungsfähig.
---
1. Die Leistung nach der Nummer 9100 ist für die Glättung des Alveolarfortsatzes im Bereich des Implantatbettes nicht berechnungsfähig.
---


And this predicates:
```prolog
invoice(
    % A Service is defined trough its Service Number (Service), the date / session when it was rendered, its multiplier, the teeth it is applied to, ...
    [service(Service, date(Year, Month, Day), Multiplier, PointScore, Charge, Description, Justification, [tooth(Area, Postion), ...]), ... ],
    % Billed Material Costs are defined trough the Section of the GOZ which allows its billing, the date / session when it was rendered, its multiplier, ...
    [material_cost(GOZ_Section, date(Year, Month, Day), Multiplier, Count, Charge, Description, Justification, [tooth(Area, Postion), ...]), ... ],
    invoice_date(date(Year, Month, Day)),
    invoice_amount(InvoiceAmount)
).
% Charge = (round(PointValue in Euros * Multiplier * PointScore * 100)) / 100
% A Tooth on which a Service is applied is uniquely defined by the combination of its area and position in this area: tooth(Area, Postion) nummerated after the FDI-Zahnschema
% Area = 1 -> Right upper jaw
% Area = 2 -> Left upper jaw
% Area = 3 -> Left lower jaw
% Area = 4 -> Right lower jaw
% Position is exact position of this tooth in its area (from 1 to 8)
% Example invoice
invoice(
    [
        service(11111, date(2023, 10, 01), 1, 100, 5.62, 'Teeth Cleaning', '', [tooth(1,7)]),
        service(11111, date(2023, 10, 01), 1, 100, 5.62, 'Teeth Cleaning', '', [tooth(1,6)]),
        service(987654, date(2023, 10, 01), 3.5, 200, 39.37, 'Tooth Filling', 'Very time consuming', [tooth(1,7), tooth(1,6)]),
        service(123456, date(2023, 10, 02), 2.3, 150, 19.40, 'Consultation', '', [])
    ],
    [
        material_cost('§ 4 (1)', date(2023, 10, 02), 1, 1, 40.00, 'Fill Material', 'Auslagen', [tooth(1,7), tooth(1,6)])
    ]
    invoice_date(date(2023, 10, 04),
    invoice_amount(110.01)
).
```
The 8 rules indicate conditions and restrictions stated in the GOZ that should be adhered to when creating an invoice.
We want to mark invoices as invalid if they do not adhere to those rules.
Which of those rules can you translate into prolog code given following restriction:
Only translate the rules as they are, do not include any examples.
Be as accurate as possible.
You must be able to exactly define every new predicate based on the given ones.
Do not make any assumptions which are not given.
Translate the rules where a translation given the restrictions is possible.
To determine if an invoice is correct, use the predicate 
```prolog
is_invoice_invalid(Invoice) : -
    Invoice = invoice(Services, Material_Costs, invoice_date(date(Year, Month, Day), invoice_amount(InvoiceAmount)),
    % The corresponding rule (only one rule for each predicate)
    % Please double check that the prolog code you write in here is semantically equivalent to the rule in the text.
    print(...), % When rule is not fulfilled and therefore the invoice is invalid, print the reason for the invalidity of the invoice
    true. % Then the invoice is invalid.
```
Use this predicate to check each rule individually. Before you translate a rule, think about it.
Expected format:
---
Rule 1:
Thoughts: ...
Translation:
```prolog
% code here (is_invoice_invalid/1 predicate with potential helper predicates for this rule)
```
---
Rule 2:
Thoughts: ...
Translation:
```prolog
% code here (is_invoice_invalid/1 predicate with potential helper predicates for this rule)
```
---
... 

When you can not translate leaf the code section empty like this:
---
Rule X:
Thoughts: ...
Translation:
```prolog
```
---

So you should have a block for each of the 8 given rules at the end.
For translated rules include print statements, so that the user can see the reason for the invalidity of the invoice.
When you calculate with currencies, always round the result to two digits with round(X*100)/100 and always calculate in Euros (even after summation).
I only want to have exactly defined rules.
First, think step by step how you would translate a rule, then translate it. Explain your thoughts step by step.",1.0,1430.0,989.0,0.10224,"
"
219,9003,"Verwenden einer Orientierungs -
schablone/Positionierungsschab -
lone zur Implantation, je Kiefer
Bei Verwendung einer Orientie -
rungsschablone sind die Material-
und Laborkosten gesondert be -
rechnungsfähig.",K_Implantologische_Leistungen,100.0,5.62,12.94,19.68,The text does not mention any references to other paragraphs.,,"Bei Verwendung einer Orientie -
rungsschablone sind die Material-
und Laborkosten gesondert be -
rechnungsfähig.",,,,,,,,"
"
220,9005,"Verwenden einer auf dreidimen -
sionale Daten gestützten Naviga -
tionsschablone/chirurgischen
Führungsschablone zur Implanta -
tion, gegebenenfalls einschließlich
Fixierung, je Kiefer
Die verwendeten Fixierungsele -
mente sowie die Material- und
Laborkosten der Navigationsschab -
lone sind gesondert berechnungs -
fähig.",K_Implantologische_Leistungen,300.0,16.87,38.81,59.05,The text does not mention any references to other paragraphs.,,Die verwendeten Fixierungselemente sowie die Material- und Laborkosten der Navigationsschablone sind gesondert berechnungsfähig.,,,,,,,,"
"
221,9010,"Implantatinsertion, je Implantat
Präparieren einer Knochenkavität
für ein enossales Implantat, Einset -
zen einer Implantatschablone zur
Überprüfung der Knochenkavität
(z.B. Tiefenlehre), gegebenenfalls
einschließlich Knochenkondensa -
tion, Knochenglättung im Bereich
des Implantats, Einbringen eines
enossalen Implantats einschließlich
Verschlussschraube und gegebe -
nenfalls Einbringen von Auf-
bauelementen bei offener Einhei -
lung sowie Wundverschluss",K_Implantologische_Leistungen,1545.0,86.89,199.86,304.13,The text does not mention any references to other paragraphs.,,,,,,,,,,
222,9020,"Insertion eines Implantats zum
temporären Verbleib, auch ortho -
dontisches Implantat",K_Implantologische_Leistungen,515.0,28.96,66.62,101.38,The text does not mention any references to other paragraphs.,,,,,,,,,,
223,9040,"Freilegen eines Implantats, und
Einfügen eines oder mehrerer Auf -
bauelemente (z.B. eines Gingiva -
formers) bei einem zweiphasigen
Implantatsystem",K_Implantologische_Leistungen,626.0,35.21,80.98,123.23,The text does not mention any references to other paragraphs.,,,,,,,,,,
224,9050,"Entfernen und Wiedereinsetzen
sowie Auswechseln eines oder
mehrerer Aufbauelemente bei
einem zweiphasigen Implantatsys -
tem während der rekonstruktiven
Phase
1. Die Leistung nach der Nummer 9050 ist nicht neben den Leistun -
gen nach den Nummern 9010 und 9040 berechnungsfähig.
2. Die Leistung nach der Nummer 9050 ist je Implantat höchstens
dreimal und höchstens einmal je
Sitzung berechnungsfähig.",K_Implantologische_Leistungen,313.0,17.6,40.49,61.61,"References: Nummer 9050, Nummer 9010, Nummer 9040",,1. Die Leistung nach der Nummer 9050 ist nicht neben den Leistungen nach den Nummern 9010 und 9040 berechnungsfähig.,,,,,,,,"
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    member(service(9050, _, _, _, _, _, _, _), Services),
    (member(service(9010, _, _, _, _, _, _, _), Services) ; member(service(9040, _, _, _, _, _, _, _), Services)),
    print('Service 9050 cannot be billed alongside services 9010 and 9040.'),
    true.
"
225,9050,"Entfernen und Wiedereinsetzen
sowie Auswechseln eines oder
mehrerer Aufbauelemente bei
einem zweiphasigen Implantatsys -
tem während der rekonstruktiven
Phase
1. Die Leistung nach der Nummer 9050 ist nicht neben den Leistun -
gen nach den Nummern 9010 und 9040 berechnungsfähig.
2. Die Leistung nach der Nummer 9050 ist je Implantat höchstens
dreimal und höchstens einmal je
Sitzung berechnungsfähig.",K_Implantologische_Leistungen,313.0,17.6,40.49,61.61,"References: Nummer 9050, Nummer 9010, Nummer 9040",,2. Die Leistung nach der Nummer 9050 ist je Implantat höchstens dreimal und höchstens einmal je Sitzung berechnungsfähig.,,,,,,,,"
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(S, (member(service(9050, Date, _, _, _, _, _, Teeth), Services), member(tooth(_, _), Teeth)), List),
    length(List, Count),
    Count > 3,
    print('Service 9050 can be billed a maximum of three times per implant.'),
    true.

is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(D, member(service(9050, D, _, _, _, _, _, _), Services), Dates),
    sort(Dates, SortedDates),
    length(SortedDates, Count),
    Count > 1,
    print('Service 9050 can be billed a maximum of once per session.'),
    true.
"
226,9060,"Auswechseln von Aufbauelemen -
ten (Sekundärteilen) im Reparatur -
fall
Die Leistung nach der Nummer 9060 ist für ein Implantat höchs -
tens einmal je Sitzung berech -
nungsfähig.",K_Implantologische_Leistungen,313.0,17.6,40.49,61.61,The text does not mention any references to other paragraphs.,,Die Leistung nach der Nummer 9060 ist für ein Implantat höchstens einmal je Sitzung berechnungsfähig.,,,,,,,,"
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(D, member(service(9060, D, _, _, _, _, _, _), Services), Dates),
    sort(Dates, SortedDates),
    length(SortedDates, Count),
    Count > 1,
    print('Service 9060 can be billed a maximum of once per session for an implant.'),
    true.
"
227,9090,"Knochengewinnung (z.B. Knochen -
kollektor oder Knochenschaber),
Knochenaufbereitung und -im -
plantation, auch zur Weichteilun -
terfütterung
Die Kosten eines einmal verwend -
baren Knochenkollektors oder
-schabers sind gesondert berech -
nungsfähig.",K_Implantologische_Leistungen,400.0,22.5,51.74,78.74,The text does not mention any references to other paragraphs.,,Die Kosten eines einmal verwendbaren Knochenkollektors oder -schabers sind gesondert berechnungsfähig.,,,,,,,,"
"
228,9100,"Aufbau des Alveolarfortsatzes
durch Augmentation ohne zusätzli -
che Stabilisierungsmaßnahmen, je
Kieferhälfte oder Frontzahnbereich
Mit der Leistung nach der Nummer 9100 sind folgende Leistungen
abgegolten: Lagerbildung, Glät -
tung des Alveolarfortsatzes, gege -
benenfalls Entnahme von Knochen
innerhalb des Aufbaugebietes,
Einbringung von Aufbaumaterial
(Knochen und/oder Knochener -
satzmaterial) und Wundverschluss
mit vollständiger Schleimhautab -
deckung, gegebenenfalls ein -
schließlich Einbringung und Fixie-
rung resorbierbarer oder nicht re -
sorbierbarer Barrieren
1. Die Leistung nach der Nummer 9100 ist für die Glättung des Alveo -
larfortsatzes im Bereich des Implan -
tatbettes nicht berechnungsfähig.
2. Neben der Leistung nach der
Nummer 9100 sind die Leistungen
nach der Nummer 9130 nicht be -
rechnungsfähig.
3. Wird die Leistung nach der Num -
mer 9100 in derselben Kieferhälfte
neben der Leistung nach der Num -
mer 9110 erbracht, ist die Hälfte der
Gebühr der Nummer 9100 berech -
nungsfähig.
4. Wird die Leistung nach der Num -
mer 9100 in derselben Kieferhälfte
neben der Leistung nach der Num -
mer 9120 erbracht, ist ein Drittel der
Gebühr der Nummer 9100 berech -
nungsfähig.",K_Implantologische_Leistungen,2694.0,151.52,348.49,530.31,"References: Nummer 9100, Nummer 9130, Nummer 9110, Nummer 9120",,1. Die Leistung nach der Nummer 9100 ist für die Glättung des Alveolarfortsatzes im Bereich des Implantatbettes nicht berechnungsfähig.,,,,,,,,"
"
229,9100,"Aufbau des Alveolarfortsatzes
durch Augmentation ohne zusätzli -
che Stabilisierungsmaßnahmen, je
Kieferhälfte oder Frontzahnbereich
Mit der Leistung nach der Nummer 9100 sind folgende Leistungen
abgegolten: Lagerbildung, Glät -
tung des Alveolarfortsatzes, gege -
benenfalls Entnahme von Knochen
innerhalb des Aufbaugebietes,
Einbringung von Aufbaumaterial
(Knochen und/oder Knochener -
satzmaterial) und Wundverschluss
mit vollständiger Schleimhautab -
deckung, gegebenenfalls ein -
schließlich Einbringung und Fixie-
rung resorbierbarer oder nicht re -
sorbierbarer Barrieren
1. Die Leistung nach der Nummer 9100 ist für die Glättung des Alveo -
larfortsatzes im Bereich des Implan -
tatbettes nicht berechnungsfähig.
2. Neben der Leistung nach der
Nummer 9100 sind die Leistungen
nach der Nummer 9130 nicht be -
rechnungsfähig.
3. Wird die Leistung nach der Num -
mer 9100 in derselben Kieferhälfte
neben der Leistung nach der Num -
mer 9110 erbracht, ist die Hälfte der
Gebühr der Nummer 9100 berech -
nungsfähig.
4. Wird die Leistung nach der Num -
mer 9100 in derselben Kieferhälfte
neben der Leistung nach der Num -
mer 9120 erbracht, ist ein Drittel der
Gebühr der Nummer 9100 berech -
nungsfähig.",K_Implantologische_Leistungen,2694.0,151.52,348.49,530.31,"References: Nummer 9100, Nummer 9130, Nummer 9110, Nummer 9120",,2. Neben der Leistung nach der Nummer 9100 sind die Leistungen nach der Nummer 9130 nicht berechnungsfähig.,"Rule 1:
Thoughts: This rule states that if service 9100 is provided, then service 9130 cannot be charged. We can check this by looking for the presence of both services in the invoice. If both are found, the invoice is invalid.

Translation:
```prolog
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    member(service(9100, _, _, _, _, _, _, _), Services),
    member(service(9130, _, _, _, _, _, _, _), Services),
    print('Rule 1 violation: Service 9100 and 9130 cannot be charged together.'),
    true.
```

Rule 2:
Thoughts: This rule states that if service 9100 and 9110 are provided on the same jaw side, then only half of the fee for service 9100 can be charged. We need to check if both services are provided on the same jaw side and if the charge for service 9100 is more than half of its original fee.

Translation:
```prolog
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    member(service(9100, _, _, _, Charge9100, _, _, Teeth9100), Services),
    member(service(9110, _, _, _, _, _, _, Teeth9110), Services),
    intersection(Teeth9100, Teeth9110, CommonTeeth),
    CommonTeeth \= [],
    Charge9100 > (Charge9100 / 2),
    print('Rule 2 violation: Service 9100 and 9110 are provided on the same jaw side but the charge for service 9100 is more than half of its original fee.'),
    true.
```

Rule 3:
Thoughts: This rule is similar to Rule 2, but it states that if service 9100 and 9120 are provided on the same jaw side, then only a third of the fee for service 9100 can be charged.

Translation:
```prolog
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    member(service(9100, _, _, _, Charge9100, _, _, Teeth9100), Services),
    member(service(9120, _, _, _, _, _, _, Teeth9120), Services),
    intersection(Teeth9100, Teeth9120, CommonTeeth),
    CommonTeeth \= [],
    Charge9100 > (Charge9100 / 3),
    print('Rule 3 violation: Service 9100 and 9120 are provided on the same jaw side but the charge for service 9100 is more than a third of its original fee.'),
    true.
```

Rule 4:
Thoughts: This rule states that service 9110 cannot be charged alongside services 9120 and 9130 for the same implant cavity. We need to check if service 9110 is provided and if services 9120 or 9130 are also provided for the same teeth.

Translation:
```prolog
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    member(service(9110, _, _, _, _, _, _, Teeth9110), Services),
    (member(service(9120, _, _, _, _, _, _, Teeth9120), Services);
    member(service(9130, _, _, _, _, _, _, Teeth9130), Services)),
    (intersection(Teeth9110, Teeth9120, CommonTeeth);
    intersection(Teeth9110, Teeth9130, CommonTeeth)),
    CommonTeeth \= [],
    print('Rule 4 violation: Service 9110 is provided alongside services 9120 or 9130 for the same implant cavity.'),
    true.
```

Rule 5:
Thoughts: This rule is similar to Rule 1, but it states that if service 9130 is provided, then service 9100 cannot be charged. We can check this by looking for the presence of both services in the invoice. If both are found, the invoice is invalid.

Translation:
```prolog
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    member(service(9130, _, _, _, _, _, _, _), Services),
    member(service(9100, _, _, _, _, _, _, _), Services),
    print('Rule 5 violation: Service 9130 and 9100 cannot be charged together.'),
    true.
```

Rule 6:
Thoughts: This rule states that if one or more bone blocks are removed, then double the fee for service 9140 can be charged. We need to check if service 9140 is provided and if the charge is more than double its original fee.

Translation:
```prolog
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    member(service(9140, _, _, _, Charge9140, _, _, _), Services),
    Charge9140 > (Charge9140 * 2),
    print('Rule 6 violation: One or more bone blocks are removed but the charge for service 9140 is more than double its original fee.'),
    true.
```

Rule 7:
Thoughts: This rule is more of a definition than a rule that can be checked against an invoice. It defines what a bone block is in the context of the GOZ. Therefore, it cannot be translated into a Prolog rule.

Translation:
```prolog
```

Rule 8:
Thoughts: This rule states that the removal of an implant is covered by the fees for services 3000 and 3030. We need to check if an implant removal service is provided and if services 3000 or 3030 are not provided.

Translation:
```prolog
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    member(service(ImplantRemoval, _, _, _, _, _, _, _), Services),
    ImplantRemoval > 9000, % Assuming that implant removal services have service numbers greater than 9000
    \+ member(service(3000, _, _, _, _, _, _, _), Services),
    \+ member(service(3030, _, _, _, _, _, _, _), Services),
    print('Rule 8 violation: An implant removal service is provided but services 3000 or 3030 are not provided.'),
    true.
```",,"Given this rules from the german GOZ:
---
2. Neben der Leistung nach der Nummer 9100 sind die Leistungen nach der Nummer 9130 nicht berechnungsfähig.
---
3. Wird die Leistung nach der Nummer 9100 in derselben Kieferhälfte neben der Leistung nach der Nummer 9110 erbracht, ist die Hälfte der Gebühr der Nummer 9100 berechnungsfähig.
---
4. Wird die Leistung nach der Nummer 9100 in derselben Kieferhälfte neben der Leistung nach der Nummer 9120 erbracht, ist ein Drittel der Gebühr der Nummer 9100 berechnungsfähig.
---
Die Leistung nach der Nummer 9110 ist für dieselbe Implantatkavi -
tät nicht neben den Leistungen
nach den Nummern 9120 und 9130 berechnungsfähig.
---
Neben der Leistung nach der Nummer 9130 ist die Leistung nach der Nummer 9100 nicht berechnungsfähig.
---
Bei Entnahme von einem oder mehreren Knochenblöcken ist das Doppelte der Gebühr nach der Nummer 9140 berechnungsfähig.
---
Von einem Knochenblock im Sinne dieser Abrechnungsbestimmung ist auszugehen, wenn dieser bei der Implantation eigenständig fixiert werden muss.
---
Die Entfernung eines Implantats ist mit der Gebühr für die Leistungen nach den Nummern 3000 und 3030 abgegolten.
---


And this predicates:
```prolog
invoice(
    % A Service is defined trough its Service Number (Service), the date / session when it was rendered, its multiplier, the teeth it is applied to, ...
    [service(Service, date(Year, Month, Day), Multiplier, PointScore, Charge, Description, Justification, [tooth(Area, Postion), ...]), ... ],
    % Billed Material Costs are defined trough the Section of the GOZ which allows its billing, the date / session when it was rendered, its multiplier, ...
    [material_cost(GOZ_Section, date(Year, Month, Day), Multiplier, Count, Charge, Description, Justification, [tooth(Area, Postion), ...]), ... ],
    invoice_date(date(Year, Month, Day)),
    invoice_amount(InvoiceAmount)
).
% Charge = (round(PointValue in Euros * Multiplier * PointScore * 100)) / 100
% A Tooth on which a Service is applied is uniquely defined by the combination of its area and position in this area: tooth(Area, Postion) nummerated after the FDI-Zahnschema
% Area = 1 -> Right upper jaw
% Area = 2 -> Left upper jaw
% Area = 3 -> Left lower jaw
% Area = 4 -> Right lower jaw
% Position is exact position of this tooth in its area (from 1 to 8)
% Example invoice
invoice(
    [
        service(11111, date(2023, 10, 01), 1, 100, 5.62, 'Teeth Cleaning', '', [tooth(1,7)]),
        service(11111, date(2023, 10, 01), 1, 100, 5.62, 'Teeth Cleaning', '', [tooth(1,6)]),
        service(987654, date(2023, 10, 01), 3.5, 200, 39.37, 'Tooth Filling', 'Very time consuming', [tooth(1,7), tooth(1,6)]),
        service(123456, date(2023, 10, 02), 2.3, 150, 19.40, 'Consultation', '', [])
    ],
    [
        material_cost('§ 4 (1)', date(2023, 10, 02), 1, 1, 40.00, 'Fill Material', 'Auslagen', [tooth(1,7), tooth(1,6)])
    ]
    invoice_date(date(2023, 10, 04),
    invoice_amount(110.01)
).
```
The 8 rules indicate conditions and restrictions stated in the GOZ that should be adhered to when creating an invoice.
We want to mark invoices as invalid if they do not adhere to those rules.
Which of those rules can you translate into prolog code given following restriction:
Only translate the rules as they are, do not include any examples.
Be as accurate as possible.
You must be able to exactly define every new predicate based on the given ones.
Do not make any assumptions which are not given.
Translate the rules where a translation given the restrictions is possible.
To determine if an invoice is correct, use the predicate 
```prolog
is_invoice_invalid(Invoice) : -
    Invoice = invoice(Services, Material_Costs, invoice_date(date(Year, Month, Day), invoice_amount(InvoiceAmount)),
    % The corresponding rule (only one rule for each predicate)
    % Please double check that the prolog code you write in here is semantically equivalent to the rule in the text.
    print(...), % When rule is not fulfilled and therefore the invoice is invalid, print the reason for the invalidity of the invoice
    true. % Then the invoice is invalid.
```
Use this predicate to check each rule individually. Before you translate a rule, think about it.
Expected format:
---
Rule 1:
Thoughts: ...
Translation:
```prolog
% code here (is_invoice_invalid/1 predicate with potential helper predicates for this rule)
```
---
Rule 2:
Thoughts: ...
Translation:
```prolog
% code here (is_invoice_invalid/1 predicate with potential helper predicates for this rule)
```
---
... 

When you can not translate leaf the code section empty like this:
---
Rule X:
Thoughts: ...
Translation:
```prolog
```
---

So you should have a block for each of the 8 given rules at the end.
For translated rules include print statements, so that the user can see the reason for the invalidity of the invoice.
When you calculate with currencies, always round the result to two digits with round(X*100)/100 and always calculate in Euros (even after summation).
I only want to have exactly defined rules.
First, think step by step how you would translate a rule, then translate it. Explain your thoughts step by step.",1.0,1494.0,1326.0,0.12438,"
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    member(service(9100, _, _, _, _, _, _, _), Services),
    member(service(9130, _, _, _, _, _, _, _), Services),
    print('Rule 1 violation: Service 9100 and 9130 cannot be charged together.'),
    true.
"
230,9100,"Aufbau des Alveolarfortsatzes
durch Augmentation ohne zusätzli -
che Stabilisierungsmaßnahmen, je
Kieferhälfte oder Frontzahnbereich
Mit der Leistung nach der Nummer 9100 sind folgende Leistungen
abgegolten: Lagerbildung, Glät -
tung des Alveolarfortsatzes, gege -
benenfalls Entnahme von Knochen
innerhalb des Aufbaugebietes,
Einbringung von Aufbaumaterial
(Knochen und/oder Knochener -
satzmaterial) und Wundverschluss
mit vollständiger Schleimhautab -
deckung, gegebenenfalls ein -
schließlich Einbringung und Fixie-
rung resorbierbarer oder nicht re -
sorbierbarer Barrieren
1. Die Leistung nach der Nummer 9100 ist für die Glättung des Alveo -
larfortsatzes im Bereich des Implan -
tatbettes nicht berechnungsfähig.
2. Neben der Leistung nach der
Nummer 9100 sind die Leistungen
nach der Nummer 9130 nicht be -
rechnungsfähig.
3. Wird die Leistung nach der Num -
mer 9100 in derselben Kieferhälfte
neben der Leistung nach der Num -
mer 9110 erbracht, ist die Hälfte der
Gebühr der Nummer 9100 berech -
nungsfähig.
4. Wird die Leistung nach der Num -
mer 9100 in derselben Kieferhälfte
neben der Leistung nach der Num -
mer 9120 erbracht, ist ein Drittel der
Gebühr der Nummer 9100 berech -
nungsfähig.",K_Implantologische_Leistungen,2694.0,151.52,348.49,530.31,"References: Nummer 9100, Nummer 9130, Nummer 9110, Nummer 9120",,"3. Wird die Leistung nach der Nummer 9100 in derselben Kieferhälfte neben der Leistung nach der Nummer 9110 erbracht, ist die Hälfte der Gebühr der Nummer 9100 berechnungsfähig.",,,,,,,,"
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    member(service(9100, _, _, _, Charge9100, _, _, Teeth9100), Services),
    member(service(9110, _, _, _, _, _, _, Teeth9110), Services),
    intersection(Teeth9100, Teeth9110, CommonTeeth),
    CommonTeeth \= [],
    Charge9100 > (Charge9100 / 2),
    print('Rule 2 violation: Service 9100 and 9110 are provided on the same jaw side but the charge for service 9100 is more than half of its original fee.'),
    true.
"
231,9100,"Aufbau des Alveolarfortsatzes
durch Augmentation ohne zusätzli -
che Stabilisierungsmaßnahmen, je
Kieferhälfte oder Frontzahnbereich
Mit der Leistung nach der Nummer 9100 sind folgende Leistungen
abgegolten: Lagerbildung, Glät -
tung des Alveolarfortsatzes, gege -
benenfalls Entnahme von Knochen
innerhalb des Aufbaugebietes,
Einbringung von Aufbaumaterial
(Knochen und/oder Knochener -
satzmaterial) und Wundverschluss
mit vollständiger Schleimhautab -
deckung, gegebenenfalls ein -
schließlich Einbringung und Fixie-
rung resorbierbarer oder nicht re -
sorbierbarer Barrieren
1. Die Leistung nach der Nummer 9100 ist für die Glättung des Alveo -
larfortsatzes im Bereich des Implan -
tatbettes nicht berechnungsfähig.
2. Neben der Leistung nach der
Nummer 9100 sind die Leistungen
nach der Nummer 9130 nicht be -
rechnungsfähig.
3. Wird die Leistung nach der Num -
mer 9100 in derselben Kieferhälfte
neben der Leistung nach der Num -
mer 9110 erbracht, ist die Hälfte der
Gebühr der Nummer 9100 berech -
nungsfähig.
4. Wird die Leistung nach der Num -
mer 9100 in derselben Kieferhälfte
neben der Leistung nach der Num -
mer 9120 erbracht, ist ein Drittel der
Gebühr der Nummer 9100 berech -
nungsfähig.",K_Implantologische_Leistungen,2694.0,151.52,348.49,530.31,"References: Nummer 9100, Nummer 9130, Nummer 9110, Nummer 9120",,"4. Wird die Leistung nach der Nummer 9100 in derselben Kieferhälfte neben der Leistung nach der Nummer 9120 erbracht, ist ein Drittel der Gebühr der Nummer 9100 berechnungsfähig.",,,,,,,,"
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    member(service(9100, _, _, _, Charge9100, _, _, Teeth9100), Services),
    member(service(9120, _, _, _, _, _, _, Teeth9120), Services),
    intersection(Teeth9100, Teeth9120, CommonTeeth),
    CommonTeeth \= [],
    Charge9100 > (Charge9100 / 3),
    print('Rule 3 violation: Service 9100 and 9120 are provided on the same jaw side but the charge for service 9100 is more than a third of its original fee.'),
    true.
"
232,9110,"Geschlossene Sinusbodeneleva -
tion vom Kieferkamm aus (interner
Sinuslift)
Mit einer Leistung nach der Num -
mer 9110 sind folgende Leistun -
gen abgegolten: Schaffung des
Zugangs durch die Alveole oder
das Implantatfach, Anhebung des
Kieferhöhlenbodens durch kno -
chenverdrängende oder knochen -
verdichtende Maßnahmen und
der Kieferhöhlenmembran, Ent -
nahme von Knochenspänen inner -
halb des Aufbaugebietes des
Implantatfaches und Einbringen
von Aufbaumaterial (Knochen
und/oder Knochenersatzmaterial)
Die Leistung nach der Nummer 9110 ist für dieselbe Implantatkavi -
tät nicht neben den Leistungen
nach den Nummern 9120 und 9130 berechnungsfähig.",K_Implantologische_Leistungen,1500.0,84.36,194.04,295.27,"References: Nummer 9110, Nummern 9120 und 9130",,"Die Leistung nach der Nummer 9110 ist für dieselbe Implantatkavi -
tät nicht neben den Leistungen
nach den Nummern 9120 und 9130 berechnungsfähig.",,,,,,,,"
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    member(service(9110, _, _, _, _, _, _, Teeth9110), Services),
    (member(service(9120, _, _, _, _, _, _, Teeth9120), Services);
    member(service(9130, _, _, _, _, _, _, Teeth9130), Services)),
    (intersection(Teeth9110, Teeth9120, CommonTeeth);
    intersection(Teeth9110, Teeth9130, CommonTeeth)),
    CommonTeeth \= [],
    print('Rule 4 violation: Service 9110 is provided alongside services 9120 or 9130 for the same implant cavity.'),
    true.
"
233,9120,"Sinusbodenelevation durch ex -
terne Knochenfensterung (exter -
ner Sinuslift), je Kieferhälfte
Mit einer Leistung nach der Num -
mer 9120 sind folgende Leistun -
gen abgegolten: Schaffung des
Zugangs zur Kieferhöhle durch
Knochenfensterung (auch Kno -
chendeckel), Präparation der Kie -
ferhöhlenmembran, Anhebung
des Kieferhöhlenbodens und der
Kieferhöhlenmembran, Lagerbil -
dung, gegebenenfalls Entnahme
von Knochenspänen innerhalb
des Aufbaugebietes, Einbringung
von Aufbaumaterial (Knochen
und/oder Knochenersatzmaterial),
gegebenenfalls Einbringung resor -
bierbarer oder nicht resorbierbarer
Barrieren €einschließlich Fixierung 䴄
gegebenenfalls Reposition des
Knochendeckels, Verschluss der
Kieferhöhle und Wundverschluss",K_Implantologische_Leistungen,3000.0,168.73,388.07,590.54,The text does not contain any references to other paragraphs.,,,,,,,,,,
234,9130,"Spaltung und Spreizung von Kno -
chensegmenten (Bone Splitting),
gegebenenfalls mit Auffüllung der
Spalträume mittels Knochen oder
Knochenersatzmaterial, gegebe -
nenfalls einschließlich zusätzlicher
Osteosynthesemaßnahmen, gege -
benenfalls einschließlich Einbrin -
gung resorbierbarer oder nicht
resorbierbarer Barrieren und deren
Fixierung je Kieferhälfte oder Front -
zahnbereich, oder vertikale Distrak -
tion des Alveolarfortsatzes ein-
schließlich Fixierung, je Kieferhälfte
oder Frontzahnbereich
Neben der Leistung nach der
Nummer 9130 ist die Leistung nach
der Nummer 9100 nicht berech -
nungsfähig.",K_Implantologische_Leistungen,1540.0,86.61,199.21,303.14,"References: Nummer 9130, Nummer 9100",,Neben der Leistung nach der Nummer 9130 ist die Leistung nach der Nummer 9100 nicht berechnungsfähig.,,,,,,,,"
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    member(service(9130, _, _, _, _, _, _, _), Services),
    member(service(9100, _, _, _, _, _, _, _), Services),
    print('Rule 5 violation: Service 9130 and 9100 cannot be charged together.'),
    true.
"
235,9140,"Intraorale Entnahme von Knochen
außerhalb des Aufbaugebietes ge -
gebenenfalls einschließlich Aufbe -
reitung des Knochenmaterials
und/oder der Aufnahmeregion,
einschließlich der notwendigen Ver -
sorgung der Entnahmestelle, je Kie -
ferhälfte oder Frontzahnbereich
Bei Entnahme von einem oder
mehreren Knochenblöcken ist das
Doppelte der Gebühr nach der
Nummer 9140 berechnungsfähig.
Von einem Knochenblock im
Sinne dieser Abrechnungsbestim -
mung ist auszugehen, wenn dieser
bei der Implantation eigenständig
fixiert werden muss.",K_Implantologische_Leistungen,650.0,36.56,84.08,127.95,References: Nummer 9140,,Bei Entnahme von einem oder mehreren Knochenblöcken ist das Doppelte der Gebühr nach der Nummer 9140 berechnungsfähig.,,,,,,,,"
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    member(service(9140, _, _, _, Charge9140, _, _, _), Services),
    Charge9140 > (Charge9140 * 2),
    print('Rule 6 violation: One or more bone blocks are removed but the charge for service 9140 is more than double its original fee.'),
    true.
"
236,9140,"Intraorale Entnahme von Knochen
außerhalb des Aufbaugebietes ge -
gebenenfalls einschließlich Aufbe -
reitung des Knochenmaterials
und/oder der Aufnahmeregion,
einschließlich der notwendigen Ver -
sorgung der Entnahmestelle, je Kie -
ferhälfte oder Frontzahnbereich
Bei Entnahme von einem oder
mehreren Knochenblöcken ist das
Doppelte der Gebühr nach der
Nummer 9140 berechnungsfähig.
Von einem Knochenblock im
Sinne dieser Abrechnungsbestim -
mung ist auszugehen, wenn dieser
bei der Implantation eigenständig
fixiert werden muss.",K_Implantologische_Leistungen,650.0,36.56,84.08,127.95,References: Nummer 9140,,"Von einem Knochenblock im Sinne dieser Abrechnungsbestimmung ist auszugehen, wenn dieser bei der Implantation eigenständig fixiert werden muss.",,,,,,,,"
"
237,9150,"Fixation oder Stabilisierung des
Augmentates durch Osteosynthe -
semaßnahmen (z.B. Schrauben-
oder Plattenosteosynthese oder Ti -
tannetze), zusätzlich zu der Leis -
tung nach der Nummer 9100, je
Kieferhälfte oder Frontzahnbe -
reich",K_Implantologische_Leistungen,675.0,37.96,87.32,132.87,"The text references to the paragraph with the number 9100.

References: Nummer 9100",,,,,,,,,,
238,9160,"Entfernung unter der Schleimhaut
liegender Materialien (z.B. Barrie -
ren €einschließlich Fixierung €,
Osteosynthesematerial), je Kiefer -
hälfte oder Frontzahnbereich",K_Implantologische_Leistungen,330.0,18.56,42.69,64.96,The text does not mention any references to other paragraphs.,,,,,,,,,,
239,9170,"Entfernung im Knochen liegender
Materialien durch Osteotomie (z.B.
Osteosynthesematerial, Knochen -
schrauben) oder Entfernung eines
subperiostalen Gerüstimplantats,
je Kieferhälfte oder Frontzahnbe -
reich
Die Entfernung eines Implantats ist
mit der Gebühr für die Leistungen
nach den Nummern 3000 und 3030 abgegolten.",K_Implantologische_Leistungen,500.0,28.12,64.68,98.42,"References: Nummern 3000, 3030",,Die Entfernung eines Implantats ist mit der Gebühr für die Leistungen nach den Nummern 3000 und 3030 abgegolten.,,,,,,,,"
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    member(service(ImplantRemoval, _, _, _, _, _, _, _), Services),
    ImplantRemoval > 9000, % Assuming that implant removal services have service numbers greater than 9000
    \+ member(service(3000, _, _, _, _, _, _, _), Services),
    \+ member(service(3030, _, _, _, _, _, _, _), Services),
    print('Rule 8 violation: An implant removal service is provided but services 3000 or 3030 are not provided.'),
    true.
"
240,500,"Zuschlag bei nichtstationärer Durch -
führung von zahnärztlich-chirurgi -
schen Leistungen, die mit Punkt -
zahlen von 250 bis 499 Punkten
bewertet sind, oder zu den Leis -
tungen nach den Nummern 4090
oder 4130
Der Zuschlag nach der Nummer 0500 ist je Behandlungstag nur
einmal berechnungsfähig. Der Zu -
schlag nach der Nummer 0500 ist
neben den Zuschlägen nach den
Nummern 0510 bis 0530 nicht be -
rechnungsfähig.",L_Zuschläge_zu_bestimmten,400.0,22.5,,,"References: Nummern 4090, 4130, 0500, 0510, 0530",,Der Zuschlag nach der Nummer 0500 ist je Behandlungstag nur einmal berechnungsfähig.,"Rule 1:
Thoughts: This rule states that the surcharge with the number 0500 can only be charged once per treatment day. This means that if there are multiple services with the number 0500 on the same day, the invoice is invalid. We can check this by counting the number of services with the number 0500 on each day and if the count is more than 1 for any day, the invoice is invalid.

Translation:
```prolog
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(Date, (member(service(0500, Date, _, _, _, _, _, _), Services)), Dates),
    sort(Dates, SortedDates),
    maplist(count_services(Services, 0500), SortedDates, Counts),
    member(Count, Counts),
    Count > 1,
    print('The surcharge with the number 0500 is charged more than once on the same day.'),
    true.

count_services(Services, ServiceNumber, Date, Count) :-
    findall(_, (member(service(ServiceNumber, Date, _, _, _, _, _, _), Services)), ServiceList),
    length(ServiceList, Count).
```

Rule 2:
Thoughts: This rule states that the surcharge with the number 0500 cannot be charged alongside the surcharges with the numbers 0510 to 0530. This means that if there is a service with the number 0500 on the same day as a service with the number 0510, 0520 or 0530, the invoice is invalid. We can check this by finding all dates where a service with the number 0500 is charged and then checking if a service with the number 0510, 0520 or 0530 is charged on the same day.

Translation:
```prolog
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(Date, (member(service(0500, Date, _, _, _, _, _, _), Services)), Dates),
    sort(Dates, SortedDates),
    (   member(Date, SortedDates),
        (   member(service(0510, Date, _, _, _, _, _, _), Services)
        ;   member(service(0520, Date, _, _, _, _, _, _), Services)
        ;   member(service(0530, Date, _, _, _, _, _, _), Services)
        ),
        print('The surcharge with the number 0500 is charged on the same day as a surcharge with the number 0510, 0520 or 0530.'),
        true
    ).
```

Rule 3:
Thoughts: This rule is similar to rule 1, but for the surcharge with the number 0510. We can use the same approach as in rule 1.

Translation:
```prolog
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(Date, (member(service(0510, Date, _, _, _, _, _, _), Services)), Dates),
    sort(Dates, SortedDates),
    maplist(count_services(Services, 0510), SortedDates, Counts),
    member(Count, Counts),
    Count > 1,
    print('The surcharge with the number 0510 is charged more than once on the same day.'),
    true.
```

Rule 4:
Thoughts: This rule is similar to rule 2, but for the surcharge with the number 0510. We can use the same approach as in rule 2.

Translation:
```prolog
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(Date, (member(service(0510, Date, _, _, _, _, _, _), Services)), Dates),
    sort(Dates, SortedDates),
    (   member(Date, SortedDates),
        (   member(service(0500, Date, _, _, _, _, _, _), Services)
        ;   member(service(0520, Date, _, _, _, _, _, _), Services)
        ;   member(service(0530, Date, _, _, _, _, _, _), Services)
        ),
        print('The surcharge with the number 0510 is charged on the same day as a surcharge with the number 0500, 0520 or 0530.'),
        true
    ).
```

Rule 5:
Thoughts: This rule is similar to rule 1, but for the surcharge with the number 0520. We can use the same approach as in rule 1.

Translation:
```prolog
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(Date, (member(service(0520, Date, _, _, _, _, _, _), Services)), Dates),
    sort(Dates, SortedDates),
    maplist(count_services(Services, 0520), SortedDates, Counts),
    member(Count, Counts),
    Count > 1,
    print('The surcharge with the number 0520 is charged more than once on the same day.'),
    true.
```

Rule 6:
Thoughts: This rule is similar to rule 2, but for the surcharge with the number 0520. We can use the same approach as in rule 2.

Translation:
```prolog
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(Date, (member(service(0520, Date, _, _, _, _, _, _), Services)), Dates),
    sort(Dates, SortedDates),
    (   member(Date, SortedDates),
        (   member(service(0500, Date, _, _, _, _, _, _), Services)
        ;   member(service(0510, Date, _, _, _, _, _, _), Services)
        ;   member(service(0530, Date, _, _, _, _, _, _), Services)
        ),
        print('The surcharge with the number 0520 is charged on the same day as a surcharge with the number 0500, 0510 or 0530.'),
        true
    ).
```

Rule 7:
Thoughts: This rule is similar to rule 1, but for the surcharge with the number 0530. We can use the same approach as in rule 1.

Translation:
```prolog
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(Date, (member(service(0530, Date, _, _, _, _, _, _), Services)), Dates),
    sort(Dates, SortedDates),
    maplist(count_services(Services, 0530), SortedDates, Counts),
    member(Count, Counts),
    Count > 1,
    print('The surcharge with the number 0530 is charged more than once on the same day.'),
    true.
```

Rule 8:
Thoughts: This rule is similar to rule 2, but for the surcharge with the number 0530. We can use the same approach as in rule 2.

Translation:
```prolog
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(Date, (member(service(0530, Date, _, _, _, _, _, _), Services)), Dates),
    sort(Dates, SortedDates),
    (   member(Date, SortedDates),
        (   member(service(0500, Date, _, _, _, _, _, _), Services)
        ;   member(service(0510, Date, _, _, _, _, _, _), Services)
        ;   member(service(0520, Date, _, _, _, _, _, _), Services)
        ),
        print('The surcharge with the number 0530 is charged on the same day as a surcharge with the number 0500, 0510 or 0520.'),
        true
    ).
```",,"Given this rules from the german GOZ:
---
Der Zuschlag nach der Nummer 0500 ist je Behandlungstag nur einmal berechnungsfähig.
---
Der Zuschlag nach der Nummer 0500 ist neben den Zuschlägen nach den Nummern 0510 bis 0530 nicht berechnungsfähig.
---
Der Zuschlag nach der Nummer 0510 ist je Behandlungstag nur einmal berechnungsfähig.
---
Der Zuschlag nach der Nummer 0510 ist neben den Zuschlägen nach den Nummern 0500, 0520 und/oder 0530 nicht berechnungsfähig.
---
Der Zuschlag nach der Nummer 0520 ist je Behandlungstag nur einmal berechnungsfähig.
---
Der Zuschlag nach der Nummer 0520 ist neben den Zuschlägen nach den Nummern 0500, 0510 und/oder 0530 nicht berechnungsfähig.
---
Der Zuschlag nach der Nummer 0530 ist je Behandlungstag nur einmal berechnungsfähig.
---
Der Zuschlag nach der Nummer 0530 ist neben den Zuschlägen nach den Nummern 0500 bis 0520 nicht berechnungsfähig.
---


And this predicates:
```prolog
invoice(
    % A Service is defined trough its Service Number (Service), the date / session when it was rendered, its multiplier, the teeth it is applied to, ...
    [service(Service, date(Year, Month, Day), Multiplier, PointScore, Charge, Description, Justification, [tooth(Area, Postion), ...]), ... ],
    % Billed Material Costs are defined trough the Section of the GOZ which allows its billing, the date / session when it was rendered, its multiplier, ...
    [material_cost(GOZ_Section, date(Year, Month, Day), Multiplier, Count, Charge, Description, Justification, [tooth(Area, Postion), ...]), ... ],
    invoice_date(date(Year, Month, Day)),
    invoice_amount(InvoiceAmount)
).
% Charge = (round(PointValue in Euros * Multiplier * PointScore * 100)) / 100
% A Tooth on which a Service is applied is uniquely defined by the combination of its area and position in this area: tooth(Area, Postion) nummerated after the FDI-Zahnschema
% Area = 1 -> Right upper jaw
% Area = 2 -> Left upper jaw
% Area = 3 -> Left lower jaw
% Area = 4 -> Right lower jaw
% Position is exact position of this tooth in its area (from 1 to 8)
% Example invoice
invoice(
    [
        service(11111, date(2023, 10, 01), 1, 100, 5.62, 'Teeth Cleaning', '', [tooth(1,7)]),
        service(11111, date(2023, 10, 01), 1, 100, 5.62, 'Teeth Cleaning', '', [tooth(1,6)]),
        service(987654, date(2023, 10, 01), 3.5, 200, 39.37, 'Tooth Filling', 'Very time consuming', [tooth(1,7), tooth(1,6)]),
        service(123456, date(2023, 10, 02), 2.3, 150, 19.40, 'Consultation', '', [])
    ],
    [
        material_cost('§ 4 (1)', date(2023, 10, 02), 1, 1, 40.00, 'Fill Material', 'Auslagen', [tooth(1,7), tooth(1,6)])
    ]
    invoice_date(date(2023, 10, 04),
    invoice_amount(110.01)
).
```
The 8 rules indicate conditions and restrictions stated in the GOZ that should be adhered to when creating an invoice.
We want to mark invoices as invalid if they do not adhere to those rules.
Which of those rules can you translate into prolog code given following restriction:
Only translate the rules as they are, do not include any examples.
Be as accurate as possible.
You must be able to exactly define every new predicate based on the given ones.
Do not make any assumptions which are not given.
Translate the rules where a translation given the restrictions is possible.
To determine if an invoice is correct, use the predicate 
```prolog
is_invoice_invalid(Invoice) : -
    Invoice = invoice(Services, Material_Costs, invoice_date(date(Year, Month, Day), invoice_amount(InvoiceAmount)),
    % The corresponding rule (only one rule for each predicate)
    % Please double check that the prolog code you write in here is semantically equivalent to the rule in the text.
    print(...), % When rule is not fulfilled and therefore the invoice is invalid, print the reason for the invalidity of the invoice
    true. % Then the invoice is invalid.
```
Use this predicate to check each rule individually. Before you translate a rule, think about it.
Expected format:
---
Rule 1:
Thoughts: ...
Translation:
```prolog
% code here (is_invoice_invalid/1 predicate with potential helper predicates for this rule)
```
---
Rule 2:
Thoughts: ...
Translation:
```prolog
% code here (is_invoice_invalid/1 predicate with potential helper predicates for this rule)
```
---
... 

When you can not translate leaf the code section empty like this:
---
Rule X:
Thoughts: ...
Translation:
```prolog
```
---

So you should have a block for each of the 8 given rules at the end.
For translated rules include print statements, so that the user can see the reason for the invalidity of the invoice.
When you calculate with currencies, always round the result to two digits with round(X*100)/100 and always calculate in Euros (even after summation).
I only want to have exactly defined rules.
First, think step by step how you would translate a rule, then translate it. Explain your thoughts step by step.",1.0,1415.0,1642.0,0.14096999999999998,"
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(Date, (member(service(0500, Date, _, _, _, _, _, _), Services)), Dates),
    sort(Dates, SortedDates),
    maplist(count_services(Services, 0500), SortedDates, Counts),
    member(Count, Counts),
    Count > 1,
    print('The surcharge with the number 0500 is charged more than once on the same day.'),
    true.

count_services(Services, ServiceNumber, Date, Count) :-
    findall(_, (member(service(ServiceNumber, Date, _, _, _, _, _, _), Services)), ServiceList),
    length(ServiceList, Count).
"
241,500,"Zuschlag bei nichtstationärer Durch -
führung von zahnärztlich-chirurgi -
schen Leistungen, die mit Punkt -
zahlen von 250 bis 499 Punkten
bewertet sind, oder zu den Leis -
tungen nach den Nummern 4090
oder 4130
Der Zuschlag nach der Nummer 0500 ist je Behandlungstag nur
einmal berechnungsfähig. Der Zu -
schlag nach der Nummer 0500 ist
neben den Zuschlägen nach den
Nummern 0510 bis 0530 nicht be -
rechnungsfähig.",L_Zuschläge_zu_bestimmten,400.0,22.5,,,"References: Nummern 4090, 4130, 0500, 0510, 0530",,Der Zuschlag nach der Nummer 0500 ist neben den Zuschlägen nach den Nummern 0510 bis 0530 nicht berechnungsfähig.,,,,,,,,"
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(Date, (member(service(0500, Date, _, _, _, _, _, _), Services)), Dates),
    sort(Dates, SortedDates),
    (   member(Date, SortedDates),
        (   member(service(0510, Date, _, _, _, _, _, _), Services)
        ;   member(service(0520, Date, _, _, _, _, _, _), Services)
        ;   member(service(0530, Date, _, _, _, _, _, _), Services)
        ),
        print('The surcharge with the number 0500 is charged on the same day as a surcharge with the number 0510, 0520 or 0530.'),
        true
    ).
"
242,510,"Zuschlag bei nichtstationärer Durch -
führung von zahnärztlich-chirurgi -
schen Leistungen, die mit Punkt -
zahlen von 500 bis 799 Punkten
bewertet sind
Der Zuschlag nach der Nummer 0510 ist je Behandlungstag nur
einmal berechnungsfähig. Der Zu -
schlag nach der Nummer 0510 ist
neben den Zuschlägen nach den
Nummern 0500, 0520 und/oder 0530 nicht berechnungsfähig.",L_Zuschläge_zu_bestimmten,750.0,42.18,,,"References: Nummer 0510, Nummer 0500, Nummer 0520, Nummer 0530",,Der Zuschlag nach der Nummer 0510 ist je Behandlungstag nur einmal berechnungsfähig.,,,,,,,,"
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(Date, (member(service(0510, Date, _, _, _, _, _, _), Services)), Dates),
    sort(Dates, SortedDates),
    maplist(count_services(Services, 0510), SortedDates, Counts),
    member(Count, Counts),
    Count > 1,
    print('The surcharge with the number 0510 is charged more than once on the same day.'),
    true.
"
243,510,"Zuschlag bei nichtstationärer Durch -
führung von zahnärztlich-chirurgi -
schen Leistungen, die mit Punkt -
zahlen von 500 bis 799 Punkten
bewertet sind
Der Zuschlag nach der Nummer 0510 ist je Behandlungstag nur
einmal berechnungsfähig. Der Zu -
schlag nach der Nummer 0510 ist
neben den Zuschlägen nach den
Nummern 0500, 0520 und/oder 0530 nicht berechnungsfähig.",L_Zuschläge_zu_bestimmten,750.0,42.18,,,"References: Nummer 0510, Nummer 0500, Nummer 0520, Nummer 0530",,"Der Zuschlag nach der Nummer 0510 ist neben den Zuschlägen nach den Nummern 0500, 0520 und/oder 0530 nicht berechnungsfähig.",,,,,,,,"
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(Date, (member(service(0510, Date, _, _, _, _, _, _), Services)), Dates),
    sort(Dates, SortedDates),
    (   member(Date, SortedDates),
        (   member(service(0500, Date, _, _, _, _, _, _), Services)
        ;   member(service(0520, Date, _, _, _, _, _, _), Services)
        ;   member(service(0530, Date, _, _, _, _, _, _), Services)
        ),
        print('The surcharge with the number 0510 is charged on the same day as a surcharge with the number 0500, 0520 or 0530.'),
        true
    ).
"
244,520,"Zuschlag bei nichtstationärer Durch -
führung von zahnärztlich-chirurgi -
schen Leistungen, die mit Punkt -
zahlen von 800 bis 1199 Punkten
bewertet sind
Der Zuschlag nach der Nummer 0520 ist je Behandlungstag nur
einmal berechnungsfähig. Der Zu -
schlag nach der Nummer 0520 ist
neben den Zuschlägen nach den
Nummern 0500, 0510 und/oder 0530 nicht berechnungsfähig.",L_Zuschläge_zu_bestimmten,1300.0,73.11,,,"References: Nummer 0520, Nummern 0500, 0510, 0530",,Der Zuschlag nach der Nummer 0520 ist je Behandlungstag nur einmal berechnungsfähig.,,,,,,,,"
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(Date, (member(service(0520, Date, _, _, _, _, _, _), Services)), Dates),
    sort(Dates, SortedDates),
    maplist(count_services(Services, 0520), SortedDates, Counts),
    member(Count, Counts),
    Count > 1,
    print('The surcharge with the number 0520 is charged more than once on the same day.'),
    true.
"
245,520,"Zuschlag bei nichtstationärer Durch -
führung von zahnärztlich-chirurgi -
schen Leistungen, die mit Punkt -
zahlen von 800 bis 1199 Punkten
bewertet sind
Der Zuschlag nach der Nummer 0520 ist je Behandlungstag nur
einmal berechnungsfähig. Der Zu -
schlag nach der Nummer 0520 ist
neben den Zuschlägen nach den
Nummern 0500, 0510 und/oder 0530 nicht berechnungsfähig.",L_Zuschläge_zu_bestimmten,1300.0,73.11,,,"References: Nummer 0520, Nummern 0500, 0510, 0530",,"Der Zuschlag nach der Nummer 0520 ist neben den Zuschlägen nach den Nummern 0500, 0510 und/oder 0530 nicht berechnungsfähig.",,,,,,,,"
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(Date, (member(service(0520, Date, _, _, _, _, _, _), Services)), Dates),
    sort(Dates, SortedDates),
    (   member(Date, SortedDates),
        (   member(service(0500, Date, _, _, _, _, _, _), Services)
        ;   member(service(0510, Date, _, _, _, _, _, _), Services)
        ;   member(service(0530, Date, _, _, _, _, _, _), Services)
        ),
        print('The surcharge with the number 0520 is charged on the same day as a surcharge with the number 0500, 0510 or 0530.'),
        true
    ).
"
246,530,"Zuschlag bei nichtstationärer Durch -
führung von zahnärztlich-chirurgi -
schen Leistungen, die mit Punkt -
zahlen von 1200 und mehr
Punkten bewertet sind
Der Zuschlag nach der Nummer 0530 ist je Behandlungstag nur
einmal berechnungsfähig. Der Zu -
schlag nach der Nummer 0530 ist
neben den Zuschlägen nach den
Nummern 0500 bis 0520 nicht be -
rechnungsfähig.",L_Zuschläge_zu_bestimmten,2200.0,123.73,,,"References: Nummer 0530, Nummern 0500 bis 0520",,Der Zuschlag nach der Nummer 0530 ist je Behandlungstag nur einmal berechnungsfähig.,,,,,,,,"
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(Date, (member(service(0530, Date, _, _, _, _, _, _), Services)), Dates),
    sort(Dates, SortedDates),
    maplist(count_services(Services, 0530), SortedDates, Counts),
    member(Count, Counts),
    Count > 1,
    print('The surcharge with the number 0530 is charged more than once on the same day.'),
    true.
"
247,530,"Zuschlag bei nichtstationärer Durch -
führung von zahnärztlich-chirurgi -
schen Leistungen, die mit Punkt -
zahlen von 1200 und mehr
Punkten bewertet sind
Der Zuschlag nach der Nummer 0530 ist je Behandlungstag nur
einmal berechnungsfähig. Der Zu -
schlag nach der Nummer 0530 ist
neben den Zuschlägen nach den
Nummern 0500 bis 0520 nicht be -
rechnungsfähig.",L_Zuschläge_zu_bestimmten,2200.0,123.73,,,"References: Nummer 0530, Nummern 0500 bis 0520",,Der Zuschlag nach der Nummer 0530 ist neben den Zuschlägen nach den Nummern 0500 bis 0520 nicht berechnungsfähig.,,,,,,,,"
is_invoice_invalid(Invoice) :-
    Invoice = invoice(Services, _, _, _),
    findall(Date, (member(service(0530, Date, _, _, _, _, _, _), Services)), Dates),
    sort(Dates, SortedDates),
    (   member(Date, SortedDates),
        (   member(service(0500, Date, _, _, _, _, _, _), Services)
        ;   member(service(0510, Date, _, _, _, _, _, _), Services)
        ;   member(service(0520, Date, _, _, _, _, _, _), Services)
        ),
        print('The surcharge with the number 0530 is charged on the same day as a surcharge with the number 0500, 0510 or 0520.'),
        true
    ).
"
